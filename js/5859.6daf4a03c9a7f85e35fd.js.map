{"version":3,"file":"js/5859.6daf4a03c9a7f85e35fd.js","mappings":"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","sources":["webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/DESTROY_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/FADE_IN_COMPLETE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/FADE_IN_START_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/FADE_OUT_COMPLETE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/FADE_OUT_START_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/FLASH_COMPLETE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/FLASH_START_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/FOLLOW_UPDATE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/PAN_COMPLETE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/PAN_START_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/POST_RENDER_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/PRE_RENDER_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/ROTATE_COMPLETE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/ROTATE_START_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/SHAKE_COMPLETE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/SHAKE_START_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/ZOOM_COMPLETE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/ZOOM_START_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/cameras/2d/events/index.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/display/canvas/CanvasPool.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/display/canvas/Smoothing.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/renderer/webgl/RenderTarget.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/array/Remove.js"],"sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Destroy Camera Event.\r\n * \r\n * This event is dispatched by a Camera instance when it is destroyed by the Camera Manager.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#DESTROY\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.BaseCamera} camera - The camera that was destroyed.\r\n */\r\nmodule.exports = 'cameradestroy';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Fade In Complete Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Fade In Effect completes.\r\n * \r\n * Listen to it from a Camera instance using `Camera.on('camerafadeincomplete', listener)`.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#FADE_IN_COMPLETE\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Fade} effect - A reference to the effect instance.\r\n */\r\nmodule.exports = 'camerafadeincomplete';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Fade In Start Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Fade In Effect starts.\r\n * \r\n * Listen to it from a Camera instance using `Camera.on('camerafadeinstart', listener)`.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#FADE_IN_START\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Fade} effect - A reference to the effect instance.\r\n * @param {number} duration - The duration of the effect.\r\n * @param {number} red - The red color channel value.\r\n * @param {number} green - The green color channel value.\r\n * @param {number} blue - The blue color channel value.\r\n */\r\nmodule.exports = 'camerafadeinstart';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Fade Out Complete Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Fade Out Effect completes.\r\n * \r\n * Listen to it from a Camera instance using `Camera.on('camerafadeoutcomplete', listener)`.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#FADE_OUT_COMPLETE\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Fade} effect - A reference to the effect instance.\r\n */\r\nmodule.exports = 'camerafadeoutcomplete';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Fade Out Start Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Fade Out Effect starts.\r\n * \r\n * Listen to it from a Camera instance using `Camera.on('camerafadeoutstart', listener)`.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#FADE_OUT_START\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Fade} effect - A reference to the effect instance.\r\n * @param {number} duration - The duration of the effect.\r\n * @param {number} red - The red color channel value.\r\n * @param {number} green - The green color channel value.\r\n * @param {number} blue - The blue color channel value.\r\n */\r\nmodule.exports = 'camerafadeoutstart';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Flash Complete Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Flash Effect completes.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#FLASH_COMPLETE\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Flash} effect - A reference to the effect instance.\r\n */\r\nmodule.exports = 'cameraflashcomplete';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Flash Start Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Flash Effect starts.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#FLASH_START\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Flash} effect - A reference to the effect instance.\r\n * @param {number} duration - The duration of the effect.\r\n * @param {number} red - The red color channel value.\r\n * @param {number} green - The green color channel value.\r\n * @param {number} blue - The blue color channel value.\r\n */\r\nmodule.exports = 'cameraflashstart';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Follower Update Event.\r\n *\r\n * This event is dispatched by a Camera instance when it is following a\r\n * Game Object and the Camera position has been updated as a result of\r\n * that following.\r\n *\r\n * Listen to it from a Camera instance using: `camera.on('followupdate', listener)`.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#FOLLOW_UPDATE\r\n * @since 3.50.0\r\n *\r\n * @param {Phaser.Cameras.Scene2D.BaseCamera} camera - The camera that emitted the event.\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The Game Object the camera is following.\r\n */\r\nmodule.exports = 'followupdate';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Pan Complete Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Pan Effect completes.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#PAN_COMPLETE\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Pan} effect - A reference to the effect instance.\r\n */\r\nmodule.exports = 'camerapancomplete';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Pan Start Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Pan Effect starts.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#PAN_START\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Pan} effect - A reference to the effect instance.\r\n * @param {number} duration - The duration of the effect.\r\n * @param {number} x - The destination scroll x coordinate.\r\n * @param {number} y - The destination scroll y coordinate.\r\n */\r\nmodule.exports = 'camerapanstart';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Post-Render Event.\r\n * \r\n * This event is dispatched by a Camera instance after is has finished rendering.\r\n * It is only dispatched if the Camera is rendering to a texture.\r\n * \r\n * Listen to it from a Camera instance using: `camera.on('postrender', listener)`.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#POST_RENDER\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.BaseCamera} camera - The camera that has finished rendering to a texture.\r\n */\r\nmodule.exports = 'postrender';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Pre-Render Event.\r\n * \r\n * This event is dispatched by a Camera instance when it is about to render.\r\n * It is only dispatched if the Camera is rendering to a texture.\r\n * \r\n * Listen to it from a Camera instance using: `camera.on('prerender', listener)`.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#PRE_RENDER\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.BaseCamera} camera - The camera that is about to render to a texture.\r\n */\r\nmodule.exports = 'prerender';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Rotate Complete Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Rotate Effect completes.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#ROTATE_COMPLETE\r\n * @since 3.23.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.RotateTo} effect - A reference to the effect instance.\r\n */\r\nmodule.exports = 'camerarotatecomplete';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Rotate Start Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Rotate Effect starts.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#ROTATE_START\r\n * @since 3.23.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.RotateTo} effect - A reference to the effect instance.\r\n * @param {number} duration - The duration of the effect.\r\n * @param {number} destination - The destination value.\r\n */\r\nmodule.exports = 'camerarotatestart';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Shake Complete Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Shake Effect completes.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#SHAKE_COMPLETE\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Shake} effect - A reference to the effect instance.\r\n */\r\nmodule.exports = 'camerashakecomplete';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Shake Start Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Shake Effect starts.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#SHAKE_START\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Shake} effect - A reference to the effect instance.\r\n * @param {number} duration - The duration of the effect.\r\n * @param {number} intensity - The intensity of the effect.\r\n */\r\nmodule.exports = 'camerashakestart';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Zoom Complete Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Zoom Effect completes.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#ZOOM_COMPLETE\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Zoom} effect - A reference to the effect instance.\r\n */\r\nmodule.exports = 'camerazoomcomplete';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Camera Zoom Start Event.\r\n * \r\n * This event is dispatched by a Camera instance when the Zoom Effect starts.\r\n *\r\n * @event Phaser.Cameras.Scene2D.Events#ZOOM_START\r\n * @since 3.3.0\r\n * \r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera that the effect began on.\r\n * @param {Phaser.Cameras.Scene2D.Effects.Zoom} effect - A reference to the effect instance.\r\n * @param {number} duration - The duration of the effect.\r\n * @param {number} zoom - The destination zoom value.\r\n */\r\nmodule.exports = 'camerazoomstart';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Cameras.Scene2D.Events\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    DESTROY: require('./DESTROY_EVENT'),\r\n    FADE_IN_COMPLETE: require('./FADE_IN_COMPLETE_EVENT'),\r\n    FADE_IN_START: require('./FADE_IN_START_EVENT'),\r\n    FADE_OUT_COMPLETE: require('./FADE_OUT_COMPLETE_EVENT'),\r\n    FADE_OUT_START: require('./FADE_OUT_START_EVENT'),\r\n    FLASH_COMPLETE: require('./FLASH_COMPLETE_EVENT'),\r\n    FLASH_START: require('./FLASH_START_EVENT'),\r\n    FOLLOW_UPDATE: require('./FOLLOW_UPDATE_EVENT'),\r\n    PAN_COMPLETE: require('./PAN_COMPLETE_EVENT'),\r\n    PAN_START: require('./PAN_START_EVENT'),\r\n    POST_RENDER: require('./POST_RENDER_EVENT'),\r\n    PRE_RENDER: require('./PRE_RENDER_EVENT'),\r\n    ROTATE_COMPLETE: require('./ROTATE_COMPLETE_EVENT'),\r\n    ROTATE_START: require('./ROTATE_START_EVENT'),\r\n    SHAKE_COMPLETE: require('./SHAKE_COMPLETE_EVENT'),\r\n    SHAKE_START: require('./SHAKE_START_EVENT'),\r\n    ZOOM_COMPLETE: require('./ZOOM_COMPLETE_EVENT'),\r\n    ZOOM_START: require('./ZOOM_START_EVENT')\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar CONST = require('../../const');\r\nvar Smoothing = require('./Smoothing');\r\n\r\n// The pool into which the canvas elements are placed.\r\nvar pool = [];\r\n\r\n//  Automatically apply smoothing(false) to created Canvas elements\r\nvar _disableContextSmoothing = false;\r\n\r\n/**\r\n * The CanvasPool is a global static object, that allows Phaser to recycle and pool 2D Context Canvas DOM elements.\r\n * It does not pool WebGL Contexts, because once the context options are set they cannot be modified again, \r\n * which is useless for some of the Phaser pipelines / renderer.\r\n *\r\n * This singleton is instantiated as soon as Phaser loads, before a Phaser.Game instance has even been created.\r\n * Which means all instances of Phaser Games on the same page can share the one single pool.\r\n *\r\n * @namespace Phaser.Display.Canvas.CanvasPool\r\n * @since 3.0.0\r\n */\r\nvar CanvasPool = function ()\r\n{\r\n    /**\r\n     * Creates a new Canvas DOM element, or pulls one from the pool if free.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.create\r\n     * @since 3.0.0\r\n     *\r\n     * @param {*} parent - The parent of the Canvas object.\r\n     * @param {number} [width=1] - The width of the Canvas.\r\n     * @param {number} [height=1] - The height of the Canvas.\r\n     * @param {number} [canvasType=Phaser.CANVAS] - The type of the Canvas. Either `Phaser.CANVAS` or `Phaser.WEBGL`.\r\n     * @param {boolean} [selfParent=false] - Use the generated Canvas element as the parent?\r\n     *\r\n     * @return {HTMLCanvasElement} The canvas element that was created or pulled from the pool\r\n     */\r\n    var create = function (parent, width, height, canvasType, selfParent)\r\n    {\r\n        if (width === undefined) { width = 1; }\r\n        if (height === undefined) { height = 1; }\r\n        if (canvasType === undefined) { canvasType = CONST.CANVAS; }\r\n        if (selfParent === undefined) { selfParent = false; }\r\n\r\n        var canvas;\r\n        var container = first(canvasType);\r\n\r\n        if (container === null)\r\n        {\r\n            container = {\r\n                parent: parent,\r\n                canvas: document.createElement('canvas'),\r\n                type: canvasType\r\n            };\r\n\r\n            if (canvasType === CONST.CANVAS)\r\n            {\r\n                pool.push(container);\r\n            }\r\n\r\n            canvas = container.canvas;\r\n        }\r\n        else\r\n        {\r\n            container.parent = parent;\r\n\r\n            canvas = container.canvas;\r\n        }\r\n\r\n        if (selfParent)\r\n        {\r\n            container.parent = canvas;\r\n        }\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        if (_disableContextSmoothing && canvasType === CONST.CANVAS)\r\n        {\r\n            Smoothing.disable(canvas.getContext('2d'));\r\n        }\r\n\r\n        return canvas;\r\n    };\r\n\r\n    /**\r\n     * Creates a new Canvas DOM element, or pulls one from the pool if free.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.create2D\r\n     * @since 3.0.0\r\n     *\r\n     * @param {*} parent - The parent of the Canvas object.\r\n     * @param {number} [width=1] - The width of the Canvas.\r\n     * @param {number} [height=1] - The height of the Canvas.\r\n     *\r\n     * @return {HTMLCanvasElement} The created canvas.\r\n     */\r\n    var create2D = function (parent, width, height)\r\n    {\r\n        return create(parent, width, height, CONST.CANVAS);\r\n    };\r\n\r\n    /**\r\n     * Creates a new Canvas DOM element, or pulls one from the pool if free.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.createWebGL\r\n     * @since 3.0.0\r\n     *\r\n     * @param {*} parent - The parent of the Canvas object.\r\n     * @param {number} [width=1] - The width of the Canvas.\r\n     * @param {number} [height=1] - The height of the Canvas.\r\n     *\r\n     * @return {HTMLCanvasElement} The created WebGL canvas.\r\n     */\r\n    var createWebGL = function (parent, width, height)\r\n    {\r\n        return create(parent, width, height, CONST.WEBGL);\r\n    };\r\n\r\n    /**\r\n     * Gets the first free canvas index from the pool.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.first\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [canvasType=Phaser.CANVAS] - The type of the Canvas. Either `Phaser.CANVAS` or `Phaser.WEBGL`.\r\n     *\r\n     * @return {HTMLCanvasElement} The first free canvas, or `null` if a WebGL canvas was requested or if the pool doesn't have free canvases.\r\n     */\r\n    var first = function (canvasType)\r\n    {\r\n        if (canvasType === undefined) { canvasType = CONST.CANVAS; }\r\n\r\n        if (canvasType === CONST.WEBGL)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        for (var i = 0; i < pool.length; i++)\r\n        {\r\n            var container = pool[i];\r\n\r\n            if (!container.parent && container.type === canvasType)\r\n            {\r\n                return container;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Looks up a canvas based on its parent, and if found puts it back in the pool, freeing it up for re-use.\r\n     * The canvas has its width and height set to 1, and its parent attribute nulled.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.remove\r\n     * @since 3.0.0\r\n     *\r\n     * @param {*} parent - The canvas or the parent of the canvas to free.\r\n     */\r\n    var remove = function (parent)\r\n    {\r\n        //  Check to see if the parent is a canvas object\r\n        var isCanvas = parent instanceof HTMLCanvasElement;\r\n\r\n        pool.forEach(function (container)\r\n        {\r\n            if ((isCanvas && container.canvas === parent) || (!isCanvas && container.parent === parent))\r\n            {\r\n                container.parent = null;\r\n                container.canvas.width = 1;\r\n                container.canvas.height = 1;\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Gets the total number of used canvas elements in the pool.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.total\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The number of used canvases.\r\n     */\r\n    var total = function ()\r\n    {\r\n        var c = 0;\r\n\r\n        pool.forEach(function (container)\r\n        {\r\n            if (container.parent)\r\n            {\r\n                c++;\r\n            }\r\n        });\r\n\r\n        return c;\r\n    };\r\n\r\n    /**\r\n     * Gets the total number of free canvas elements in the pool.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.free\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The number of free canvases.\r\n     */\r\n    var free = function ()\r\n    {\r\n        return pool.length - total();\r\n    };\r\n\r\n    /**\r\n     * Disable context smoothing on any new Canvas element created.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.disableSmoothing\r\n     * @since 3.0.0\r\n     */\r\n    var disableSmoothing = function ()\r\n    {\r\n        _disableContextSmoothing = true;\r\n    };\r\n\r\n    /**\r\n     * Enable context smoothing on any new Canvas element created.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.enableSmoothing\r\n     * @since 3.0.0\r\n     */\r\n    var enableSmoothing = function ()\r\n    {\r\n        _disableContextSmoothing = false;\r\n    };\r\n\r\n    return {\r\n        create2D: create2D,\r\n        create: create,\r\n        createWebGL: createWebGL,\r\n        disableSmoothing: disableSmoothing,\r\n        enableSmoothing: enableSmoothing,\r\n        first: first,\r\n        free: free,\r\n        pool: pool,\r\n        remove: remove,\r\n        total: total\r\n    };\r\n};\r\n\r\n//  If we export the called function here, it'll only be invoked once (not every time it's required).\r\nmodule.exports = CanvasPool();\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Browser specific prefix, so not going to change between contexts, only between browsers\r\nvar prefix = '';\r\n\r\n/**\r\n * @namespace Phaser.Display.Canvas.Smoothing\r\n * @since 3.0.0\r\n */\r\nvar Smoothing = function ()\r\n{\r\n    /**\r\n     * Gets the Smoothing Enabled vendor prefix being used on the given context, or null if not set.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.getPrefix\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The canvas context to check.\r\n     *\r\n     * @return {string} The name of the property on the context which controls image smoothing (either `imageSmoothingEnabled` or a vendor-prefixed version thereof), or `null` if not supported.\r\n     */\r\n    var getPrefix = function (context)\r\n    {\r\n        var vendors = [ 'i', 'webkitI', 'msI', 'mozI', 'oI' ];\r\n\r\n        for (var i = 0; i < vendors.length; i++)\r\n        {\r\n            var s = vendors[i] + 'mageSmoothingEnabled';\r\n\r\n            if (s in context)\r\n            {\r\n                return s;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Sets the Image Smoothing property on the given context. Set to false to disable image smoothing.\r\n     * By default browsers have image smoothing enabled, which isn't always what you visually want, especially\r\n     * when using pixel art in a game. Note that this sets the property on the context itself, so that any image\r\n     * drawn to the context will be affected. This sets the property across all current browsers but support is\r\n     * patchy on earlier browsers, especially on mobile.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.enable\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context on which to enable smoothing.\r\n     *\r\n     * @return {(CanvasRenderingContext2D|WebGLRenderingContext)} The provided context.\r\n     */\r\n    var enable = function (context)\r\n    {\r\n        if (prefix === '')\r\n        {\r\n            prefix = getPrefix(context);\r\n        }\r\n\r\n        if (prefix)\r\n        {\r\n            context[prefix] = true;\r\n        }\r\n\r\n        return context;\r\n    };\r\n\r\n    /**\r\n     * Sets the Image Smoothing property on the given context. Set to false to disable image smoothing.\r\n     * By default browsers have image smoothing enabled, which isn't always what you visually want, especially\r\n     * when using pixel art in a game. Note that this sets the property on the context itself, so that any image\r\n     * drawn to the context will be affected. This sets the property across all current browsers but support is\r\n     * patchy on earlier browsers, especially on mobile.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.disable\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context on which to disable smoothing.\r\n     *\r\n     * @return {(CanvasRenderingContext2D|WebGLRenderingContext)} The provided context.\r\n     */\r\n    var disable = function (context)\r\n    {\r\n        if (prefix === '')\r\n        {\r\n            prefix = getPrefix(context);\r\n        }\r\n\r\n        if (prefix)\r\n        {\r\n            context[prefix] = false;\r\n        }\r\n\r\n        return context;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the given context has image smoothing enabled, otherwise returns `false`.\r\n     * Returns null if no smoothing prefix is available.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.isEnabled\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context to check.\r\n     *\r\n     * @return {?boolean} `true` if smoothing is enabled on the context, otherwise `false`. `null` if not supported.\r\n     */\r\n    var isEnabled = function (context)\r\n    {\r\n        return (prefix !== null) ? context[prefix] : null;\r\n    };\r\n\r\n    return {\r\n        disable: disable,\r\n        enable: enable,\r\n        getPrefix: getPrefix,\r\n        isEnabled: isEnabled\r\n    };\r\n\r\n};\r\n\r\nmodule.exports = Smoothing();\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Events = require('../events');\r\n\r\n/**\r\n * @classdesc\r\n * A Render Target encapsulates a WebGL framebuffer and the WebGL Texture that displays it.\r\n *\r\n * Instances of this class are typically created by, and belong to WebGL Pipelines, however\r\n * other Game Objects and classes can take advantage of Render Targets as well.\r\n *\r\n * @class RenderTarget\r\n * @memberof Phaser.Renderer.WebGL\r\n * @constructor\r\n * @since 3.50.0\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the WebGLRenderer.\r\n * @param {number} width - The width of this Render Target.\r\n * @param {number} height - The height of this Render Target.\r\n * @param {number} [scale=1] - A value between 0 and 1. Controls the size of this Render Target in relation to the Renderer.\r\n * @param {number} [minFilter=0] - The minFilter mode of the texture when created. 0 is `LINEAR`, 1 is `NEAREST`.\r\n * @param {boolean} [autoClear=true] - Automatically clear this framebuffer when bound?\r\n * @param {boolean} [autoResize=false] - Automatically resize this Render Target if the WebGL Renderer resizes?\r\n */\r\nvar RenderTarget = new Class({\r\n\r\n    initialize:\r\n\r\n    function RenderTarget (renderer, width, height, scale, minFilter, autoClear, autoResize)\r\n    {\r\n        if (scale === undefined) { scale = 1; }\r\n        if (minFilter === undefined) { minFilter = 0; }\r\n        if (autoClear === undefined) { autoClear = true; }\r\n        if (autoResize === undefined) { autoResize = false; }\r\n\r\n        /**\r\n         * A reference to the WebGLRenderer instance.\r\n         *\r\n         * @name Phaser.Renderer.WebGL.RenderTarget#renderer\r\n         * @type {Phaser.Renderer.WebGL.WebGLRenderer}\r\n         * @since 3.50.0\r\n         */\r\n        this.renderer = renderer;\r\n\r\n        /**\r\n         * The WebGLFramebuffer of this Render Target.\r\n         *\r\n         * This is created in the `RenderTarget.resize` method.\r\n         *\r\n         * @name Phaser.Renderer.WebGL.RenderTarget#framebuffer\r\n         * @type {WebGLFramebuffer}\r\n         * @since 3.50.0\r\n         */\r\n        this.framebuffer = null;\r\n\r\n        /**\r\n         * The WebGLTexture of this Render Target.\r\n         *\r\n         * This is created in the `RenderTarget.resize` method.\r\n         *\r\n         * @name Phaser.Renderer.WebGL.RenderTarget#texture\r\n         * @type {WebGLTexture}\r\n         * @since 3.50.0\r\n         */\r\n        this.texture = null;\r\n\r\n        /**\r\n         * The width of the texture.\r\n         *\r\n         * @name Phaser.Renderer.WebGL.RenderTarget#width\r\n         * @type {number}\r\n         * @readonly\r\n         * @since 3.50.0\r\n         */\r\n        this.width = 0;\r\n\r\n        /**\r\n         * The height of the texture.\r\n         *\r\n         * @name Phaser.Renderer.WebGL.RenderTarget#height\r\n         * @type {number}\r\n         * @readonly\r\n         * @since 3.50.0\r\n         */\r\n        this.height = 0;\r\n\r\n        /**\r\n         * A value between 0 and 1. Controls the size of this Render Target in relation to the Renderer.\r\n         *\r\n         * A value of 1 matches it. 0.5 makes the Render Target half the size of the renderer, etc.\r\n         *\r\n         * @name Phaser.Renderer.WebGL.RenderTarget#scale\r\n         * @type {number}\r\n         * @since 3.50.0\r\n         */\r\n        this.scale = scale;\r\n\r\n        /**\r\n         * The minFilter mode of the texture. 0 is `LINEAR`, 1 is `NEAREST`.\r\n         *\r\n         * @name Phaser.Renderer.WebGL.RenderTarget#minFilter\r\n         * @type {number}\r\n         * @since 3.50.0\r\n         */\r\n        this.minFilter = minFilter;\r\n\r\n        /**\r\n         * Controls if this Render Target is automatically cleared (via `gl.COLOR_BUFFER_BIT`)\r\n         * during the `RenderTarget.bind` method.\r\n         *\r\n         * If you need more control over how, or if, the target is cleared, you can disable\r\n         * this via the config on creation, or even toggle it directly at runtime.\r\n         *\r\n         * @name Phaser.Renderer.WebGL.RenderTarget#autoClear\r\n         * @type {boolean}\r\n         * @since 3.50.0\r\n         */\r\n        this.autoClear = autoClear;\r\n\r\n        /**\r\n         * Does this Render Target automatically resize when the WebGL Renderer does?\r\n         *\r\n         * Modify this property via the `setAutoResize` method.\r\n         *\r\n         * @name Phaser.Renderer.WebGL.RenderTarget#autoResize\r\n         * @type {boolean}\r\n         * @readonly\r\n         * @since 3.50.0\r\n         */\r\n        this.autoResize = false;\r\n\r\n        this.resize(width, height);\r\n\r\n        if (autoResize)\r\n        {\r\n            this.setAutoResize(true);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets if this Render Target should automatically resize when the WebGL Renderer\r\n     * emits a resize event.\r\n     *\r\n     * @method Phaser.Renderer.WebGL.RenderTarget#setAutoResize\r\n     * @since 3.50.0\r\n     *\r\n     * @param {boolean} autoResize - Automatically resize this Render Target when the WebGL Renderer resizes?\r\n     *\r\n     * @return {this} This RenderTarget instance.\r\n     */\r\n    setAutoResize: function (autoResize)\r\n    {\r\n        if (autoResize && !this.autoResize)\r\n        {\r\n            this.renderer.on(Events.RESIZE, this.resize, this);\r\n\r\n            this.autoResize = true;\r\n        }\r\n        else if (!autoResize && this.autoResize)\r\n        {\r\n            this.renderer.off(Events.RESIZE, this.resize, this);\r\n\r\n            this.autoResize = false;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resizes this Render Target.\r\n     *\r\n     * Deletes both the frame buffer and texture, if they exist and then re-creates\r\n     * them using the new sizes.\r\n     *\r\n     * This method is called automatically by the pipeline during its resize handler.\r\n     *\r\n     * @method Phaser.Renderer.WebGL.RenderTarget#resize\r\n     * @since 3.50.0\r\n     *\r\n     * @param {number} width - The new width of this Render Target.\r\n     * @param {number} height - The new height of this Render Target.\r\n     *\r\n     * @return {this} This RenderTarget instance.\r\n     */\r\n    resize: function (width, height)\r\n    {\r\n        var scaledWidth = width * this.scale;\r\n        var scaledHeight = height * this.scale;\r\n\r\n        if (scaledWidth !== this.width || scaledHeight !== this.height)\r\n        {\r\n            var renderer = this.renderer;\r\n\r\n            renderer.deleteFramebuffer(this.framebuffer);\r\n\r\n            renderer.deleteTexture(this.texture);\r\n\r\n            width *= this.scale;\r\n            height *= this.scale;\r\n\r\n            width = Math.round(width);\r\n            height = Math.round(height);\r\n\r\n            if (width <= 0)\r\n            {\r\n                width = 1;\r\n            }\r\n\r\n            if (height <= 0)\r\n            {\r\n                height = 1;\r\n            }\r\n\r\n            this.texture = renderer.createTextureFromSource(null, width, height, this.minFilter);\r\n            this.framebuffer = renderer.createFramebuffer(width, height, this.texture, false);\r\n\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Pushes this Render Target as the current frame buffer of the renderer.\r\n     *\r\n     * If `autoClear` is set, then clears the texture.\r\n     *\r\n     * If `adjustViewport` is `true` then it will flush the renderer and then adjust the GL viewport.\r\n     *\r\n     * @method Phaser.Renderer.WebGL.RenderTarget#bind\r\n     * @since 3.50.0\r\n     *\r\n     * @param {boolean} [adjustViewport=false] - Adjust the GL viewport by calling `RenderTarget.adjustViewport` ?\r\n     * @param {number} [width] - Optional new width of this Render Target.\r\n     * @param {number} [height] - Optional new height of this Render Target.\r\n     */\r\n    bind: function (adjustViewport, width, height)\r\n    {\r\n        if (adjustViewport === undefined) { adjustViewport = false; }\r\n\r\n        if (adjustViewport)\r\n        {\r\n            this.renderer.flush();\r\n        }\r\n\r\n        if (width && height)\r\n        {\r\n            this.resize(width, height);\r\n        }\r\n\r\n        this.renderer.pushFramebuffer(this.framebuffer, false, false, false);\r\n\r\n        if (adjustViewport)\r\n        {\r\n            this.adjustViewport();\r\n        }\r\n\r\n        if (this.autoClear)\r\n        {\r\n            var gl = this.renderer.gl;\r\n\r\n            gl.clearColor(0, 0, 0, 0);\r\n\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adjusts the GL viewport to match the width and height of this Render Target.\r\n     *\r\n     * Also disables `SCISSOR_TEST`.\r\n     *\r\n     * @method Phaser.Renderer.WebGL.RenderTarget#adjustViewport\r\n     * @since 3.50.0\r\n     */\r\n    adjustViewport: function ()\r\n    {\r\n        var gl = this.renderer.gl;\r\n\r\n        gl.viewport(0, 0, this.width, this.height);\r\n\r\n        gl.disable(gl.SCISSOR_TEST);\r\n    },\r\n\r\n    /**\r\n     * Clears this Render Target.\r\n     *\r\n     * @method Phaser.Renderer.WebGL.RenderTarget#clear\r\n     * @since 3.50.0\r\n     */\r\n    clear: function ()\r\n    {\r\n        var renderer = this.renderer;\r\n        var gl = renderer.gl;\r\n\r\n        renderer.pushFramebuffer(this.framebuffer);\r\n\r\n        gl.disable(gl.SCISSOR_TEST);\r\n\r\n        gl.clearColor(0, 0, 0, 0);\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        renderer.popFramebuffer();\r\n\r\n        renderer.resetScissor();\r\n    },\r\n\r\n    /**\r\n     * Unbinds this Render Target and optionally flushes the WebGL Renderer first.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.RenderTarget#unbind\r\n     * @since 3.50.0\r\n     *\r\n     * @param {boolean} [flush=false] - Flush the WebGL Renderer before unbinding?\r\n     *\r\n     * @return {WebGLFramebuffer} The Framebuffer that was set, or `null` if there aren't any more in the stack.\r\n     */\r\n    unbind: function (flush)\r\n    {\r\n        if (flush === undefined) { flush = false; }\r\n\r\n        var renderer = this.renderer;\r\n\r\n        if (flush)\r\n        {\r\n            renderer.flush();\r\n        }\r\n\r\n        return renderer.popFramebuffer();\r\n    },\r\n\r\n    /**\r\n     * Removes all external references from this class and deletes the\r\n     * WebGL framebuffer and texture instances.\r\n     *\r\n     * Does not remove this Render Target from the parent pipeline.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.RenderTarget#destroy\r\n     * @since 3.50.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        var renderer = this.renderer;\r\n\r\n        renderer.deleteFramebuffer(this.framebuffer);\r\n        renderer.deleteTexture(this.texture);\r\n\r\n        renderer.off(Events.RESIZE, this.resize, this);\r\n\r\n        this.renderer = null;\r\n        this.framebuffer = null;\r\n        this.texture = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = RenderTarget;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar SpliceOne = require('./SpliceOne');\r\n\r\n/**\r\n * Removes the given item, or array of items, from the array.\r\n *\r\n * The array is modified in-place.\r\n *\r\n * You can optionally specify a callback to be invoked for each item successfully removed from the array.\r\n *\r\n * @function Phaser.Utils.Array.Remove\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to be modified.\r\n * @param {*|Array.<*>} item - The item, or array of items, to be removed from the array.\r\n * @param {function} [callback] - A callback to be invoked for each item successfully removed from the array.\r\n * @param {object} [context] - The context in which the callback is invoked.\r\n *\r\n * @return {*|Array.<*>} The item, or array of items, that were successfully removed from the array.\r\n */\r\nvar Remove = function (array, item, callback, context)\r\n{\r\n    if (context === undefined) { context = array; }\r\n\r\n    var index;\r\n\r\n    //  Fast path to avoid array mutation and iteration\r\n    if (!Array.isArray(item))\r\n    {\r\n        index = array.indexOf(item);\r\n\r\n        if (index !== -1)\r\n        {\r\n            SpliceOne(array, index);\r\n\r\n            if (callback)\r\n            {\r\n                callback.call(context, item);\r\n            }\r\n\r\n            return item;\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    //  If we got this far, we have an array of items to remove\r\n\r\n    var itemLength = item.length - 1;\r\n    var removed = [];\r\n\r\n    while (itemLength >= 0)\r\n    {\r\n        var entry = item[itemLength];\r\n\r\n        index = array.indexOf(entry);\r\n\r\n        if (index !== -1)\r\n        {\r\n            SpliceOne(array, index);\r\n\r\n            removed.push(entry);\r\n\r\n            if (callback)\r\n            {\r\n                callback.call(context, entry);\r\n            }\r\n        }\r\n\r\n        itemLength--;\r\n    }\r\n\r\n    return removed;\r\n};\r\n\r\nmodule.exports = Remove;\r\n"],"names":["module","exports","DESTROY","FADE_IN_COMPLETE","FADE_IN_START","FADE_OUT_COMPLETE","FADE_OUT_START","FLASH_COMPLETE","FLASH_START","FOLLOW_UPDATE","PAN_COMPLETE","PAN_START","POST_RENDER","PRE_RENDER","ROTATE_COMPLETE","ROTATE_START","SHAKE_COMPLETE","SHAKE_START","ZOOM_COMPLETE","ZOOM_START","create","first","total","CONST","Smoothing","pool","_disableContextSmoothing","c","forEach","container","parent","create2D","width","height","CANVAS","canvasType","selfParent","canvas","undefined","document","createElement","type","push","disable","getContext","createWebGL","WEBGL","disableSmoothing","enableSmoothing","i","length","free","remove","isCanvas","HTMLCanvasElement","getPrefix","prefix","context","enable","vendors","s","isEnabled","Class","Events","RenderTarget","initialize","renderer","scale","minFilter","autoClear","autoResize","this","framebuffer","texture","resize","setAutoResize","on","RESIZE","off","scaledWidth","scaledHeight","deleteFramebuffer","deleteTexture","Math","round","createTextureFromSource","createFramebuffer","bind","adjustViewport","flush","pushFramebuffer","gl","clearColor","clear","COLOR_BUFFER_BIT","viewport","SCISSOR_TEST","popFramebuffer","resetScissor","unbind","destroy","SpliceOne","array","item","callback","index","Array","isArray","indexOf","call","itemLength","removed","entry"],"sourceRoot":""}