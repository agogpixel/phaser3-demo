{"version":3,"file":"js/phaser-tweens.4900030f9449234d5bef.js","mappings":"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","sources":["webpack://@agogpixel/phaser3-demo/./node_modules/eventemitter3/index.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/gameobjects/GameObjectCreator.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/gameobjects/GameObjectFactory.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/RotateAround.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/TransformXY.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/angle/Wrap.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/angle/WrapDegrees.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/const.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/easing/EaseMap.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/plugins/PluginCache.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/Timeline.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/TweenManager.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/GetBoolean.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/GetEaseFunction.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/GetNewValue.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/GetProps.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/GetTargets.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/GetTweens.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/GetValueOp.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/NumberTweenBuilder.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/StaggerBuilder.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/TimelineBuilder.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/TweenBuilder.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/builders/index.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TIMELINE_COMPLETE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TIMELINE_LOOP_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TIMELINE_PAUSE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TIMELINE_RESUME_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TIMELINE_START_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TIMELINE_UPDATE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TWEEN_ACTIVE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TWEEN_COMPLETE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TWEEN_LOOP_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TWEEN_REPEAT_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TWEEN_START_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TWEEN_STOP_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TWEEN_UPDATE_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/TWEEN_YOYO_EVENT.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/events/index.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/index.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/tween/Defaults.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/tween/ReservedProps.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/tween/Tween.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/tween/TweenData.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/tweens/tween/const.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/array/Remove.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/array/SpliceOne.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/Clone.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/GetAdvancedValue.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/GetValue.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/string/UppercaseFirst.js"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar PluginCache = require('../plugins/PluginCache');\r\nvar SceneEvents = require('../scene/events');\r\n\r\n/**\r\n * @classdesc\r\n * The Game Object Creator is a Scene plugin that allows you to quickly create many common\r\n * types of Game Objects and return them. Unlike the Game Object Factory, they are not automatically\r\n * added to the Scene.\r\n *\r\n * Game Objects directly register themselves with the Creator and inject their own creation\r\n * methods into the class.\r\n *\r\n * @class GameObjectCreator\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object Factory belongs.\r\n */\r\nvar GameObjectCreator = new Class({\r\n\r\n    initialize:\r\n\r\n    function GameObjectCreator (scene)\r\n    {\r\n        /**\r\n         * The Scene to which this Game Object Creator belongs.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectCreator#scene\r\n         * @type {Phaser.Scene}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.scene = scene;\r\n\r\n        /**\r\n         * A reference to the Scene.Systems.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectCreator#systems\r\n         * @type {Phaser.Scenes.Systems}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.systems = scene.sys;\r\n\r\n        /**\r\n         * A reference to the Scene Event Emitter.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectCreator#events\r\n         * @type {Phaser.Events.EventEmitter}\r\n         * @protected\r\n         * @since 3.50.0\r\n         */\r\n        this.events = scene.sys.events;\r\n\r\n        /**\r\n         * A reference to the Scene Display List.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectCreator#displayList\r\n         * @type {Phaser.GameObjects.DisplayList}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.displayList;\r\n\r\n        /**\r\n         * A reference to the Scene Update List.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectCreator#updateList\r\n         * @type {Phaser.GameObjects.UpdateList}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.updateList;\r\n\r\n        this.events.once(SceneEvents.BOOT, this.boot, this);\r\n        this.events.on(SceneEvents.START, this.start, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically, only once, when the Scene is first created.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectCreator#boot\r\n     * @private\r\n     * @since 3.5.1\r\n     */\r\n    boot: function ()\r\n    {\r\n        this.displayList = this.systems.displayList;\r\n        this.updateList = this.systems.updateList;\r\n\r\n        this.events.once(SceneEvents.DESTROY, this.destroy, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically by the Scene when it is starting up.\r\n     * It is responsible for creating local systems, properties and listening for Scene events.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectCreator#start\r\n     * @private\r\n     * @since 3.5.0\r\n     */\r\n    start: function ()\r\n    {\r\n        this.events.once(SceneEvents.SHUTDOWN, this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is shutting down.\r\n     * We need to kill and reset all internal properties as well as stop listening to Scene events.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectCreator#shutdown\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    shutdown: function ()\r\n    {\r\n        this.events.off(SceneEvents.SHUTDOWN, this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is being destroyed.\r\n     * We need to shutdown and then kill off all external references.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectCreator#destroy\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n\r\n        this.events.off(SceneEvents.START, this.start, this);\r\n\r\n        this.scene = null;\r\n        this.systems = null;\r\n        this.events = null;\r\n\r\n        this.displayList = null;\r\n        this.updateList = null;\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * Static method called directly by the Game Object creator functions.\r\n * With this method you can register a custom GameObject factory in the GameObjectCreator,\r\n * providing a name (`factoryType`) and the constructor (`factoryFunction`) in order\r\n * to be called when you invoke Phaser.Scene.make[ factoryType ] method.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator.register\r\n * @static\r\n * @since 3.0.0\r\n *\r\n * @param {string} factoryType - The key of the factory that you will use to call to Phaser.Scene.make[ factoryType ] method.\r\n * @param {function} factoryFunction - The constructor function to be called when you invoke to the Phaser.Scene.make method.\r\n */\r\nGameObjectCreator.register = function (factoryType, factoryFunction)\r\n{\r\n    if (!GameObjectCreator.prototype.hasOwnProperty(factoryType))\r\n    {\r\n        GameObjectCreator.prototype[factoryType] = factoryFunction;\r\n    }\r\n};\r\n\r\n/**\r\n * Static method called directly by the Game Object Creator functions.\r\n *\r\n * With this method you can remove a custom Game Object Creator that has been previously\r\n * registered in the Game Object Creator. Pass in its `factoryType` in order to remove it.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator.remove\r\n * @static\r\n * @since 3.0.0\r\n *\r\n * @param {string} factoryType - The key of the factory that you want to remove from the GameObjectCreator.\r\n */\r\nGameObjectCreator.remove = function (factoryType)\r\n{\r\n    if (GameObjectCreator.prototype.hasOwnProperty(factoryType))\r\n    {\r\n        delete GameObjectCreator.prototype[factoryType];\r\n    }\r\n};\r\n\r\nPluginCache.register('GameObjectCreator', GameObjectCreator, 'make');\r\n\r\nmodule.exports = GameObjectCreator;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar PluginCache = require('../plugins/PluginCache');\r\nvar SceneEvents = require('../scene/events');\r\n\r\n/**\r\n * @classdesc\r\n * The Game Object Factory is a Scene plugin that allows you to quickly create many common\r\n * types of Game Objects and have them automatically registered with the Scene.\r\n *\r\n * Game Objects directly register themselves with the Factory and inject their own creation\r\n * methods into the class.\r\n *\r\n * @class GameObjectFactory\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object Factory belongs.\r\n */\r\nvar GameObjectFactory = new Class({\r\n\r\n    initialize:\r\n\r\n    function GameObjectFactory (scene)\r\n    {\r\n        /**\r\n         * The Scene to which this Game Object Factory belongs.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectFactory#scene\r\n         * @type {Phaser.Scene}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.scene = scene;\r\n\r\n        /**\r\n         * A reference to the Scene.Systems.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectFactory#systems\r\n         * @type {Phaser.Scenes.Systems}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.systems = scene.sys;\r\n\r\n        /**\r\n         * A reference to the Scene Event Emitter.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectFactory#events\r\n         * @type {Phaser.Events.EventEmitter}\r\n         * @protected\r\n         * @since 3.50.0\r\n         */\r\n        this.events = scene.sys.events;\r\n\r\n        /**\r\n         * A reference to the Scene Display List.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectFactory#displayList\r\n         * @type {Phaser.GameObjects.DisplayList}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.displayList;\r\n\r\n        /**\r\n         * A reference to the Scene Update List.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectFactory#updateList\r\n         * @type {Phaser.GameObjects.UpdateList}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.updateList;\r\n\r\n        this.events.once(SceneEvents.BOOT, this.boot, this);\r\n        this.events.on(SceneEvents.START, this.start, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically, only once, when the Scene is first created.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#boot\r\n     * @private\r\n     * @since 3.5.1\r\n     */\r\n    boot: function ()\r\n    {\r\n        this.displayList = this.systems.displayList;\r\n        this.updateList = this.systems.updateList;\r\n\r\n        this.events.once(SceneEvents.DESTROY, this.destroy, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically by the Scene when it is starting up.\r\n     * It is responsible for creating local systems, properties and listening for Scene events.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#start\r\n     * @private\r\n     * @since 3.5.0\r\n     */\r\n    start: function ()\r\n    {\r\n        this.events.once(SceneEvents.SHUTDOWN, this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * Adds an existing Game Object to this Scene.\r\n     *\r\n     * If the Game Object renders, it will be added to the Display List.\r\n     * If it has a `preUpdate` method, it will be added to the Update List.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#existing\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {(Phaser.GameObjects.GameObject|Phaser.GameObjects.Group|Phaser.GameObjects.Layer)} G - [child,$return]\r\n     *\r\n     * @param {(Phaser.GameObjects.GameObject|Phaser.GameObjects.Group|Phaser.GameObjects.Layer)} child - The child to be added to this Scene.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} The Game Object that was added.\r\n     */\r\n    existing: function (child)\r\n    {\r\n        if (child.renderCanvas || child.renderWebGL)\r\n        {\r\n            this.displayList.add(child);\r\n        }\r\n\r\n        //  For when custom objects have overridden `preUpdate` but don't hook into the ADDED_TO_SCENE event:\r\n        //  Adding to the list multiple times is safe, as it won't add duplicates into the list anyway.\r\n        if (child.preUpdate)\r\n        {\r\n            this.updateList.add(child);\r\n        }\r\n\r\n        return child;\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is shutting down.\r\n     * We need to kill and reset all internal properties as well as stop listening to Scene events.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#shutdown\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    shutdown: function ()\r\n    {\r\n        this.events.off(SceneEvents.SHUTDOWN, this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is being destroyed.\r\n     * We need to shutdown and then kill off all external references.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#destroy\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n\r\n        this.events.off(SceneEvents.START, this.start, this);\r\n\r\n        this.scene = null;\r\n        this.systems = null;\r\n        this.events = null;\r\n\r\n        this.displayList = null;\r\n        this.updateList = null;\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * Static method called directly by the Game Object factory functions.\r\n * With this method you can register a custom GameObject factory in the GameObjectFactory,\r\n * providing a name (`factoryType`) and the constructor (`factoryFunction`) in order\r\n * to be called when you call to Phaser.Scene.add[ factoryType ] method.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory.register\r\n * @static\r\n * @since 3.0.0\r\n *\r\n * @param {string} factoryType - The key of the factory that you will use to call to Phaser.Scene.add[ factoryType ] method.\r\n * @param {function} factoryFunction - The constructor function to be called when you invoke to the Phaser.Scene.add method.\r\n */\r\nGameObjectFactory.register = function (factoryType, factoryFunction)\r\n{\r\n    if (!GameObjectFactory.prototype.hasOwnProperty(factoryType))\r\n    {\r\n        GameObjectFactory.prototype[factoryType] = factoryFunction;\r\n    }\r\n};\r\n\r\n/**\r\n * Static method called directly by the Game Object factory functions.\r\n * With this method you can remove a custom GameObject factory registered in the GameObjectFactory,\r\n * providing a its `factoryType`.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory.remove\r\n * @static\r\n * @since 3.0.0\r\n *\r\n * @param {string} factoryType - The key of the factory that you want to remove from the GameObjectFactory.\r\n */\r\nGameObjectFactory.remove = function (factoryType)\r\n{\r\n    if (GameObjectFactory.prototype.hasOwnProperty(factoryType))\r\n    {\r\n        delete GameObjectFactory.prototype[factoryType];\r\n    }\r\n};\r\n\r\nPluginCache.register('GameObjectFactory', GameObjectFactory, 'add');\r\n\r\nmodule.exports = GameObjectFactory;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Rotate a `point` around `x` and `y` to the given `angle`, at the same distance.\r\n *\r\n * In polar notation, this maps a point from (r, t) to (r, angle), vs. the origin (x, y).\r\n *\r\n * @function Phaser.Math.RotateAround\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Types.Math.Vector2Like} T - [point,$return]\r\n *\r\n * @param {(Phaser.Geom.Point|object)} point - The point to be rotated.\r\n * @param {number} x - The horizontal coordinate to rotate around.\r\n * @param {number} y - The vertical coordinate to rotate around.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Types.Math.Vector2Like} The given point.\r\n */\r\nvar RotateAround = function (point, x, y, angle)\r\n{\r\n    var c = Math.cos(angle);\r\n    var s = Math.sin(angle);\r\n\r\n    var tx = point.x - x;\r\n    var ty = point.y - y;\r\n\r\n    point.x = tx * c - ty * s + x;\r\n    point.y = tx * s + ty * c + y;\r\n\r\n    return point;\r\n};\r\n\r\nmodule.exports = RotateAround;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Vector2 = require('./Vector2');\r\n\r\n/**\r\n * Takes the `x` and `y` coordinates and transforms them into the same space as\r\n * defined by the position, rotation and scale values.\r\n *\r\n * @function Phaser.Math.TransformXY\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The x coordinate to be transformed.\r\n * @param {number} y - The y coordinate to be transformed.\r\n * @param {number} positionX - Horizontal position of the transform point.\r\n * @param {number} positionY - Vertical position of the transform point.\r\n * @param {number} rotation - Rotation of the transform point, in radians.\r\n * @param {number} scaleX - Horizontal scale of the transform point.\r\n * @param {number} scaleY - Vertical scale of the transform point.\r\n * @param {(Phaser.Math.Vector2|Phaser.Geom.Point|object)} [output] - The output vector, point or object for the translated coordinates.\r\n *\r\n * @return {(Phaser.Math.Vector2|Phaser.Geom.Point|object)} The translated point.\r\n */\r\nvar TransformXY = function (x, y, positionX, positionY, rotation, scaleX, scaleY, output)\r\n{\r\n    if (output === undefined) { output = new Vector2(); }\r\n\r\n    var radianSin = Math.sin(rotation);\r\n    var radianCos = Math.cos(rotation);\r\n\r\n    // Rotate and Scale\r\n    var a = radianCos * scaleX;\r\n    var b = radianSin * scaleX;\r\n    var c = -radianSin * scaleY;\r\n    var d = radianCos * scaleY;\r\n\r\n    //  Invert\r\n    var id = 1 / ((a * d) + (c * -b));\r\n\r\n    output.x = (d * id * x) + (-c * id * y) + (((positionY * c) - (positionX * d)) * id);\r\n    output.y = (a * id * y) + (-b * id * x) + (((-positionY * a) + (positionX * b)) * id);\r\n\r\n    return output;\r\n};\r\n\r\nmodule.exports = TransformXY;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MathWrap = require('../Wrap');\r\n\r\n/**\r\n * Wrap an angle.\r\n *\r\n * Wraps the angle to a value in the range of -PI to PI.\r\n *\r\n * @function Phaser.Math.Angle.Wrap\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in radians.\r\n *\r\n * @return {number} The wrapped angle, in radians.\r\n */\r\nvar Wrap = function (angle)\r\n{\r\n    return MathWrap(angle, -Math.PI, Math.PI);\r\n};\r\n\r\nmodule.exports = Wrap;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Wrap = require('../Wrap');\r\n\r\n/**\r\n * Wrap an angle in degrees.\r\n *\r\n * Wraps the angle to a value in the range of -180 to 180.\r\n *\r\n * @function Phaser.Math.Angle.WrapDegrees\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in degrees.\r\n *\r\n * @return {number} The wrapped angle, in degrees.\r\n */\r\nvar WrapDegrees = function (angle)\r\n{\r\n    return Wrap(angle, -180, 180);\r\n};\r\n\r\nmodule.exports = WrapDegrees;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MATH_CONST = {\r\n\r\n    /**\r\n     * The value of PI * 2.\r\n     * \r\n     * @name Phaser.Math.PI2\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PI2: Math.PI * 2,\r\n\r\n    /**\r\n     * The value of PI * 0.5.\r\n     * \r\n     * @name Phaser.Math.TAU\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    TAU: Math.PI * 0.5,\r\n\r\n    /**\r\n     * An epsilon value (1.0e-6)\r\n     * \r\n     * @name Phaser.Math.EPSILON\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    EPSILON: 1.0e-6,\r\n\r\n    /**\r\n     * For converting degrees to radians (PI / 180)\r\n     * \r\n     * @name Phaser.Math.DEG_TO_RAD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    DEG_TO_RAD: Math.PI / 180,\r\n\r\n    /**\r\n     * For converting radians to degrees (180 / PI)\r\n     * \r\n     * @name Phaser.Math.RAD_TO_DEG\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    RAD_TO_DEG: 180 / Math.PI,\r\n\r\n    /**\r\n     * An instance of the Random Number Generator.\r\n     * This is not set until the Game boots.\r\n     * \r\n     * @name Phaser.Math.RND\r\n     * @type {Phaser.Math.RandomDataGenerator}\r\n     * @since 3.0.0\r\n     */\r\n    RND: null,\r\n\r\n    /**\r\n     * The minimum safe integer this browser supports.\r\n     * We use a const for backward compatibility with Internet Explorer.\r\n     * \r\n     * @name Phaser.Math.MIN_SAFE_INTEGER\r\n     * @type {number}\r\n     * @since 3.21.0\r\n     */\r\n    MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\r\n\r\n    /**\r\n     * The maximum safe integer this browser supports.\r\n     * We use a const for backward compatibility with Internet Explorer.\r\n     * \r\n     * @name Phaser.Math.MAX_SAFE_INTEGER\r\n     * @type {number}\r\n     * @since 3.21.0\r\n     */\r\n    MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\r\n\r\n};\r\n\r\nmodule.exports = MATH_CONST;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Back = require('./back');\r\nvar Bounce = require('./bounce');\r\nvar Circular = require('./circular');\r\nvar Cubic = require('./cubic');\r\nvar Elastic = require('./elastic');\r\nvar Expo = require('./expo');\r\nvar Linear = require('./linear');\r\nvar Quadratic = require('./quadratic');\r\nvar Quartic = require('./quartic');\r\nvar Quintic = require('./quintic');\r\nvar Sine = require('./sine');\r\nvar Stepped = require('./stepped');\r\n\r\n//  EaseMap\r\nmodule.exports = {\r\n\r\n    Power0: Linear,\r\n    Power1: Quadratic.Out,\r\n    Power2: Cubic.Out,\r\n    Power3: Quartic.Out,\r\n    Power4: Quintic.Out,\r\n\r\n    Linear: Linear,\r\n    Quad: Quadratic.Out,\r\n    Cubic: Cubic.Out,\r\n    Quart: Quartic.Out,\r\n    Quint: Quintic.Out,\r\n    Sine: Sine.Out,\r\n    Expo: Expo.Out,\r\n    Circ: Circular.Out,\r\n    Elastic: Elastic.Out,\r\n    Back: Back.Out,\r\n    Bounce: Bounce.Out,\r\n    Stepped: Stepped,\r\n\r\n    'Quad.easeIn': Quadratic.In,\r\n    'Cubic.easeIn': Cubic.In,\r\n    'Quart.easeIn': Quartic.In,\r\n    'Quint.easeIn': Quintic.In,\r\n    'Sine.easeIn': Sine.In,\r\n    'Expo.easeIn': Expo.In,\r\n    'Circ.easeIn': Circular.In,\r\n    'Elastic.easeIn': Elastic.In,\r\n    'Back.easeIn': Back.In,\r\n    'Bounce.easeIn': Bounce.In,\r\n\r\n    'Quad.easeOut': Quadratic.Out,\r\n    'Cubic.easeOut': Cubic.Out,\r\n    'Quart.easeOut': Quartic.Out,\r\n    'Quint.easeOut': Quintic.Out,\r\n    'Sine.easeOut': Sine.Out,\r\n    'Expo.easeOut': Expo.Out,\r\n    'Circ.easeOut': Circular.Out,\r\n    'Elastic.easeOut': Elastic.Out,\r\n    'Back.easeOut': Back.Out,\r\n    'Bounce.easeOut': Bounce.Out,\r\n\r\n    'Quad.easeInOut': Quadratic.InOut,\r\n    'Cubic.easeInOut': Cubic.InOut,\r\n    'Quart.easeInOut': Quartic.InOut,\r\n    'Quint.easeInOut': Quintic.InOut,\r\n    'Sine.easeInOut': Sine.InOut,\r\n    'Expo.easeInOut': Expo.InOut,\r\n    'Circ.easeInOut': Circular.InOut,\r\n    'Elastic.easeInOut': Elastic.InOut,\r\n    'Back.easeInOut': Back.InOut,\r\n    'Bounce.easeInOut': Bounce.InOut\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Contains the plugins that Phaser uses globally and locally.\r\n//  These are the source objects, not instantiated.\r\nvar corePlugins = {};\r\n\r\n//  Contains the plugins that the dev has loaded into their game\r\n//  These are the source objects, not instantiated.\r\nvar customPlugins = {};\r\n\r\nvar PluginCache = {};\r\n\r\n/**\r\n * @namespace Phaser.Plugins.PluginCache\r\n */\r\n\r\n/**\r\n * Static method called directly by the Core internal Plugins.\r\n * Key is a reference used to get the plugin from the plugins object (i.e. InputPlugin)\r\n * Plugin is the object to instantiate to create the plugin\r\n * Mapping is what the plugin is injected into the Scene.Systems as (i.e. input)\r\n *\r\n * @method Phaser.Plugins.PluginCache.register\r\n * @since 3.8.0\r\n * \r\n * @param {string} key - A reference used to get this plugin from the plugin cache.\r\n * @param {function} plugin - The plugin to be stored. Should be the core object, not instantiated.\r\n * @param {string} mapping - If this plugin is to be injected into the Scene Systems, this is the property key map used.\r\n * @param {boolean} [custom=false] - Core Scene plugin or a Custom Scene plugin?\r\n */\r\nPluginCache.register = function (key, plugin, mapping, custom)\r\n{\r\n    if (custom === undefined) { custom = false; }\r\n\r\n    corePlugins[key] = { plugin: plugin, mapping: mapping, custom: custom };\r\n};\r\n\r\n/**\r\n * Stores a custom plugin in the global plugin cache.\r\n * The key must be unique, within the scope of the cache.\r\n *\r\n * @method Phaser.Plugins.PluginCache.registerCustom\r\n * @since 3.8.0\r\n * \r\n * @param {string} key - A reference used to get this plugin from the plugin cache.\r\n * @param {function} plugin - The plugin to be stored. Should be the core object, not instantiated.\r\n * @param {string} mapping - If this plugin is to be injected into the Scene Systems, this is the property key map used.\r\n * @param {?any} data - A value to be passed to the plugin's `init` method.\r\n */\r\nPluginCache.registerCustom = function (key, plugin, mapping, data)\r\n{\r\n    customPlugins[key] = { plugin: plugin, mapping: mapping, data: data };\r\n};\r\n\r\n/**\r\n * Checks if the given key is already being used in the core plugin cache.\r\n *\r\n * @method Phaser.Plugins.PluginCache.hasCore\r\n * @since 3.8.0\r\n * \r\n * @param {string} key - The key to check for.\r\n *\r\n * @return {boolean} `true` if the key is already in use in the core cache, otherwise `false`.\r\n */\r\nPluginCache.hasCore = function (key)\r\n{\r\n    return corePlugins.hasOwnProperty(key);\r\n};\r\n\r\n/**\r\n * Checks if the given key is already being used in the custom plugin cache.\r\n *\r\n * @method Phaser.Plugins.PluginCache.hasCustom\r\n * @since 3.8.0\r\n * \r\n * @param {string} key - The key to check for.\r\n *\r\n * @return {boolean} `true` if the key is already in use in the custom cache, otherwise `false`.\r\n */\r\nPluginCache.hasCustom = function (key)\r\n{\r\n    return customPlugins.hasOwnProperty(key);\r\n};\r\n\r\n/**\r\n * Returns the core plugin object from the cache based on the given key.\r\n *\r\n * @method Phaser.Plugins.PluginCache.getCore\r\n * @since 3.8.0\r\n * \r\n * @param {string} key - The key of the core plugin to get.\r\n *\r\n * @return {Phaser.Types.Plugins.CorePluginContainer} The core plugin object.\r\n */\r\nPluginCache.getCore = function (key)\r\n{\r\n    return corePlugins[key];\r\n};\r\n\r\n/**\r\n * Returns the custom plugin object from the cache based on the given key.\r\n *\r\n * @method Phaser.Plugins.PluginCache.getCustom\r\n * @since 3.8.0\r\n * \r\n * @param {string} key - The key of the custom plugin to get.\r\n *\r\n * @return {Phaser.Types.Plugins.CustomPluginContainer} The custom plugin object.\r\n */\r\nPluginCache.getCustom = function (key)\r\n{\r\n    return customPlugins[key];\r\n};\r\n\r\n/**\r\n * Returns an object from the custom cache based on the given key that can be instantiated.\r\n *\r\n * @method Phaser.Plugins.PluginCache.getCustomClass\r\n * @since 3.8.0\r\n * \r\n * @param {string} key - The key of the custom plugin to get.\r\n *\r\n * @return {function} The custom plugin object.\r\n */\r\nPluginCache.getCustomClass = function (key)\r\n{\r\n    return (customPlugins.hasOwnProperty(key)) ? customPlugins[key].plugin : null;\r\n};\r\n\r\n/**\r\n * Removes a core plugin based on the given key.\r\n *\r\n * @method Phaser.Plugins.PluginCache.remove\r\n * @since 3.8.0\r\n * \r\n * @param {string} key - The key of the core plugin to remove.\r\n */\r\nPluginCache.remove = function (key)\r\n{\r\n    if (corePlugins.hasOwnProperty(key))\r\n    {\r\n        delete corePlugins[key];\r\n    }\r\n};\r\n\r\n/**\r\n * Removes a custom plugin based on the given key.\r\n *\r\n * @method Phaser.Plugins.PluginCache.removeCustom\r\n * @since 3.8.0\r\n * \r\n * @param {string} key - The key of the custom plugin to remove.\r\n */\r\nPluginCache.removeCustom = function (key)\r\n{\r\n    if (customPlugins.hasOwnProperty(key))\r\n    {\r\n        delete customPlugins[key];\r\n    }\r\n};\r\n\r\n/**\r\n * Removes all Core Plugins.\r\n * \r\n * This includes all of the internal system plugins that Phaser needs, like the Input Plugin and Loader Plugin.\r\n * So be sure you only call this if you do not wish to run Phaser again.\r\n *\r\n * @method Phaser.Plugins.PluginCache.destroyCorePlugins\r\n * @since 3.12.0\r\n */\r\nPluginCache.destroyCorePlugins = function ()\r\n{\r\n    for (var key in corePlugins)\r\n    {\r\n        if (corePlugins.hasOwnProperty(key))\r\n        {\r\n            delete corePlugins[key];\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Removes all Custom Plugins.\r\n *\r\n * @method Phaser.Plugins.PluginCache.destroyCustomPlugins\r\n * @since 3.12.0\r\n */\r\nPluginCache.destroyCustomPlugins = function ()\r\n{\r\n    for (var key in customPlugins)\r\n    {\r\n        if (customPlugins.hasOwnProperty(key))\r\n        {\r\n            delete customPlugins[key];\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = PluginCache;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar EventEmitter = require('eventemitter3');\r\nvar Events = require('./events');\r\nvar TweenBuilder = require('./builders/TweenBuilder');\r\nvar TWEEN_CONST = require('./tween/const');\r\n\r\n/**\r\n * @classdesc\r\n * A Timeline combines multiple Tweens into one. Its overall behavior is otherwise similar to a single Tween.\r\n *\r\n * The Timeline updates all of its Tweens simultaneously. Its methods allow you to easily build a sequence\r\n * of Tweens (each one starting after the previous one) or run multiple Tweens at once during given parts of the Timeline.\r\n *\r\n * @class Timeline\r\n * @memberof Phaser.Tweens\r\n * @extends Phaser.Events.EventEmitter\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Tweens.TweenManager} manager - The Tween Manager which owns this Timeline.\r\n */\r\nvar Timeline = new Class({\r\n\r\n    Extends: EventEmitter,\r\n\r\n    initialize:\r\n\r\n    function Timeline (manager)\r\n    {\r\n        EventEmitter.call(this);\r\n\r\n        /**\r\n         * The Tween Manager which owns this Timeline.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#manager\r\n         * @type {Phaser.Tweens.TweenManager}\r\n         * @since 3.0.0\r\n         */\r\n        this.manager = manager;\r\n\r\n        /**\r\n         * A constant value which allows this Timeline to be easily identified as one.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#isTimeline\r\n         * @type {boolean}\r\n         * @default true\r\n         * @since 3.0.0\r\n         */\r\n        this.isTimeline = true;\r\n\r\n        /**\r\n         * An array of Tween objects, each containing a unique property and target being tweened.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#data\r\n         * @type {array}\r\n         * @default []\r\n         * @since 3.0.0\r\n         */\r\n        this.data = [];\r\n\r\n        /**\r\n         * The cached size of the data array.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#totalData\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalData = 0;\r\n\r\n        /**\r\n         * If true then duration, delay, etc values are all frame totals, rather than ms.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#useFrames\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.useFrames = false;\r\n\r\n        /**\r\n         * Scales the time applied to this Timeline. A value of 1 runs in real-time. A value of 0.5 runs 50% slower, and so on.\r\n         * Value isn't used when calculating total duration of the Timeline, it's a run-time delta adjustment only.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#timeScale\r\n         * @type {number}\r\n         * @default 1\r\n         * @since 3.0.0\r\n         */\r\n        this.timeScale = 1;\r\n\r\n        /**\r\n         * Loop this Timeline? Can be -1 for an infinite loop, or an integer.\r\n         * When enabled it will play through ALL Tweens again (use Tween.repeat to loop a single tween)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#loop\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.loop = 0;\r\n\r\n        /**\r\n         * Time in ms/frames before this Timeline loops.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#loopDelay\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.loopDelay = 0;\r\n\r\n        /**\r\n         * How many loops are left to run?\r\n         *\r\n         * @name Phaser.Tweens.Timeline#loopCounter\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.loopCounter = 0;\r\n\r\n        /**\r\n         * Time in ms/frames before the 'onComplete' event fires. This never fires if loop = true (as it never completes)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#completeDelay\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.completeDelay = 0;\r\n\r\n        /**\r\n         * Countdown timer value, as used by `loopDelay` and `completeDelay`.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#countdown\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.countdown = 0;\r\n\r\n        /**\r\n         * The current state of the Timeline.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#state\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.state = TWEEN_CONST.PENDING_ADD;\r\n\r\n        /**\r\n         * The state of the Timeline when it was paused (used by Resume)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#_pausedState\r\n         * @type {number}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._pausedState = TWEEN_CONST.PENDING_ADD;\r\n\r\n        /**\r\n         * Does the Timeline start off paused? (if so it needs to be started with Timeline.play)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#paused\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.paused = false;\r\n\r\n        /**\r\n         * Elapsed time in ms/frames of this run through of the Timeline.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#elapsed\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.elapsed = 0;\r\n\r\n        /**\r\n         * Total elapsed time in ms/frames of the entire Timeline, including looping.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#totalElapsed\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalElapsed = 0;\r\n\r\n        /**\r\n         * Time in ms/frames for the whole Timeline to play through once, excluding loop amounts and loop delays.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#duration\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.duration = 0;\r\n\r\n        /**\r\n         * Value between 0 and 1. The amount of progress through the Timeline, _excluding loops_.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#progress\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.progress = 0;\r\n\r\n        /**\r\n         * Time in ms/frames for all Tweens in this Timeline to complete (including looping)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#totalDuration\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalDuration = 0;\r\n\r\n        /**\r\n         * Value between 0 and 1. The amount through the entire Timeline, including looping.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#totalProgress\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalProgress = 0;\r\n\r\n        /**\r\n         * An object containing the different Tween callback functions.\r\n         * \r\n         * You can either set these in the Tween config, or by calling the `Tween.setCallback` method.\r\n         * \r\n         * `onComplete` When the Timeline finishes playback fully or `Timeline.stop` is called. Never invoked if timeline is set to repeat infinitely.\r\n         * `onLoop` When a Timeline loops.\r\n         * `onStart` When the Timeline starts playing.\r\n         * `onUpdate` When a Timeline updates a child Tween.\r\n         * `onYoyo` When a Timeline starts a yoyo.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#callbacks\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.callbacks = {\r\n            onComplete: null,\r\n            onLoop: null,\r\n            onStart: null,\r\n            onUpdate: null,\r\n            onYoyo: null\r\n        };\r\n\r\n        /**\r\n         * The context in which all callbacks are invoked.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#callbackScope\r\n         * @type {any}\r\n         * @since 3.0.0\r\n         */\r\n        this.callbackScope;\r\n    },\r\n\r\n    /**\r\n     * Internal method that will emit a Timeline based Event and invoke the given callback.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#dispatchTimelineEvent\r\n     * @since 3.19.0\r\n     *\r\n     * @param {Phaser.Types.Tweens.Event} event - The Event to be dispatched.\r\n     * @param {function} callback - The callback to be invoked. Can be `null` or `undefined` to skip invocation.\r\n     */\r\n    dispatchTimelineEvent: function (event, callback)\r\n    {\r\n        this.emit(event, this);\r\n\r\n        if (callback)\r\n        {\r\n            callback.func.apply(callback.scope, callback.params);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the value of the time scale applied to this Timeline. A value of 1 runs in real-time.\r\n     * A value of 0.5 runs 50% slower, and so on.\r\n     * \r\n     * The value isn't used when calculating total duration of the tween, it's a run-time delta adjustment only.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#setTimeScale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The time scale value to set.\r\n     *\r\n     * @return {this} This Timeline object.\r\n     */\r\n    setTimeScale: function (value)\r\n    {\r\n        this.timeScale = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Gets the value of the time scale applied to this Timeline. A value of 1 runs in real-time.\r\n     * A value of 0.5 runs 50% slower, and so on.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#getTimeScale\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The value of the time scale applied to this Timeline.\r\n     */\r\n    getTimeScale: function ()\r\n    {\r\n        return this.timeScale;\r\n    },\r\n\r\n    /**\r\n     * Check whether or not the Timeline is playing.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#isPlaying\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if this Timeline is active, otherwise `false`.\r\n     */\r\n    isPlaying: function ()\r\n    {\r\n        return (this.state === TWEEN_CONST.ACTIVE);\r\n    },\r\n\r\n    /**\r\n     * Creates a new Tween, based on the given Tween Config, and adds it to this Timeline.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#add\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Types.Tweens.TweenBuilderConfig|object)} config - The configuration object for the Tween.\r\n     *\r\n     * @return {this} This Timeline object.\r\n     */\r\n    add: function (config)\r\n    {\r\n        return this.queue(TweenBuilder(this, config));\r\n    },\r\n\r\n    /**\r\n     * Adds an existing Tween to this Timeline.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#queue\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - The Tween to be added to this Timeline.\r\n     *\r\n     * @return {this} This Timeline object.\r\n     */\r\n    queue: function (tween)\r\n    {\r\n        if (!this.isPlaying())\r\n        {\r\n            tween.parent = this;\r\n            tween.parentIsTimeline = true;\r\n\r\n            this.data.push(tween);\r\n\r\n            this.totalData = this.data.length;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Checks whether a Tween has an offset value.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#hasOffset\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - The Tween to check.\r\n     *\r\n     * @return {boolean} `true` if the tween has a non-null offset.\r\n     */\r\n    hasOffset: function (tween)\r\n    {\r\n        return (tween.offset !== null);\r\n    },\r\n\r\n    /**\r\n     * Checks whether the offset value is a number or a directive that is relative to previous tweens.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#isOffsetAbsolute\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The offset value to be evaluated.\r\n     *\r\n     * @return {boolean} `true` if the result is a number, `false` if it is a directive like \" -= 1000\".\r\n     */\r\n    isOffsetAbsolute: function (value)\r\n    {\r\n        return (typeof(value) === 'number');\r\n    },\r\n\r\n    /**\r\n     * Checks if the offset is a relative value rather than an absolute one.\r\n     * If the value is just a number, this returns false.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#isOffsetRelative\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} value - The offset value to be evaluated.\r\n     *\r\n     * @return {boolean} `true` if the value is relative, i.e \" -= 1000\". If `false`, the offset is absolute.\r\n     */\r\n    isOffsetRelative: function (value)\r\n    {\r\n        var t = typeof(value);\r\n\r\n        if (t === 'string')\r\n        {\r\n            var op = value[0];\r\n\r\n            if (op === '-' || op === '+')\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Parses the relative offset value, returning a positive or negative number.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#getRelativeOffset\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} value - The relative offset, in the format of '-=500', for example. The first character determines whether it will be a positive or negative number. Spacing matters here.\r\n     * @param {number} base - The value to use as the offset.\r\n     *\r\n     * @return {number} The parsed offset value.\r\n     */\r\n    getRelativeOffset: function (value, base)\r\n    {\r\n        var op = value[0];\r\n        var num = parseFloat(value.substr(2));\r\n        var result = base;\r\n\r\n        switch (op)\r\n        {\r\n            case '+':\r\n                result += num;\r\n                break;\r\n\r\n            case '-':\r\n                result -= num;\r\n                break;\r\n        }\r\n\r\n        //  Cannot ever be < 0\r\n        return Math.max(0, result);\r\n    },\r\n\r\n    /**\r\n     * Calculates the total duration of the timeline.\r\n     * \r\n     * Computes all tween durations and returns the full duration of the timeline.\r\n     * \r\n     * The resulting number is stored in the timeline, not as a return value.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#calcDuration\r\n     * @since 3.0.0\r\n     */\r\n    calcDuration: function ()\r\n    {\r\n        var prevEnd = 0;\r\n        var totalDuration = 0;\r\n        var offsetDuration = 0;\r\n\r\n        for (var i = 0; i < this.totalData; i++)\r\n        {\r\n            var tween = this.data[i];\r\n\r\n            tween.init();\r\n\r\n            if (this.hasOffset(tween))\r\n            {\r\n                if (this.isOffsetAbsolute(tween.offset))\r\n                {\r\n                    //  An actual number, so it defines the start point from the beginning of the timeline\r\n                    tween.calculatedOffset = tween.offset;\r\n\r\n                    if (tween.offset === 0)\r\n                    {\r\n                        offsetDuration = 0;\r\n                    }\r\n                }\r\n                else if (this.isOffsetRelative(tween.offset))\r\n                {\r\n                    //  A relative offset (i.e. '-=1000', so starts at 'offset' ms relative to the PREVIOUS Tweens ending time)\r\n                    tween.calculatedOffset = this.getRelativeOffset(tween.offset, prevEnd);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                //  Sequential\r\n                tween.calculatedOffset = offsetDuration;\r\n            }\r\n\r\n            prevEnd = tween.totalDuration + tween.calculatedOffset;\r\n\r\n            totalDuration += tween.totalDuration;\r\n            offsetDuration += tween.totalDuration;\r\n        }\r\n\r\n        //  Excludes loop values\r\n        this.duration = totalDuration;\r\n\r\n        this.loopCounter = (this.loop === -1) ? 999999999999 : this.loop;\r\n\r\n        if (this.loopCounter > 0)\r\n        {\r\n            this.totalDuration = this.duration + this.completeDelay + ((this.duration + this.loopDelay) * this.loopCounter);\r\n        }\r\n        else\r\n        {\r\n            this.totalDuration = this.duration + this.completeDelay;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Initializes the timeline, which means all Tweens get their init() called, and the total duration will be computed.\r\n     * Returns a boolean indicating whether the timeline is auto-started or not.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#init\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if the Timeline is started. `false` if it is paused.\r\n     */\r\n    init: function ()\r\n    {\r\n        this.calcDuration();\r\n\r\n        this.progress = 0;\r\n        this.totalProgress = 0;\r\n\r\n        if (this.paused)\r\n        {\r\n            this.state = TWEEN_CONST.PAUSED;\r\n\r\n            return false;\r\n        }\r\n        else\r\n        {\r\n            return true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Resets all of the timeline's tweens back to their initial states.\r\n     * The boolean parameter indicates whether tweens that are looping should reset as well, or not.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#resetTweens\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} resetFromLoop - If `true`, resets all looping tweens to their initial values.\r\n     */\r\n    resetTweens: function (resetFromLoop)\r\n    {\r\n        for (var i = 0; i < this.totalData; i++)\r\n        {\r\n            var tween = this.data[i];\r\n\r\n            tween.play(resetFromLoop);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets a callback for the Timeline.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#setCallback\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} type - The internal type of callback to set.\r\n     * @param {function} callback - Timeline allows multiple tweens to be linked together to create a streaming sequence.\r\n     * @param {array} [params] - The parameters to pass to the callback.\r\n     * @param {object} [scope] - The context scope of the callback.\r\n     *\r\n     * @return {this} This Timeline object.\r\n     */\r\n    setCallback: function (type, callback, params, scope)\r\n    {\r\n        if (Timeline.TYPES.indexOf(type) !== -1)\r\n        {\r\n            this.callbacks[type] = { func: callback, scope: scope, params: params };\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Passed a Tween to the Tween Manager and requests it be made active.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#makeActive\r\n     * @since 3.3.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - The tween object to make active.\r\n     *\r\n     * @return {Phaser.Tweens.TweenManager} The Timeline's Tween Manager reference.\r\n     */\r\n    makeActive: function (tween)\r\n    {\r\n        return this.manager.makeActive(tween);\r\n    },\r\n\r\n    /**\r\n     * Starts playing the Timeline.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#play\r\n     * @fires Phaser.Tweens.Events#TIMELINE_START\r\n     * @since 3.0.0\r\n     */\r\n    play: function ()\r\n    {\r\n        if (this.state === TWEEN_CONST.ACTIVE)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (this.paused)\r\n        {\r\n            this.paused = false;\r\n\r\n            this.manager.makeActive(this);\r\n\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            this.resetTweens(false);\r\n\r\n            this.state = TWEEN_CONST.ACTIVE;\r\n        }\r\n\r\n        this.dispatchTimelineEvent(Events.TIMELINE_START, this.callbacks.onStart);\r\n    },\r\n\r\n    /**\r\n     * Updates the Timeline's `state` and fires callbacks and events.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#nextState\r\n     * @fires Phaser.Tweens.Events#TIMELINE_COMPLETE\r\n     * @fires Phaser.Tweens.Events#TIMELINE_LOOP\r\n     * @since 3.0.0\r\n     *\r\n     * @see Phaser.Tweens.Timeline#update\r\n     */\r\n    nextState: function ()\r\n    {\r\n        if (this.loopCounter > 0)\r\n        {\r\n            //  Reset the elapsed time\r\n            this.elapsed = 0;\r\n            this.progress = 0;\r\n\r\n            this.loopCounter--;\r\n\r\n            this.resetTweens(true);\r\n\r\n            if (this.loopDelay > 0)\r\n            {\r\n                this.countdown = this.loopDelay;\r\n\r\n                this.state = TWEEN_CONST.LOOP_DELAY;\r\n            }\r\n            else\r\n            {\r\n                this.state = TWEEN_CONST.ACTIVE;\r\n\r\n                this.dispatchTimelineEvent(Events.TIMELINE_LOOP, this.callbacks.onLoop);\r\n            }\r\n        }\r\n        else if (this.completeDelay > 0)\r\n        {\r\n            this.state = TWEEN_CONST.COMPLETE_DELAY;\r\n\r\n            this.countdown = this.completeDelay;\r\n        }\r\n        else\r\n        {\r\n            this.state = TWEEN_CONST.PENDING_REMOVE;\r\n\r\n            this.dispatchTimelineEvent(Events.TIMELINE_COMPLETE, this.callbacks.onComplete);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Returns 'true' if this Timeline has finished and should be removed from the Tween Manager.\r\n     * Otherwise, returns false.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#update\r\n     * @fires Phaser.Tweens.Events#TIMELINE_COMPLETE\r\n     * @fires Phaser.Tweens.Events#TIMELINE_UPDATE\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} timestamp - The current time. Either a High Resolution Timer value if it comes from Request Animation Frame, or Date.now if using SetTimeout.\r\n     * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n     *\r\n     * @return {boolean} Returns `true` if this Timeline has finished and should be removed from the Tween Manager.\r\n     */\r\n    update: function (timestamp, delta)\r\n    {\r\n        if (this.state === TWEEN_CONST.PAUSED)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (this.useFrames)\r\n        {\r\n            delta = 1 * this.manager.timeScale;\r\n        }\r\n\r\n        delta *= this.timeScale;\r\n\r\n        this.elapsed += delta;\r\n        this.progress = Math.min(this.elapsed / this.duration, 1);\r\n\r\n        this.totalElapsed += delta;\r\n        this.totalProgress = Math.min(this.totalElapsed / this.totalDuration, 1);\r\n\r\n        switch (this.state)\r\n        {\r\n            case TWEEN_CONST.ACTIVE:\r\n\r\n                var stillRunning = this.totalData;\r\n\r\n                for (var i = 0; i < this.totalData; i++)\r\n                {\r\n                    var tween = this.data[i];\r\n\r\n                    if (tween.update(timestamp, delta))\r\n                    {\r\n                        stillRunning--;\r\n                    }\r\n                }\r\n\r\n                this.dispatchTimelineEvent(Events.TIMELINE_UPDATE, this.callbacks.onUpdate);\r\n\r\n                //  Anything still running? If not, we're done\r\n                if (stillRunning === 0)\r\n                {\r\n                    this.nextState();\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.LOOP_DELAY:\r\n\r\n                this.countdown -= delta;\r\n\r\n                if (this.countdown <= 0)\r\n                {\r\n                    this.state = TWEEN_CONST.ACTIVE;\r\n\r\n                    this.dispatchTimelineEvent(Events.TIMELINE_LOOP, this.callbacks.onLoop);\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.COMPLETE_DELAY:\r\n\r\n                this.countdown -= delta;\r\n\r\n                if (this.countdown <= 0)\r\n                {\r\n                    this.state = TWEEN_CONST.PENDING_REMOVE;\r\n\r\n                    this.dispatchTimelineEvent(Events.TIMELINE_COMPLETE, this.callbacks.onComplete);\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        return (this.state === TWEEN_CONST.PENDING_REMOVE);\r\n    },\r\n\r\n    /**\r\n     * Stops the Timeline immediately, whatever stage of progress it is at and flags it for removal by the TweenManager.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#stop\r\n     * @since 3.0.0\r\n     */\r\n    stop: function ()\r\n    {\r\n        this.state = TWEEN_CONST.PENDING_REMOVE;\r\n    },\r\n\r\n    /**\r\n     * Pauses the Timeline, retaining its internal state.\r\n     * \r\n     * Calling this on a Timeline that is already paused has no effect and fires no event.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#pause\r\n     * @fires Phaser.Tweens.Events#TIMELINE_PAUSE\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Timeline object.\r\n     */\r\n    pause: function ()\r\n    {\r\n        if (this.state === TWEEN_CONST.PAUSED)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.paused = true;\r\n\r\n        this._pausedState = this.state;\r\n\r\n        this.state = TWEEN_CONST.PAUSED;\r\n\r\n        this.emit(Events.TIMELINE_PAUSE, this);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resumes a paused Timeline from where it was when it was paused.\r\n     * \r\n     * Calling this on a Timeline that isn't paused has no effect and fires no event.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#resume\r\n     * @fires Phaser.Tweens.Events#TIMELINE_RESUME\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Timeline object.\r\n     */\r\n    resume: function ()\r\n    {\r\n        if (this.state === TWEEN_CONST.PAUSED)\r\n        {\r\n            this.paused = false;\r\n\r\n            this.state = this._pausedState;\r\n\r\n            this.emit(Events.TIMELINE_RESUME, this);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Checks if any of the Tweens in this Timeline as operating on the target object.\r\n     * \r\n     * Returns `false` if no Tweens operate on the target object.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#hasTarget\r\n     * @since 3.0.0\r\n     *\r\n     * @param {object} target - The target to check all Tweens against.\r\n     *\r\n     * @return {boolean} `true` if there is at least a single Tween that operates on the target object, otherwise `false`.\r\n     */\r\n    hasTarget: function (target)\r\n    {\r\n        for (var i = 0; i < this.data.length; i++)\r\n        {\r\n            if (this.data[i].hasTarget(target))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Stops all the Tweens in the Timeline immediately, whatever stage of progress they are at and flags\r\n     * them for removal by the TweenManager.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        for (var i = 0; i < this.data.length; i++)\r\n        {\r\n            this.data[i].stop();\r\n        }\r\n    }\r\n\r\n});\r\n\r\nTimeline.TYPES = [ 'onStart', 'onUpdate', 'onLoop', 'onComplete', 'onYoyo' ];\r\n\r\nmodule.exports = Timeline;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar ArrayRemove = require('../utils/array/Remove');\r\nvar Class = require('../utils/Class');\r\nvar NumberTweenBuilder = require('./builders/NumberTweenBuilder');\r\nvar PluginCache = require('../plugins/PluginCache');\r\nvar SceneEvents = require('../scene/events');\r\nvar StaggerBuilder = require('./builders/StaggerBuilder');\r\nvar TimelineBuilder = require('./builders/TimelineBuilder');\r\nvar TWEEN_CONST = require('./tween/const');\r\nvar TweenBuilder = require('./builders/TweenBuilder');\r\n\r\n/**\r\n * @classdesc\r\n * The Tween Manager is a default Scene Plugin which controls and updates Tweens and Timelines.\r\n *\r\n * @class TweenManager\r\n * @memberof Phaser.Tweens\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene which owns this Tween Manager.\r\n */\r\nvar TweenManager = new Class({\r\n\r\n    initialize:\r\n\r\n    function TweenManager (scene)\r\n    {\r\n        /**\r\n         * The Scene which owns this Tween Manager.\r\n         *\r\n         * @name Phaser.Tweens.TweenManager#scene\r\n         * @type {Phaser.Scene}\r\n         * @since 3.0.0\r\n         */\r\n        this.scene = scene;\r\n\r\n        /**\r\n         * The Systems object of the Scene which owns this Tween Manager.\r\n         *\r\n         * @name Phaser.Tweens.TweenManager#systems\r\n         * @type {Phaser.Scenes.Systems}\r\n         * @since 3.0.0\r\n         */\r\n        this.systems = scene.sys;\r\n\r\n        /**\r\n         * The time scale of the Tween Manager.\r\n         *\r\n         * This value scales the time delta between two frames, thus influencing the speed of time for all Tweens owned by this Tween Manager.\r\n         *\r\n         * @name Phaser.Tweens.TweenManager#timeScale\r\n         * @type {number}\r\n         * @default 1\r\n         * @since 3.0.0\r\n         */\r\n        this.timeScale = 1;\r\n\r\n        /**\r\n         * An array of Tweens and Timelines which will be added to the Tween Manager at the start of the frame.\r\n         *\r\n         * @name Phaser.Tweens.TweenManager#_add\r\n         * @type {array}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._add = [];\r\n\r\n        /**\r\n         * An array of Tweens and Timelines pending to be later added to the Tween Manager.\r\n         *\r\n         * @name Phaser.Tweens.TweenManager#_pending\r\n         * @type {array}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._pending = [];\r\n\r\n        /**\r\n         * An array of Tweens and Timelines which are still incomplete and are actively processed by the Tween Manager.\r\n         *\r\n         * @name Phaser.Tweens.TweenManager#_active\r\n         * @type {array}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._active = [];\r\n\r\n        /**\r\n         * An array of Tweens and Timelines which will be removed from the Tween Manager at the start of the frame.\r\n         *\r\n         * @name Phaser.Tweens.TweenManager#_destroy\r\n         * @type {array}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._destroy = [];\r\n\r\n        /**\r\n         * The number of Tweens and Timelines which need to be processed by the Tween Manager at the start of the frame.\r\n         *\r\n         * @name Phaser.Tweens.TweenManager#_toProcess\r\n         * @type {number}\r\n         * @private\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this._toProcess = 0;\r\n\r\n        scene.sys.events.once(SceneEvents.BOOT, this.boot, this);\r\n        scene.sys.events.on(SceneEvents.START, this.start, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically, only once, when the Scene is first created.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#boot\r\n     * @private\r\n     * @since 3.5.1\r\n     */\r\n    boot: function ()\r\n    {\r\n        this.systems.events.once(SceneEvents.DESTROY, this.destroy, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically by the Scene when it is starting up.\r\n     * It is responsible for creating local systems, properties and listening for Scene events.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#start\r\n     * @private\r\n     * @since 3.5.0\r\n     */\r\n    start: function ()\r\n    {\r\n        var eventEmitter = this.systems.events;\r\n\r\n        eventEmitter.on(SceneEvents.PRE_UPDATE, this.preUpdate, this);\r\n        eventEmitter.on(SceneEvents.UPDATE, this.update, this);\r\n        eventEmitter.once(SceneEvents.SHUTDOWN, this.shutdown, this);\r\n\r\n        this.timeScale = 1;\r\n    },\r\n\r\n    /**\r\n     * Create a Tween Timeline and return it, but do NOT add it to the active or pending Tween lists.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#createTimeline\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Tweens.TimelineBuilderConfig} [config] - The configuration object for the Timeline and its Tweens.\r\n     *\r\n     * @return {Phaser.Tweens.Timeline} The created Timeline object.\r\n     */\r\n    createTimeline: function (config)\r\n    {\r\n        return TimelineBuilder(this, config);\r\n    },\r\n\r\n    /**\r\n     * Create a Tween Timeline and add it to the active Tween list.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#timeline\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Tweens.TimelineBuilderConfig} [config] - The configuration object for the Timeline and its Tweens.\r\n     *\r\n     * @return {Phaser.Tweens.Timeline} The created Timeline object.\r\n     */\r\n    timeline: function (config)\r\n    {\r\n        var timeline = TimelineBuilder(this, config);\r\n\r\n        if (!timeline.paused)\r\n        {\r\n            this._add.push(timeline);\r\n\r\n            this._toProcess++;\r\n        }\r\n\r\n        return timeline;\r\n    },\r\n\r\n    /**\r\n     * Create a Tween and return it, but do NOT add it to the active or pending Tween lists.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#create\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Tweens.TweenBuilderConfig|object} config - The configuration object for the Tween.\r\n     *\r\n     * @return {Phaser.Tweens.Tween} The created Tween object.\r\n     */\r\n    create: function (config)\r\n    {\r\n        return TweenBuilder(this, config);\r\n    },\r\n\r\n    /**\r\n     * Create a Tween and add it to the active Tween list.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#add\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Tweens.TweenBuilderConfig|object} config - The configuration object for the Tween.\r\n     *\r\n     * @return {Phaser.Tweens.Tween} The created Tween.\r\n     */\r\n    add: function (config)\r\n    {\r\n        var tween = TweenBuilder(this, config);\r\n\r\n        this._add.push(tween);\r\n\r\n        this._toProcess++;\r\n\r\n        return tween;\r\n    },\r\n\r\n    /**\r\n     * Add an existing tween into the active Tween list.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#existing\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - The Tween to add.\r\n     *\r\n     * @return {Phaser.Tweens.TweenManager} This Tween Manager object.\r\n     */\r\n    existing: function (tween)\r\n    {\r\n        this._add.push(tween);\r\n\r\n        this._toProcess++;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Create a Number Tween and add it to the active Tween list.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#addCounter\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Tweens.NumberTweenBuilderConfig} config - The configuration object for the Number Tween.\r\n     *\r\n     * @return {Phaser.Tweens.Tween} The created Number Tween.\r\n     */\r\n    addCounter: function (config)\r\n    {\r\n        var tween = NumberTweenBuilder(this, config);\r\n\r\n        this._add.push(tween);\r\n\r\n        this._toProcess++;\r\n\r\n        return tween;\r\n    },\r\n\r\n    /**\r\n     * Creates a Stagger function to be used by a Tween property.\r\n     *\r\n     * The stagger function will allow you to stagger changes to the value of the property across all targets of the tween.\r\n     *\r\n     * This is only worth using if the tween has multiple targets.\r\n     *\r\n     * The following will stagger the delay by 100ms across all targets of the tween, causing them to scale down to 0.2\r\n     * over the duration specified:\r\n     *\r\n     * ```javascript\r\n     * this.tweens.add({\r\n     *     targets: [ ... ],\r\n     *     scale: 0.2,\r\n     *     ease: 'linear',\r\n     *     duration: 1000,\r\n     *     delay: this.tweens.stagger(100)\r\n     * });\r\n     * ```\r\n     *\r\n     * The following will stagger the delay by 500ms across all targets of the tween using a 10 x 6 grid, staggering\r\n     * from the center out, using a cubic ease.\r\n     *\r\n     * ```javascript\r\n     * this.tweens.add({\r\n     *     targets: [ ... ],\r\n     *     scale: 0.2,\r\n     *     ease: 'linear',\r\n     *     duration: 1000,\r\n     *     delay: this.tweens.stagger(500, { grid: [ 10, 6 ], from: 'center', ease: 'cubic.out' })\r\n     * });\r\n     * ```\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#stagger\r\n     * @since 3.19.0\r\n     *\r\n     * @param {(number|number[])} value - The amount to stagger by, or an array containing two elements representing the min and max values to stagger between.\r\n     * @param {Phaser.Types.Tweens.StaggerConfig} config - The configuration object for the Stagger function.\r\n     *\r\n     * @return {function} The stagger function.\r\n     */\r\n    stagger: function (value, options)\r\n    {\r\n        return StaggerBuilder(value, options);\r\n    },\r\n\r\n    /**\r\n     * Updates the Tween Manager's internal lists at the start of the frame.\r\n     *\r\n     * This method will return immediately if no changes have been indicated.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#preUpdate\r\n     * @since 3.0.0\r\n     */\r\n    preUpdate: function ()\r\n    {\r\n        if (this._toProcess === 0)\r\n        {\r\n            //  Quick bail\r\n            return;\r\n        }\r\n\r\n        var list = this._destroy;\r\n        var active = this._active;\r\n        var pending = this._pending;\r\n        var i;\r\n        var tween;\r\n\r\n        //  Clear the 'destroy' list\r\n        for (i = 0; i < list.length; i++)\r\n        {\r\n            tween = list[i];\r\n\r\n            //  Remove from the 'active' array\r\n            var idx = active.indexOf(tween);\r\n\r\n            if (idx === -1)\r\n            {\r\n                //  Not in the active array, is it in pending instead?\r\n                idx = pending.indexOf(tween);\r\n\r\n                if (idx > -1)\r\n                {\r\n                    tween.state = TWEEN_CONST.REMOVED;\r\n                    pending.splice(idx, 1);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                tween.state = TWEEN_CONST.REMOVED;\r\n                active.splice(idx, 1);\r\n            }\r\n        }\r\n\r\n        list.length = 0;\r\n\r\n        //  Process the addition list\r\n        //  This stops callbacks and out of sync events from populating the active array mid-way during the update\r\n\r\n        list = this._add;\r\n\r\n        for (i = 0; i < list.length; i++)\r\n        {\r\n            tween = list[i];\r\n\r\n            if (tween.state === TWEEN_CONST.PENDING_ADD)\r\n            {\r\n                //  Return true if the Tween should be started right away, otherwise false\r\n                if (tween.init())\r\n                {\r\n                    tween.play();\r\n\r\n                    this._active.push(tween);\r\n                }\r\n                else\r\n                {\r\n                    this._pending.push(tween);\r\n                }\r\n            }\r\n        }\r\n\r\n        list.length = 0;\r\n\r\n        this._toProcess = 0;\r\n    },\r\n\r\n    /**\r\n     * Updates all Tweens and Timelines of the Tween Manager.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#update\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} timestamp - The current time in milliseconds.\r\n     * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n     */\r\n    update: function (timestamp, delta)\r\n    {\r\n        //  Process active tweens\r\n        var list = this._active;\r\n        var tween;\r\n\r\n        //  Scale the delta\r\n        delta *= this.timeScale;\r\n\r\n        for (var i = 0; i < list.length; i++)\r\n        {\r\n            tween = list[i];\r\n\r\n            //  If Tween.update returns 'true' then it means it has completed,\r\n            //  so move it to the destroy list\r\n            if (tween.update(timestamp, delta))\r\n            {\r\n                this._destroy.push(tween);\r\n                this._toProcess++;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes the given tween from the Tween Manager, regardless of its state (pending or active).\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#remove\r\n     * @since 3.17.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - The Tween to be removed.\r\n     *\r\n     * @return {Phaser.Tweens.TweenManager} This Tween Manager object.\r\n     */\r\n    remove: function (tween)\r\n    {\r\n        ArrayRemove(this._add, tween);\r\n        ArrayRemove(this._pending, tween);\r\n        ArrayRemove(this._active, tween);\r\n        ArrayRemove(this._destroy, tween);\r\n\r\n        tween.state = TWEEN_CONST.REMOVED;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Checks if a Tween or Timeline is active and adds it to the Tween Manager at the start of the frame if it isn't.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#makeActive\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - The Tween to check.\r\n     *\r\n     * @return {Phaser.Tweens.TweenManager} This Tween Manager object.\r\n     */\r\n    makeActive: function (tween)\r\n    {\r\n        if (this._add.indexOf(tween) !== -1 || this._active.indexOf(tween) !== -1)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        var idx = this._pending.indexOf(tween);\r\n\r\n        if (idx !== -1)\r\n        {\r\n            this._pending.splice(idx, 1);\r\n        }\r\n\r\n        this._add.push(tween);\r\n\r\n        tween.state = TWEEN_CONST.PENDING_ADD;\r\n\r\n        this._toProcess++;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Passes all Tweens to the given callback.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#each\r\n     * @since 3.0.0\r\n     *\r\n     * @param {function} callback - The function to call.\r\n     * @param {object} [scope] - The scope (`this` object) to call the function with.\r\n     * @param {...*} [args] - The arguments to pass into the function. Its first argument will always be the Tween currently being iterated.\r\n     */\r\n    each: function (callback, scope)\r\n    {\r\n        var args = [ null ];\r\n\r\n        for (var i = 1; i < arguments.length; i++)\r\n        {\r\n            args.push(arguments[i]);\r\n        }\r\n\r\n        for (var texture in this.list)\r\n        {\r\n            args[0] = this.list[texture];\r\n\r\n            callback.apply(scope, args);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Returns an array of all active Tweens and Timelines in the Tween Manager.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#getAllTweens\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Tweens.Tween[]} A new array containing references to all active Tweens and Timelines.\r\n     */\r\n    getAllTweens: function ()\r\n    {\r\n        var list = this._active;\r\n        var output = [];\r\n\r\n        for (var i = 0; i < list.length; i++)\r\n        {\r\n            output.push(list[i]);\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Returns the scale of the time delta for all Tweens and Timelines owned by this Tween Manager.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#getGlobalTimeScale\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The scale of the time delta, usually 1.\r\n     */\r\n    getGlobalTimeScale: function ()\r\n    {\r\n        return this.timeScale;\r\n    },\r\n\r\n    /**\r\n     * Returns an array of all Tweens or Timelines in the Tween Manager which affect the given target or array of targets.\r\n     *\r\n     * Only the currently active tweens are tested. A tween that has completed and is\r\n     * awaiting removal will not be included in the results.\r\n     *\r\n     * If you wish to also search pending tweens, use the `includePending` flag.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#getTweensOf\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(object|array)} target - The target to look for. Provide an array to look for multiple targets.\r\n     * @param {boolean} [includePending=false] - Also check for pending tweens, not just active ones?\r\n     *\r\n     * @return {Phaser.Tweens.Tween[]} A new array containing all Tweens and Timelines which affect the given target(s).\r\n     */\r\n    getTweensOf: function (target, includePending)\r\n    {\r\n        if (includePending === undefined) { includePending = false; }\r\n\r\n        var list = this._active;\r\n        var tween;\r\n        var output = [];\r\n        var i;\r\n        var t;\r\n\r\n        if (!Array.isArray(target))\r\n        {\r\n            target = [ target ];\r\n        }\r\n\r\n        for (i = 0; i < list.length; i++)\r\n        {\r\n            tween = list[i];\r\n\r\n            for (t = 0; t < target.length; t++)\r\n            {\r\n                if (tween.hasTarget(target[t]))\r\n                {\r\n                    output.push(tween);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (includePending)\r\n        {\r\n            list = this._pending;\r\n\r\n            for (i = 0; i < list.length; i++)\r\n            {\r\n                tween = list[i];\r\n\r\n                for (t = 0; t < target.length; t++)\r\n                {\r\n                    if (tween.hasTarget(target[t]))\r\n                    {\r\n                        output.push(tween);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Checks if the given object is being affected by a playing Tween.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#isTweening\r\n     * @since 3.0.0\r\n     *\r\n     * @param {object} target - target Phaser.Tweens.Tween object\r\n     *\r\n     * @return {boolean} returns if target tween object is active or not\r\n     */\r\n    isTweening: function (target)\r\n    {\r\n        var list = this._active;\r\n        var tween;\r\n\r\n        for (var i = 0; i < list.length; i++)\r\n        {\r\n            tween = list[i];\r\n\r\n            if (tween.hasTarget(target) && tween.isPlaying())\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Stops all Tweens in this Tween Manager. They will be removed at the start of the frame.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#killAll\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Tweens.TweenManager} This Tween Manager.\r\n     */\r\n    killAll: function ()\r\n    {\r\n        var tweens = this.getAllTweens();\r\n\r\n        for (var i = 0; i < tweens.length; i++)\r\n        {\r\n            tweens[i].stop();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Stops all Tweens which affect the given target or array of targets. The Tweens will be removed from the Tween Manager at the start of the frame.\r\n     *\r\n     * @see {@link #getTweensOf}\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#killTweensOf\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(object|array)} target - The target to look for. Provide an array to look for multiple targets.\r\n     *\r\n     * @return {Phaser.Tweens.TweenManager} This Tween Manager.\r\n     */\r\n    killTweensOf: function (target)\r\n    {\r\n        var tweens = this.getTweensOf(target);\r\n\r\n        for (var i = 0; i < tweens.length; i++)\r\n        {\r\n            tweens[i].stop();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Pauses all Tweens in this Tween Manager.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#pauseAll\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Tweens.TweenManager} This Tween Manager.\r\n     */\r\n    pauseAll: function ()\r\n    {\r\n        var list = this._active;\r\n\r\n        for (var i = 0; i < list.length; i++)\r\n        {\r\n            list[i].pause();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resumes all Tweens in this Tween Manager.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#resumeAll\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Tweens.TweenManager} This Tween Manager.\r\n     */\r\n    resumeAll: function ()\r\n    {\r\n        var list = this._active;\r\n\r\n        for (var i = 0; i < list.length; i++)\r\n        {\r\n            list[i].resume();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets a new scale of the time delta for this Tween Manager.\r\n     *\r\n     * The time delta is the time elapsed between two consecutive frames and influences the speed of time for this Tween Manager and all Tweens it owns. Values higher than 1 increase the speed of time, while values smaller than 1 decrease it. A value of 0 freezes time and is effectively equivalent to pausing all Tweens.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#setGlobalTimeScale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The new scale of the time delta, where 1 is the normal speed.\r\n     *\r\n     * @return {Phaser.Tweens.TweenManager} This Tween Manager.\r\n     */\r\n    setGlobalTimeScale: function (value)\r\n    {\r\n        this.timeScale = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is shutting down.\r\n     * We need to kill and reset all internal properties as well as stop listening to Scene events.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#shutdown\r\n     * @since 3.0.0\r\n     */\r\n    shutdown: function ()\r\n    {\r\n        this.killAll();\r\n\r\n        this._add = [];\r\n        this._pending = [];\r\n        this._active = [];\r\n        this._destroy = [];\r\n\r\n        this._toProcess = 0;\r\n\r\n        var eventEmitter = this.systems.events;\r\n\r\n        eventEmitter.off(SceneEvents.PRE_UPDATE, this.preUpdate, this);\r\n        eventEmitter.off(SceneEvents.UPDATE, this.update, this);\r\n        eventEmitter.off(SceneEvents.SHUTDOWN, this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is being destroyed.\r\n     * We need to shutdown and then kill off all external references.\r\n     *\r\n     * @method Phaser.Tweens.TweenManager#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n\r\n        this.scene.sys.events.off(SceneEvents.START, this.start, this);\r\n\r\n        this.scene = null;\r\n        this.systems = null;\r\n    }\r\n\r\n});\r\n\r\nPluginCache.register('TweenManager', TweenManager, 'tweens');\r\n\r\nmodule.exports = TweenManager;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Retrieves the value of the given key from an object.\r\n *\r\n * @function Phaser.Tweens.Builders.GetBoolean\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The key to look for in the `source` object.\r\n * @param {*} defaultValue - The default value to return if the `key` doesn't exist or if no `source` object is provided.\r\n *\r\n * @return {*} The retrieved value.\r\n */\r\nvar GetBoolean = function (source, key, defaultValue)\r\n{\r\n    if (!source)\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (source.hasOwnProperty(key))\r\n    {\r\n        return source[key];\r\n    }\r\n    else\r\n    {\r\n        return defaultValue;\r\n    }\r\n};\r\n\r\nmodule.exports = GetBoolean;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar EaseMap = require('../../math/easing/EaseMap');\r\nvar UppercaseFirst = require('../../utils/string/UppercaseFirst');\r\n\r\n/**\r\n * This internal function is used to return the correct ease function for a Tween.\r\n * \r\n * It can take a variety of input, including an EaseMap based string, or a custom function.\r\n *\r\n * @function Phaser.Tweens.Builders.GetEaseFunction\r\n * @since 3.0.0\r\n *\r\n * @param {(string|function)} ease - The ease to find. This can be either a string from the EaseMap, or a custom function.\r\n * @param {number[]} [easeParams] - An optional array of ease parameters to go with the ease.\r\n *\r\n * @return {function} The ease function.\r\n */\r\nvar GetEaseFunction = function (ease, easeParams)\r\n{\r\n    //  Default ease function\r\n    var easeFunction = EaseMap.Power0;\r\n\r\n    //  Prepare ease function\r\n    if (typeof ease === 'string')\r\n    {\r\n        //  String based look-up\r\n\r\n        //  1) They specified it correctly\r\n        if (EaseMap.hasOwnProperty(ease))\r\n        {\r\n            easeFunction = EaseMap[ease];\r\n        }\r\n        else\r\n        {\r\n            //  Do some string manipulation to try and find it\r\n            var direction = '';\r\n\r\n            if (ease.indexOf('.'))\r\n            {\r\n                //  quad.in = Quad.easeIn\r\n                //  quad.out = Quad.easeOut\r\n                //  quad.inout = Quad.easeInOut\r\n\r\n                direction = ease.substr(ease.indexOf('.') + 1);\r\n\r\n                if (direction.toLowerCase() === 'in')\r\n                {\r\n                    direction = 'easeIn';\r\n                }\r\n                else if (direction.toLowerCase() === 'out')\r\n                {\r\n                    direction = 'easeOut';\r\n                }\r\n                else if (direction.toLowerCase() === 'inout')\r\n                {\r\n                    direction = 'easeInOut';\r\n                }\r\n            }\r\n\r\n            ease = UppercaseFirst(ease.substr(0, ease.indexOf('.') + 1) + direction);\r\n\r\n            if (EaseMap.hasOwnProperty(ease))\r\n            {\r\n                easeFunction = EaseMap[ease];\r\n            }\r\n        }\r\n    }\r\n    else if (typeof ease === 'function')\r\n    {\r\n        //  Custom function\r\n        easeFunction = ease;\r\n    }\r\n    else if (Array.isArray(ease) && ease.length === 4)\r\n    {\r\n        //  Bezier function (TODO)\r\n    }\r\n\r\n    //  No custom ease parameters?\r\n    if (!easeParams)\r\n    {\r\n        //  Return ease function\r\n        return easeFunction;\r\n    }\r\n\r\n    var cloneParams = easeParams.slice(0);\r\n\r\n    cloneParams.unshift(0);\r\n\r\n    //  Return ease function with custom ease parameters\r\n    return function (v)\r\n    {\r\n        cloneParams[0] = v;\r\n\r\n        return easeFunction.apply(this, cloneParams);\r\n    };\r\n};\r\n\r\nmodule.exports = GetEaseFunction;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Internal function used by the Tween Builder to create a function that will return\r\n * the given value from the source.\r\n *\r\n * @function Phaser.Tweens.Builders.GetNewValue\r\n * @since 3.0.0\r\n *\r\n * @param {any} source - The source object to get the value from.\r\n * @param {string} key - The property to get from the source.\r\n * @param {any} defaultValue - A default value to return should the source not have the property set.\r\n *\r\n * @return {function} A function which when called will return the property value from the source.\r\n */\r\nvar GetNewValue = function (source, key, defaultValue)\r\n{\r\n    var valueCallback;\r\n\r\n    if (source.hasOwnProperty(key))\r\n    {\r\n        var t = typeof(source[key]);\r\n\r\n        if (t === 'function')\r\n        {\r\n            valueCallback = function (target, targetKey, value, targetIndex, totalTargets, tween)\r\n            {\r\n                return source[key](target, targetKey, value, targetIndex, totalTargets, tween);\r\n            };\r\n        }\r\n        else\r\n        {\r\n            valueCallback = function ()\r\n            {\r\n                return source[key];\r\n            };\r\n        }\r\n    }\r\n    else if (typeof defaultValue === 'function')\r\n    {\r\n        valueCallback = defaultValue;\r\n    }\r\n    else\r\n    {\r\n        valueCallback = function ()\r\n        {\r\n            return defaultValue;\r\n        };\r\n    }\r\n\r\n    return valueCallback;\r\n};\r\n\r\nmodule.exports = GetNewValue;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar RESERVED = require('../tween/ReservedProps');\r\n\r\n/**\r\n * Internal function used by the Tween Builder to return an array of properties\r\n * that the Tween will be operating on. It takes a tween configuration object\r\n * and then checks that none of the `props` entries start with an underscore, or that\r\n * none of the direct properties are on the Reserved list.\r\n *\r\n * @function Phaser.Tweens.Builders.GetProps\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.Tweens.TweenBuilderConfig} config - The configuration object of the Tween to get the properties from.\r\n *\r\n * @return {string[]} An array of all the properties the tween will operate on.\r\n */\r\nvar GetProps = function (config)\r\n{\r\n    var key;\r\n    var keys = [];\r\n\r\n    //  First see if we have a props object\r\n\r\n    if (config.hasOwnProperty('props'))\r\n    {\r\n        for (key in config.props)\r\n        {\r\n            //  Skip any property that starts with an underscore\r\n            if (key.substr(0, 1) !== '_')\r\n            {\r\n                keys.push({ key: key, value: config.props[key] });\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        for (key in config)\r\n        {\r\n            //  Skip any property that is in the ReservedProps list or that starts with an underscore\r\n            if (RESERVED.indexOf(key) === -1 && key.substr(0, 1) !== '_')\r\n            {\r\n                keys.push({ key: key, value: config[key] });\r\n            }\r\n        }\r\n    }\r\n\r\n    return keys;\r\n};\r\n\r\nmodule.exports = GetProps;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetValue = require('../../utils/object/GetValue');\r\n\r\n/**\r\n * Extracts an array of targets from a Tween configuration object.\r\n *\r\n * The targets will be looked for in a `targets` property. If it's a function, its return value will be used as the result.\r\n *\r\n * @function Phaser.Tweens.Builders.GetTargets\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object to use.\r\n *\r\n * @return {array} An array of targets (may contain only one element), or `null` if no targets were specified.\r\n */\r\nvar GetTargets = function (config)\r\n{\r\n    var targets = GetValue(config, 'targets', null);\r\n\r\n    if (targets === null)\r\n    {\r\n        return targets;\r\n    }\r\n\r\n    if (typeof targets === 'function')\r\n    {\r\n        targets = targets.call();\r\n    }\r\n\r\n    if (!Array.isArray(targets))\r\n    {\r\n        targets = [ targets ];\r\n    }\r\n\r\n    return targets;\r\n};\r\n\r\nmodule.exports = GetTargets;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetValue = require('../../utils/object/GetValue');\r\n\r\n/**\r\n * Internal function used by the Timeline Builder.\r\n * \r\n * It returns an array of all tweens in the given timeline config.\r\n *\r\n * @function Phaser.Tweens.Builders.GetTweens\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.Tweens.TimelineBuilderConfig} config - The configuration object for the Timeline.\r\n *\r\n * @return {Phaser.Tweens.Tween[]} An array of Tween instances that the Timeline will manage.\r\n */\r\nvar GetTweens = function (config)\r\n{\r\n    var tweens = GetValue(config, 'tweens', null);\r\n\r\n    if (tweens === null)\r\n    {\r\n        return [];\r\n    }\r\n    else if (typeof tweens === 'function')\r\n    {\r\n        tweens = tweens.call();\r\n    }\r\n\r\n    if (!Array.isArray(tweens))\r\n    {\r\n        tweens = [ tweens ];\r\n    }\r\n\r\n    return tweens;\r\n};\r\n\r\nmodule.exports = GetTweens;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction hasGetActive (def)\r\n{\r\n    return (!!def.getActive && typeof def.getActive === 'function');\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction hasGetStart (def)\r\n{\r\n    return (!!def.getStart && typeof def.getStart === 'function');\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction hasGetEnd (def)\r\n{\r\n    return (!!def.getEnd && typeof def.getEnd === 'function');\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction hasGetters (def)\r\n{\r\n    return hasGetStart(def) || hasGetEnd(def) || hasGetActive(def);\r\n}\r\n\r\n/**\r\n * Returns `getActive`, `getStart` and `getEnd` functions for a TweenData based on a target property and end value.\r\n * \r\n * `getActive` if not null, is invoked _immediately_ as soon as the TweenData is running, and is set on the target property.\r\n * `getEnd` is invoked once any start delays have expired and returns what the value should tween to.\r\n * `getStart` is invoked when the tween reaches the end and needs to either repeat or yoyo, it returns the value to go back to.\r\n *\r\n * If the end value is a number, it will be treated as an absolute value and the property will be tweened to it.\r\n * A string can be provided to specify a relative end value which consists of an operation\r\n * (`+=` to add to the current value, `-=` to subtract from the current value, `*=` to multiply the current\r\n * value, or `/=` to divide the current value) followed by its operand.\r\n * \r\n * A function can be provided to allow greater control over the end value; it will receive the target\r\n * object being tweened, the name of the property being tweened, and the current value of the property\r\n * as its arguments.\r\n * \r\n * If both the starting and the ending values need to be controlled, an object with `getStart` and `getEnd`\r\n * callbacks, which will receive the same arguments, can be provided instead. If an object with a `value`\r\n * property is provided, the property will be used as the effective value under the same rules described here.\r\n *\r\n * @function Phaser.Tweens.Builders.GetValueOp\r\n * @since 3.0.0\r\n *\r\n * @param {string} key - The name of the property to modify.\r\n * @param {*} propertyValue - The ending value of the property, as described above.\r\n *\r\n * @return {function} An array of functions, `getActive`, `getStart` and `getEnd`, which return the starting and the ending value of the property based on the provided value.\r\n */\r\nvar GetValueOp = function (key, propertyValue)\r\n{\r\n    var callbacks;\r\n\r\n    //  The returned value sets what the property will be at the END of the Tween (usually called at the start of the Tween)\r\n    var getEnd = function (target, key, value) { return value; };\r\n\r\n    //  The returned value sets what the property will be at the START of the Tween (usually called at the end of the Tween)\r\n    var getStart = function (target, key, value) { return value; };\r\n\r\n    //  What to set the property to the moment the TweenData is invoked\r\n    var getActive = null;\r\n\r\n    var t = typeof(propertyValue);\r\n\r\n    if (t === 'number')\r\n    {\r\n        // props: {\r\n        //     x: 400,\r\n        //     y: 300\r\n        // }\r\n\r\n        getEnd = function ()\r\n        {\r\n            return propertyValue;\r\n        };\r\n    }\r\n    else if (t === 'string')\r\n    {\r\n        // props: {\r\n        //     x: '+=400',\r\n        //     y: '-=300',\r\n        //     z: '*=2',\r\n        //     w: '/=2'\r\n        // }\r\n\r\n        var op = propertyValue[0];\r\n        var num = parseFloat(propertyValue.substr(2));\r\n\r\n        switch (op)\r\n        {\r\n            case '+':\r\n                getEnd = function (target, key, value)\r\n                {\r\n                    return value + num;\r\n                };\r\n                break;\r\n\r\n            case '-':\r\n                getEnd = function (target, key, value)\r\n                {\r\n                    return value - num;\r\n                };\r\n                break;\r\n\r\n            case '*':\r\n                getEnd = function (target, key, value)\r\n                {\r\n                    return value * num;\r\n                };\r\n                break;\r\n\r\n            case '/':\r\n                getEnd = function (target, key, value)\r\n                {\r\n                    return value / num;\r\n                };\r\n                break;\r\n\r\n            default:\r\n                getEnd = function ()\r\n                {\r\n                    return parseFloat(propertyValue);\r\n                };\r\n        }\r\n    }\r\n    else if (t === 'function')\r\n    {\r\n        //  The same as setting just the getEnd function and no getStart\r\n\r\n        // props: {\r\n        //     x: function (target, key, value, targetIndex, totalTargets, tween) { return value + 50); },\r\n        // }\r\n\r\n        getEnd = propertyValue;\r\n    }\r\n    else if (t === 'object')\r\n    {\r\n        if (hasGetters(propertyValue))\r\n        {\r\n            /*\r\n            x: {\r\n                //  Called the moment Tween is active. The returned value sets the property on the target immediately.\r\n                getActive: function (target, key, value, targetIndex, totalTargets, tween)\r\n                {\r\n                    return value;\r\n                },\r\n\r\n                //  Called at the start of the Tween. The returned value sets what the property will be at the END of the Tween.\r\n                getEnd: function (target, key, value, targetIndex, totalTargets, tween)\r\n                {\r\n                    return value;\r\n                },\r\n\r\n                //  Called at the end of the Tween. The returned value sets what the property will be at the START of the Tween.\r\n                getStart: function (target, key, value, targetIndex, totalTargets, tween)\r\n                {\r\n                    return value;\r\n                }\r\n            }\r\n            */\r\n\r\n            if (hasGetActive(propertyValue))\r\n            {\r\n                getActive = propertyValue.getActive;\r\n            }\r\n\r\n            if (hasGetEnd(propertyValue))\r\n            {\r\n                getEnd = propertyValue.getEnd;\r\n            }\r\n\r\n            if (hasGetStart(propertyValue))\r\n            {\r\n                getStart = propertyValue.getStart;\r\n            }\r\n        }\r\n        else if (propertyValue.hasOwnProperty('value'))\r\n        {\r\n            //  'value' may still be a string, function or a number\r\n            // props: {\r\n            //     x: { value: 400, ... },\r\n            //     y: { value: 300, ... }\r\n            // }\r\n\r\n            callbacks = GetValueOp(key, propertyValue.value);\r\n        }\r\n        else\r\n        {\r\n            //  'from' and 'to' may still be a string, function or a number\r\n            // props: {\r\n            //     x: { from: 400, to: 600 },\r\n            //     y: { from: 300, to: 500 }\r\n            // }\r\n\r\n            //  Same as above, but the 'start' value is set immediately on the target\r\n            // props: {\r\n            //     x: { start: 400, to: 600 },\r\n            //     y: { start: 300, to: 500 }\r\n            // }\r\n\r\n            //  'start' value is set immediately, then it goes 'from' to 'to' during the tween\r\n            // props: {\r\n            //     x: { start: 200, from: 400, to: 600 },\r\n            //     y: { start: 300, from: 300, to: 500 }\r\n            // }\r\n\r\n            var hasTo = propertyValue.hasOwnProperty('to');\r\n            var hasFrom = propertyValue.hasOwnProperty('from');\r\n            var hasStart = propertyValue.hasOwnProperty('start');\r\n\r\n            if (hasTo && (hasFrom || hasStart))\r\n            {\r\n                callbacks = GetValueOp(key, propertyValue.to);\r\n\r\n                if (hasStart)\r\n                {\r\n                    var startCallbacks = GetValueOp(key, propertyValue.start);\r\n        \r\n                    callbacks.getActive = startCallbacks.getEnd;\r\n                }\r\n        \r\n                if (hasFrom)\r\n                {\r\n                    var fromCallbacks = GetValueOp(key, propertyValue.from);\r\n        \r\n                    callbacks.getStart = fromCallbacks.getEnd;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //  If callback not set by the else if block above then set it here and return it\r\n    if (!callbacks)\r\n    {\r\n        callbacks = {\r\n            getActive: getActive,\r\n            getEnd: getEnd,\r\n            getStart: getStart\r\n        };\r\n    }\r\n\r\n    return callbacks;\r\n};\r\n\r\nmodule.exports = GetValueOp;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Defaults = require('../tween/Defaults');\r\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\r\nvar GetBoolean = require('./GetBoolean');\r\nvar GetEaseFunction = require('./GetEaseFunction');\r\nvar GetNewValue = require('./GetNewValue');\r\nvar GetValue = require('../../utils/object/GetValue');\r\nvar GetValueOp = require('./GetValueOp');\r\nvar Tween = require('../tween/Tween');\r\nvar TweenData = require('../tween/TweenData');\r\n\r\n/**\r\n * Creates a new Number Tween.\r\n *\r\n * @function Phaser.Tweens.Builders.NumberTweenBuilder\r\n * @since 3.0.0\r\n *\r\n * @param {(Phaser.Tweens.TweenManager|Phaser.Tweens.Timeline)} parent - The owner of the new Tween.\r\n * @param {Phaser.Types.Tweens.NumberTweenBuilderConfig} config - Configuration for the new Tween.\r\n * @param {Phaser.Types.Tweens.TweenConfigDefaults} defaults - Tween configuration defaults.\r\n *\r\n * @return {Phaser.Tweens.Tween} The new tween.\r\n */\r\nvar NumberTweenBuilder = function (parent, config, defaults)\r\n{\r\n    if (defaults === undefined)\r\n    {\r\n        defaults = Defaults;\r\n    }\r\n\r\n    //  var tween = this.tweens.addCounter({\r\n    //      from: 100,\r\n    //      to: 200,\r\n    //      ... (normal tween properties)\r\n    //  })\r\n    //\r\n    //  Then use it in your game via:\r\n    //\r\n    //  tween.getValue()\r\n\r\n    var from = GetValue(config, 'from', 0);\r\n    var to = GetValue(config, 'to', 1);\r\n\r\n    var targets = [ { value: from } ];\r\n\r\n    var delay = GetNewValue(config, 'delay', defaults.delay);\r\n    var duration = GetNewValue(config, 'duration', defaults.duration);\r\n    var easeParams = GetValue(config, 'easeParams', defaults.easeParams);\r\n    var ease = GetEaseFunction(GetValue(config, 'ease', defaults.ease), easeParams);\r\n    var hold = GetNewValue(config, 'hold', defaults.hold);\r\n    var repeat = GetNewValue(config, 'repeat', defaults.repeat);\r\n    var repeatDelay = GetNewValue(config, 'repeatDelay', defaults.repeatDelay);\r\n    var yoyo = GetBoolean(config, 'yoyo', defaults.yoyo);\r\n\r\n    var data = [];\r\n\r\n    var ops = GetValueOp('value', to);\r\n\r\n    var tweenData = TweenData(\r\n        targets[0],\r\n        0,\r\n        'value',\r\n        ops.getEnd,\r\n        ops.getStart,\r\n        ops.getActive,\r\n        ease,\r\n        delay,\r\n        duration,\r\n        yoyo,\r\n        hold,\r\n        repeat,\r\n        repeatDelay,\r\n        false,\r\n        false\r\n    );\r\n\r\n    tweenData.start = from;\r\n    tweenData.current = from;\r\n    tweenData.to = to;\r\n\r\n    data.push(tweenData);\r\n\r\n    var tween = new Tween(parent, data, targets);\r\n\r\n    tween.offset = GetAdvancedValue(config, 'offset', null);\r\n    tween.completeDelay = GetAdvancedValue(config, 'completeDelay', 0);\r\n    tween.loop = Math.round(GetAdvancedValue(config, 'loop', 0));\r\n    tween.loopDelay = Math.round(GetAdvancedValue(config, 'loopDelay', 0));\r\n    tween.paused = GetBoolean(config, 'paused', false);\r\n    tween.useFrames = GetBoolean(config, 'useFrames', false);\r\n\r\n    //  Set the Callbacks\r\n    var scope = GetValue(config, 'callbackScope', tween);\r\n\r\n    //  Callback parameters: 0 = a reference to the Tween itself, 1 = the target/s of the Tween, ... your own params\r\n    var tweenArray = [ tween, null ];\r\n\r\n    var callbacks = Tween.TYPES;\r\n\r\n    for (var i = 0; i < callbacks.length; i++)\r\n    {\r\n        var type = callbacks[i];\r\n\r\n        var callback = GetValue(config, type, false);\r\n\r\n        if (callback)\r\n        {\r\n            var callbackScope = GetValue(config, type + 'Scope', scope);\r\n            var callbackParams = GetValue(config, type + 'Params', []);\r\n\r\n            //  The null is reset to be the Tween target\r\n            tween.setCallback(type, callback, tweenArray.concat(callbackParams), callbackScope);\r\n        }\r\n    }\r\n\r\n    return tween;\r\n};\r\n\r\nmodule.exports = NumberTweenBuilder;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetEaseFunction = require('./GetEaseFunction');\r\nvar GetValue = require('../../utils/object/GetValue');\r\nvar MATH_CONST = require('../../math/const');\r\n\r\n/**\r\n * Creates a Stagger function to be used by a Tween property.\r\n * \r\n * The stagger function will allow you to stagger changes to the value of the property across all targets of the tween.\r\n * \r\n * This is only worth using if the tween has multiple targets.\r\n * \r\n * The following will stagger the delay by 100ms across all targets of the tween, causing them to scale down to 0.2\r\n * over the duration specified:\r\n * \r\n * ```javascript\r\n * this.tweens.add({\r\n *     targets: [ ... ],\r\n *     scale: 0.2,\r\n *     ease: 'linear',\r\n *     duration: 1000,\r\n *     delay: this.tweens.stagger(100)\r\n * });\r\n * ```\r\n * \r\n * The following will stagger the delay by 500ms across all targets of the tween using a 10 x 6 grid, staggering\r\n * from the center out, using a cubic ease.\r\n * \r\n * ```javascript\r\n * this.tweens.add({\r\n *     targets: [ ... ],\r\n *     scale: 0.2,\r\n *     ease: 'linear',\r\n *     duration: 1000,\r\n *     delay: this.tweens.stagger(500, { grid: [ 10, 6 ], from: 'center', ease: 'cubic.out' })\r\n * });\r\n * ```\r\n *\r\n * @function Phaser.Tweens.Builders.StaggerBuilder\r\n * @since 3.19.0\r\n *\r\n * @param {(number|number[])} value - The amount to stagger by, or an array containing two elements representing the min and max values to stagger between.\r\n * @param {Phaser.Types.Tweens.StaggerConfig} [config] - A Stagger Configuration object.\r\n *\r\n * @return {function} The stagger function.\r\n */\r\nvar StaggerBuilder = function (value, options)\r\n{\r\n    if (options === undefined) { options = {}; }\r\n\r\n    var result;\r\n\r\n    var start = GetValue(options, 'start', 0);\r\n    var ease = GetValue(options, 'ease', null);\r\n    var grid = GetValue(options, 'grid', null);\r\n\r\n    var from = GetValue(options, 'from', 0);\r\n\r\n    var fromFirst = (from === 'first');\r\n    var fromCenter = (from === 'center');\r\n    var fromLast = (from === 'last');\r\n    var fromValue = (typeof(from) === 'number');\r\n\r\n    var isRange = (Array.isArray(value));\r\n    var value1 = (isRange) ? parseFloat(value[0]) : parseFloat(value);\r\n    var value2 = (isRange) ? parseFloat(value[1]) : 0;\r\n    var maxValue = Math.max(value1, value2);\r\n\r\n    if (isRange)\r\n    {\r\n        start += value1;\r\n    }\r\n\r\n    if (grid)\r\n    {\r\n        //  Pre-calc the grid to save doing it for ever tweendata update\r\n        var gridWidth = grid[0];\r\n        var gridHeight = grid[1];\r\n\r\n        var fromX = 0;\r\n        var fromY = 0;\r\n\r\n        var distanceX = 0;\r\n        var distanceY = 0;\r\n\r\n        var gridValues = [];\r\n\r\n        if (fromLast)\r\n        {\r\n            fromX = gridWidth - 1;\r\n            fromY = gridHeight - 1;\r\n        }\r\n        else if (fromValue)\r\n        {\r\n            fromX = from % gridWidth;\r\n            fromY = Math.floor(from / gridWidth);\r\n        }\r\n        else if (fromCenter)\r\n        {\r\n            fromX = (gridWidth - 1) / 2;\r\n            fromY = (gridHeight - 1) / 2;\r\n        }\r\n\r\n        var gridMax = MATH_CONST.MIN_SAFE_INTEGER;\r\n\r\n        for (var toY = 0; toY < gridHeight; toY++)\r\n        {\r\n            gridValues[toY] = [];\r\n\r\n            for (var toX = 0; toX < gridWidth; toX++)\r\n            {\r\n                distanceX = fromX - toX;\r\n                distanceY = fromY - toY;\r\n\r\n                var dist = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\r\n\r\n                if (dist > gridMax)\r\n                {\r\n                    gridMax = dist;\r\n                }\r\n\r\n                gridValues[toY][toX] = dist;\r\n            }\r\n        }\r\n    }\r\n\r\n    var easeFunction = (ease) ? GetEaseFunction(ease) : null;\r\n\r\n    if (grid)\r\n    {\r\n        result = function (target, key, value, index)\r\n        {\r\n            var gridSpace = 0;\r\n            var toX = index % gridWidth;\r\n            var toY = Math.floor(index / gridWidth);\r\n    \r\n            if (toX >= 0 && toX < gridWidth && toY >= 0 && toY < gridHeight)\r\n            {\r\n                gridSpace = gridValues[toY][toX];\r\n            }\r\n\r\n            var output;\r\n   \r\n            if (isRange)\r\n            {\r\n                var diff = (value2 - value1);\r\n    \r\n                if (easeFunction)\r\n                {\r\n                    output = ((gridSpace / gridMax) * diff) * easeFunction(gridSpace / gridMax);\r\n                }\r\n                else\r\n                {\r\n                    output = (gridSpace / gridMax) * diff;\r\n                }\r\n            }\r\n            else if (easeFunction)\r\n            {\r\n                output = (gridSpace * value1) * easeFunction(gridSpace / gridMax);\r\n            }\r\n            else\r\n            {\r\n                output = gridSpace * value1;\r\n            }\r\n\r\n            return output + start;\r\n        };\r\n    }\r\n    else\r\n    {\r\n        result = function (target, key, value, index, total)\r\n        {\r\n            //  zero offset\r\n            total--;\r\n    \r\n            var fromIndex;\r\n    \r\n            if (fromFirst)\r\n            {\r\n                fromIndex = index;\r\n            }\r\n            else if (fromCenter)\r\n            {\r\n                fromIndex = Math.abs((total / 2) - index);\r\n            }\r\n            else if (fromLast)\r\n            {\r\n                fromIndex = total - index;\r\n            }\r\n            else if (fromValue)\r\n            {\r\n                fromIndex = Math.abs(from - index);\r\n            }\r\n    \r\n            var output;\r\n        \r\n            if (isRange)\r\n            {\r\n                var spacing;\r\n\r\n                if (fromCenter)\r\n                {\r\n                    spacing = ((value2 - value1) / total) * (fromIndex * 2);\r\n                }\r\n                else\r\n                {\r\n                    spacing = ((value2 - value1) / total) * fromIndex;\r\n                }\r\n                    \r\n                if (easeFunction)\r\n                {\r\n                    output = spacing * easeFunction(fromIndex / total);\r\n                }\r\n                else\r\n                {\r\n                    output = spacing;\r\n                }\r\n            }\r\n            else if (easeFunction)\r\n            {\r\n                output = (total * maxValue) * easeFunction(fromIndex / total);\r\n            }\r\n            else\r\n            {\r\n                output = fromIndex * value1;\r\n            }\r\n    \r\n            return output + start;\r\n        };\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nmodule.exports = StaggerBuilder;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Clone = require('../../utils/object/Clone');\r\nvar Defaults = require('../tween/Defaults');\r\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\r\nvar GetBoolean = require('./GetBoolean');\r\nvar GetEaseFunction = require('./GetEaseFunction');\r\nvar GetNewValue = require('./GetNewValue');\r\nvar GetTargets = require('./GetTargets');\r\nvar GetTweens = require('./GetTweens');\r\nvar GetValue = require('../../utils/object/GetValue');\r\nvar Timeline = require('../Timeline');\r\nvar TweenBuilder = require('./TweenBuilder');\r\n\r\n/**\r\n * Builds a Timeline of Tweens based on a configuration object.\r\n *\r\n * @function Phaser.Tweens.Builders.TimelineBuilder\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Tweens.TweenManager} manager - The Tween Manager to which the Timeline will belong.\r\n * @param {Phaser.Types.Tweens.TimelineBuilderConfig} config - The configuration object for the Timeline.\r\n *\r\n * @return {Phaser.Tweens.Timeline} The created Timeline.\r\n */\r\nvar TimelineBuilder = function (manager, config)\r\n{\r\n    var timeline = new Timeline(manager);\r\n\r\n    timeline.completeDelay = GetAdvancedValue(config, 'completeDelay', 0);\r\n    timeline.loop = Math.round(GetAdvancedValue(config, 'loop', 0));\r\n    timeline.loopDelay = Math.round(GetAdvancedValue(config, 'loopDelay', 0));\r\n    timeline.paused = GetBoolean(config, 'paused', false);\r\n    timeline.useFrames = GetBoolean(config, 'useFrames', false);\r\n\r\n    //  Callbacks\r\n\r\n    var scope = GetValue(config, 'callbackScope', timeline);\r\n\r\n    var timelineArray = [ timeline ];\r\n\r\n    var onStart = GetValue(config, 'onStart', false);\r\n\r\n    //  The Start of the Timeline\r\n    if (onStart)\r\n    {\r\n        var onStartScope = GetValue(config, 'onStartScope', scope);\r\n        var onStartParams = GetValue(config, 'onStartParams', []);\r\n\r\n        timeline.setCallback('onStart', onStart, timelineArray.concat(onStartParams), onStartScope);\r\n    }\r\n\r\n    var onUpdate = GetValue(config, 'onUpdate', false);\r\n\r\n    //  Every time the Timeline updates (regardless which Tweens are running)\r\n    if (onUpdate)\r\n    {\r\n        var onUpdateScope = GetValue(config, 'onUpdateScope', scope);\r\n        var onUpdateParams = GetValue(config, 'onUpdateParams', []);\r\n\r\n        timeline.setCallback('onUpdate', onUpdate, timelineArray.concat(onUpdateParams), onUpdateScope);\r\n    }\r\n\r\n    var onLoop = GetValue(config, 'onLoop', false);\r\n\r\n    //  Called when the whole Timeline loops\r\n    if (onLoop)\r\n    {\r\n        var onLoopScope = GetValue(config, 'onLoopScope', scope);\r\n        var onLoopParams = GetValue(config, 'onLoopParams', []);\r\n\r\n        timeline.setCallback('onLoop', onLoop, timelineArray.concat(onLoopParams), onLoopScope);\r\n    }\r\n\r\n    var onYoyo = GetValue(config, 'onYoyo', false);\r\n\r\n    //  Called when a Timeline yoyos\r\n    if (onYoyo)\r\n    {\r\n        var onYoyoScope = GetValue(config, 'onYoyoScope', scope);\r\n        var onYoyoParams = GetValue(config, 'onYoyoParams', []);\r\n\r\n        timeline.setCallback('onYoyo', onYoyo, timelineArray.concat(null, onYoyoParams), onYoyoScope);\r\n    }\r\n\r\n    var onComplete = GetValue(config, 'onComplete', false);\r\n\r\n    //  Called when the Timeline completes, after the completeDelay, etc.\r\n    if (onComplete)\r\n    {\r\n        var onCompleteScope = GetValue(config, 'onCompleteScope', scope);\r\n        var onCompleteParams = GetValue(config, 'onCompleteParams', []);\r\n\r\n        timeline.setCallback('onComplete', onComplete, timelineArray.concat(onCompleteParams), onCompleteScope);\r\n    }\r\n\r\n    // Tweens\r\n\r\n    var tweens = GetTweens(config);\r\n\r\n    if (tweens.length === 0)\r\n    {\r\n        timeline.paused = true;\r\n\r\n        return timeline;\r\n    }\r\n\r\n    var defaults = Clone(Defaults);\r\n\r\n    defaults.targets = GetTargets(config);\r\n\r\n    //  totalDuration: If specified each tween in the Timeline is given an equal portion of the totalDuration\r\n\r\n    var totalDuration = GetAdvancedValue(config, 'totalDuration', 0);\r\n\r\n    if (totalDuration > 0)\r\n    {\r\n        defaults.duration = Math.floor(totalDuration / tweens.length);\r\n    }\r\n    else\r\n    {\r\n        defaults.duration = GetNewValue(config, 'duration', defaults.duration);\r\n    }\r\n\r\n    defaults.delay = GetNewValue(config, 'delay', defaults.delay);\r\n    defaults.easeParams = GetValue(config, 'easeParams', defaults.easeParams);\r\n    defaults.ease = GetEaseFunction(GetValue(config, 'ease', defaults.ease), defaults.easeParams);\r\n    defaults.hold = GetNewValue(config, 'hold', defaults.hold);\r\n    defaults.repeat = GetNewValue(config, 'repeat', defaults.repeat);\r\n    defaults.repeatDelay = GetNewValue(config, 'repeatDelay', defaults.repeatDelay);\r\n    defaults.yoyo = GetBoolean(config, 'yoyo', defaults.yoyo);\r\n    defaults.flipX = GetBoolean(config, 'flipX', defaults.flipX);\r\n    defaults.flipY = GetBoolean(config, 'flipY', defaults.flipY);\r\n\r\n    //  Create the Tweens\r\n    for (var i = 0; i < tweens.length; i++)\r\n    {\r\n        timeline.queue(TweenBuilder(timeline, tweens[i], defaults));\r\n    }\r\n\r\n    return timeline;\r\n};\r\n\r\nmodule.exports = TimelineBuilder;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Defaults = require('../tween/Defaults');\r\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\r\nvar GetBoolean = require('./GetBoolean');\r\nvar GetEaseFunction = require('./GetEaseFunction');\r\nvar GetNewValue = require('./GetNewValue');\r\nvar GetProps = require('./GetProps');\r\nvar GetTargets = require('./GetTargets');\r\nvar GetValue = require('../../utils/object/GetValue');\r\nvar GetValueOp = require('./GetValueOp');\r\nvar Tween = require('../tween/Tween');\r\nvar TweenData = require('../tween/TweenData');\r\n\r\n/**\r\n * Creates a new Tween.\r\n *\r\n * @function Phaser.Tweens.Builders.TweenBuilder\r\n * @since 3.0.0\r\n *\r\n * @param {(Phaser.Tweens.TweenManager|Phaser.Tweens.Timeline)} parent - The owner of the new Tween.\r\n * @param {Phaser.Types.Tweens.TweenBuilderConfig|object} config - Configuration for the new Tween.\r\n * @param {Phaser.Types.Tweens.TweenConfigDefaults} defaults - Tween configuration defaults.\r\n *\r\n * @return {Phaser.Tweens.Tween} The new tween.\r\n */\r\nvar TweenBuilder = function (parent, config, defaults)\r\n{\r\n    if (defaults === undefined)\r\n    {\r\n        defaults = Defaults;\r\n    }\r\n\r\n    //  Create arrays of the Targets and the Properties\r\n    var targets = (defaults.targets) ? defaults.targets : GetTargets(config);\r\n\r\n    // var props = (defaults.props) ? defaults.props : GetProps(config);\r\n    var props = GetProps(config);\r\n\r\n    //  Default Tween values\r\n    var delay = GetNewValue(config, 'delay', defaults.delay);\r\n    var duration = GetNewValue(config, 'duration', defaults.duration);\r\n    var easeParams = GetValue(config, 'easeParams', defaults.easeParams);\r\n    var ease = GetEaseFunction(GetValue(config, 'ease', defaults.ease), easeParams);\r\n    var hold = GetNewValue(config, 'hold', defaults.hold);\r\n    var repeat = GetNewValue(config, 'repeat', defaults.repeat);\r\n    var repeatDelay = GetNewValue(config, 'repeatDelay', defaults.repeatDelay);\r\n    var yoyo = GetBoolean(config, 'yoyo', defaults.yoyo);\r\n    var flipX = GetBoolean(config, 'flipX', defaults.flipX);\r\n    var flipY = GetBoolean(config, 'flipY', defaults.flipY);\r\n\r\n    var data = [];\r\n\r\n    //  Loop through every property defined in the Tween, i.e.: props { x, y, alpha }\r\n    for (var p = 0; p < props.length; p++)\r\n    {\r\n        var key = props[p].key;\r\n        var value = props[p].value;\r\n\r\n        //  Create 1 TweenData per target, per property\r\n        for (var t = 0; t < targets.length; t++)\r\n        {\r\n            var ops = GetValueOp(key, value);\r\n\r\n            var tweenData = TweenData(\r\n                targets[t],\r\n                t,\r\n                key,\r\n                ops.getEnd,\r\n                ops.getStart,\r\n                ops.getActive,\r\n                GetEaseFunction(GetValue(value, 'ease', ease), GetValue(value, 'easeParams', easeParams)),\r\n                GetNewValue(value, 'delay', delay),\r\n                GetNewValue(value, 'duration', duration),\r\n                GetBoolean(value, 'yoyo', yoyo),\r\n                GetNewValue(value, 'hold', hold),\r\n                GetNewValue(value, 'repeat', repeat),\r\n                GetNewValue(value, 'repeatDelay', repeatDelay),\r\n                GetBoolean(value, 'flipX', flipX),\r\n                GetBoolean(value, 'flipY', flipY)\r\n            );\r\n\r\n            data.push(tweenData);\r\n        }\r\n    }\r\n\r\n    var tween = new Tween(parent, data, targets);\r\n\r\n    tween.offset = GetAdvancedValue(config, 'offset', null);\r\n    tween.completeDelay = GetAdvancedValue(config, 'completeDelay', 0);\r\n    tween.loop = Math.round(GetAdvancedValue(config, 'loop', 0));\r\n    tween.loopDelay = Math.round(GetAdvancedValue(config, 'loopDelay', 0));\r\n    tween.paused = GetBoolean(config, 'paused', false);\r\n    tween.useFrames = GetBoolean(config, 'useFrames', false);\r\n\r\n    //  Set the Callbacks\r\n    var scope = GetValue(config, 'callbackScope', tween);\r\n\r\n    //  Callback parameters: 0 = a reference to the Tween itself, 1 = the target/s of the Tween, ... your own params\r\n    var tweenArray = [ tween, null ];\r\n\r\n    var callbacks = Tween.TYPES;\r\n\r\n    for (var i = 0; i < callbacks.length; i++)\r\n    {\r\n        var type = callbacks[i];\r\n\r\n        var callback = GetValue(config, type, false);\r\n\r\n        if (callback)\r\n        {\r\n            var callbackScope = GetValue(config, type + 'Scope', scope);\r\n            var callbackParams = GetValue(config, type + 'Params', []);\r\n\r\n            //  The null is reset to be the Tween target\r\n            tween.setCallback(type, callback, tweenArray.concat(callbackParams), callbackScope);\r\n        }\r\n    }\r\n\r\n    return tween;\r\n};\r\n\r\nmodule.exports = TweenBuilder;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Tweens.Builders\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    GetBoolean: require('./GetBoolean'),\r\n    GetEaseFunction: require('./GetEaseFunction'),\r\n    GetNewValue: require('./GetNewValue'),\r\n    GetProps: require('./GetProps'),\r\n    GetTargets: require('./GetTargets'),\r\n    GetTweens: require('./GetTweens'),\r\n    GetValueOp: require('./GetValueOp'),\r\n    NumberTweenBuilder: require('./NumberTweenBuilder'),\r\n    StaggerBuilder: require('./StaggerBuilder'),\r\n    TimelineBuilder: require('./TimelineBuilder'),\r\n    TweenBuilder: require('./TweenBuilder')\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Timeline Complete Event.\r\n * \r\n * This event is dispatched by a Tween Timeline when it completes playback.\r\n * \r\n * Listen to it from a Timeline instance using `Timeline.on('complete', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var timeline = this.tweens.timeline({\r\n *     targets: image,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     tweens: [ { x: 600 }, { y: 500 }, { x: 100 }, { y: 100 } ]\r\n * });\r\n * timeline.on('complete', listener);\r\n * timeline.play();\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TIMELINE_COMPLETE\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Tweens.Timeline} timeline - A reference to the Timeline instance that emitted the event.\r\n */\r\nmodule.exports = 'complete';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Timeline Loop Event.\r\n * \r\n * This event is dispatched by a Tween Timeline every time it loops.\r\n * \r\n * Listen to it from a Timeline instance using `Timeline.on('loop', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var timeline = this.tweens.timeline({\r\n *     targets: image,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     loop: 4,\r\n *     tweens: [ { x: 600 }, { y: 500 }, { x: 100 }, { y: 100 } ]\r\n * });\r\n * timeline.on('loop', listener);\r\n * timeline.play();\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TIMELINE_LOOP\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Tweens.Timeline} timeline - A reference to the Timeline instance that emitted the event.\r\n */\r\nmodule.exports = 'loop';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Timeline Pause Event.\r\n * \r\n * This event is dispatched by a Tween Timeline when it is paused.\r\n * \r\n * Listen to it from a Timeline instance using `Timeline.on('pause', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var timeline = this.tweens.timeline({\r\n *     targets: image,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     tweens: [ { x: 600 }, { y: 500 }, { x: 100 }, { y: 100 } ]\r\n * });\r\n * timeline.on('pause', listener);\r\n * // At some point later ...\r\n * timeline.pause();\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TIMELINE_PAUSE\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Tweens.Timeline} timeline - A reference to the Timeline instance that emitted the event.\r\n */\r\nmodule.exports = 'pause';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Timeline Resume Event.\r\n * \r\n * This event is dispatched by a Tween Timeline when it is resumed from a paused state.\r\n * \r\n * Listen to it from a Timeline instance using `Timeline.on('resume', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var timeline = this.tweens.timeline({\r\n *     targets: image,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     tweens: [ { x: 600 }, { y: 500 }, { x: 100 }, { y: 100 } ]\r\n * });\r\n * timeline.on('resume', listener);\r\n * // At some point later ...\r\n * timeline.resume();\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TIMELINE_RESUME\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Tweens.Timeline} timeline - A reference to the Timeline instance that emitted the event.\r\n */\r\nmodule.exports = 'resume';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Timeline Start Event.\r\n * \r\n * This event is dispatched by a Tween Timeline when it starts.\r\n * \r\n * Listen to it from a Timeline instance using `Timeline.on('start', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var timeline = this.tweens.timeline({\r\n *     targets: image,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     tweens: [ { x: 600 }, { y: 500 }, { x: 100 }, { y: 100 } ]\r\n * });\r\n * timeline.on('start', listener);\r\n * timeline.play();\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TIMELINE_START\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Tweens.Timeline} timeline - A reference to the Timeline instance that emitted the event.\r\n */\r\nmodule.exports = 'start';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Timeline Update Event.\r\n * \r\n * This event is dispatched by a Tween Timeline every time it updates, which can happen a lot of times per second,\r\n * so be careful about listening to this event unless you absolutely require it.\r\n * \r\n * Listen to it from a Timeline instance using `Timeline.on('update', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var timeline = this.tweens.timeline({\r\n *     targets: image,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     tweens: [ { x: 600 }, { y: 500 }, { x: 100 }, { y: 100 } ]\r\n * });\r\n * timeline.on('update', listener);\r\n * timeline.play();\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TIMELINE_UPDATE\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Tweens.Timeline} timeline - A reference to the Timeline instance that emitted the event.\r\n */\r\nmodule.exports = 'update';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Tween Active Event.\r\n * \r\n * This event is dispatched by a Tween when it becomes active within the Tween Manager.\r\n * \r\n * An 'active' Tween is one that is now progressing, although it may not yet be updating\r\n * any target properties, due to settings such as `delay`. If you need an event for when\r\n * the Tween starts actually updating its first property, see `TWEEN_START`.\r\n * \r\n * Listen to it from a Tween instance using `Tween.on('active', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var tween = this.tweens.add({\r\n *     targets: image,\r\n *     x: 500,\r\n *     ease: 'Power1',\r\n *     duration: 3000\r\n * });\r\n * tween.on('active', listener);\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TWEEN_ACTIVE\r\n * @since 3.19.0\r\n * \r\n * @param {Phaser.Tweens.Tween} tween - A reference to the Tween instance that emitted the event.\r\n * @param {any[]} targets - An array of references to the target/s the Tween is operating on.\r\n */\r\nmodule.exports = 'active';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Tween Complete Event.\r\n * \r\n * This event is dispatched by a Tween when it completes playback entirely, factoring in repeats and loops.\r\n * \r\n * If the Tween has been set to loop or repeat infinitely, this event will not be dispatched\r\n * unless the `Tween.stop` method is called.\r\n * \r\n * If a Tween has a `completeDelay` set, this event will fire after that delay expires.\r\n * \r\n * Listen to it from a Tween instance using `Tween.on('complete', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var tween = this.tweens.add({\r\n *     targets: image,\r\n *     x: 500,\r\n *     ease: 'Power1',\r\n *     duration: 3000\r\n * });\r\n * tween.on('complete', listener);\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TWEEN_COMPLETE\r\n * @since 3.19.0\r\n * \r\n * @param {Phaser.Tweens.Tween} tween - A reference to the Tween instance that emitted the event.\r\n * @param {any[]} targets - An array of references to the target/s the Tween is operating on.\r\n */\r\nmodule.exports = 'complete';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Tween Loop Event.\r\n * \r\n * This event is dispatched by a Tween when it loops.\r\n * \r\n * This event will only be dispatched if the Tween has a loop count set.\r\n * \r\n * If a Tween has a `loopDelay` set, this event will fire after that delay expires.\r\n * \r\n * The difference between `loop` and `repeat` is that `repeat` is a property setting,\r\n * where-as `loop` applies to the entire Tween.\r\n * \r\n * Listen to it from a Tween instance using `Tween.on('loop', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var tween = this.tweens.add({\r\n *     targets: image,\r\n *     x: 500,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     loop: 6\r\n * });\r\n * tween.on('loop', listener);\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TWEEN_LOOP\r\n * @since 3.19.0\r\n * \r\n * @param {Phaser.Tweens.Tween} tween - A reference to the Tween instance that emitted the event.\r\n * @param {any[]} targets - An array of references to the target/s the Tween is operating on.\r\n */\r\nmodule.exports = 'loop';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Tween Repeat Event.\r\n * \r\n * This event is dispatched by a Tween when one of the properties it is tweening repeats.\r\n * \r\n * This event will only be dispatched if the Tween has a property with a repeat count set.\r\n * \r\n * If a Tween has a `repeatDelay` set, this event will fire after that delay expires.\r\n * \r\n * The difference between `loop` and `repeat` is that `repeat` is a property setting,\r\n * where-as `loop` applies to the entire Tween.\r\n * \r\n * Listen to it from a Tween instance using `Tween.on('repeat', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var tween = this.tweens.add({\r\n *     targets: image,\r\n *     x: 500,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     repeat: 4\r\n * });\r\n * tween.on('repeat', listener);\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TWEEN_REPEAT\r\n * @since 3.19.0\r\n * \r\n * @param {Phaser.Tweens.Tween} tween - A reference to the Tween instance that emitted the event.\r\n * @param {string} key - The key of the property that just repeated.\r\n * @param {any} target - The target that the property just repeated on.\r\n */\r\nmodule.exports = 'repeat';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Tween Start Event.\r\n * \r\n * This event is dispatched by a Tween when it starts tweening its first property.\r\n * \r\n * A Tween will only emit this event once, as it can only start once.\r\n * \r\n * If a Tween has a `delay` set, this event will fire after that delay expires.\r\n * \r\n * Listen to it from a Tween instance using `Tween.on('start', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var tween = this.tweens.add({\r\n *     targets: image,\r\n *     x: 500,\r\n *     ease: 'Power1',\r\n *     duration: 3000\r\n * });\r\n * tween.on('start', listener);\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TWEEN_START\r\n * @since 3.19.0\r\n * \r\n * @param {Phaser.Tweens.Tween} tween - A reference to the Tween instance that emitted the event.\r\n * @param {any[]} targets - An array of references to the target/s the Tween is operating on.\r\n */\r\nmodule.exports = 'start';\r\n","/**\r\n * @author       samme\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Tween Stop Event.\r\n *\r\n * This event is dispatched by a Tween when it is stopped.\r\n *\r\n * Listen to it from a Tween instance using `Tween.on('stop', listener)`, i.e.:\r\n *\r\n * ```javascript\r\n * var tween = this.tweens.add({\r\n *     targets: image,\r\n *     x: 500,\r\n *     ease: 'Power1',\r\n *     duration: 3000\r\n * });\r\n * tween.on('stop', listener);\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TWEEN_STOP\r\n * @since 3.24.0\r\n *\r\n * @param {Phaser.Tweens.Tween} tween - A reference to the Tween instance that emitted the event.\r\n * @param {any[]} targets - An array of references to the target/s the Tween is operating on.\r\n */\r\nmodule.exports = 'stop';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Tween Update Event.\r\n * \r\n * This event is dispatched by a Tween every time it updates _any_ of the properties it is tweening.\r\n * \r\n * A Tween that is changing 3 properties of a target will emit this event 3 times per change, once per property.\r\n * \r\n * **Note:** This is a very high frequency event and may be dispatched multiple times, every single frame.\r\n * \r\n * Listen to it from a Tween instance using `Tween.on('update', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var tween = this.tweens.add({\r\n *     targets: image,\r\n *     x: 500,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n * });\r\n * tween.on('update', listener);\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TWEEN_UPDATE\r\n * @since 3.19.0\r\n * \r\n * @param {Phaser.Tweens.Tween} tween - A reference to the Tween instance that emitted the event.\r\n * @param {string} key - The property that was updated, i.e. `x` or `scale`.\r\n * @param {any} target - The target object that was updated. Usually a Game Object, but can be of any type.\r\n * @param {number} current - The current value of the property that was tweened.\r\n * @param {number} previous - The previous value of the property that was tweened, prior to this update.\r\n */\r\nmodule.exports = 'update';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Tween Yoyo Event.\r\n * \r\n * This event is dispatched by a Tween whenever a property it is tweening yoyos.\r\n * \r\n * This event will only be dispatched if the Tween has a property with `yoyo` set.\r\n * \r\n * If the Tween has a `hold` value, this event is dispatched when the hold expires.\r\n * \r\n * This event is dispatched for every property, and for every target, that yoyos.\r\n * For example, if a Tween was updating 2 properties and had 10 targets, this event\r\n * would be dispatched 20 times (twice per target). So be careful how you use it!\r\n * \r\n * Listen to it from a Tween instance using `Tween.on('yoyo', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var tween = this.tweens.add({\r\n *     targets: image,\r\n *     x: 500,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     yoyo: true\r\n * });\r\n * tween.on('yoyo', listener);\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TWEEN_YOYO\r\n * @since 3.19.0\r\n * \r\n * @param {Phaser.Tweens.Tween} tween - A reference to the Tween instance that emitted the event.\r\n * @param {string} key - The property that yoyo'd, i.e. `x` or `scale`.\r\n * @param {any} target - The target object that was yoyo'd. Usually a Game Object, but can be of any type.\r\n */\r\nmodule.exports = 'yoyo';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Tweens.Events\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    TIMELINE_COMPLETE: require('./TIMELINE_COMPLETE_EVENT'),\r\n    TIMELINE_LOOP: require('./TIMELINE_LOOP_EVENT'),\r\n    TIMELINE_PAUSE: require('./TIMELINE_PAUSE_EVENT'),\r\n    TIMELINE_RESUME: require('./TIMELINE_RESUME_EVENT'),\r\n    TIMELINE_START: require('./TIMELINE_START_EVENT'),\r\n    TIMELINE_UPDATE: require('./TIMELINE_UPDATE_EVENT'),\r\n    TWEEN_ACTIVE: require('./TWEEN_ACTIVE_EVENT'),\r\n    TWEEN_COMPLETE: require('./TWEEN_COMPLETE_EVENT'),\r\n    TWEEN_LOOP: require('./TWEEN_LOOP_EVENT'),\r\n    TWEEN_REPEAT: require('./TWEEN_REPEAT_EVENT'),\r\n    TWEEN_START: require('./TWEEN_START_EVENT'),\r\n    TWEEN_STOP: require('./TWEEN_STOP_EVENT'),\r\n    TWEEN_UPDATE: require('./TWEEN_UPDATE_EVENT'),\r\n    TWEEN_YOYO: require('./TWEEN_YOYO_EVENT')\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar CONST = require('./tween/const');\r\nvar Extend = require('../utils/object/Extend');\r\n\r\n/**\r\n * @namespace Phaser.Tweens\r\n */\r\n\r\nvar Tweens = {\r\n\r\n    Builders: require('./builders'),\r\n    Events: require('./events'),\r\n\r\n    TweenManager: require('./TweenManager'),\r\n    Tween: require('./tween/Tween'),\r\n    TweenData: require('./tween/TweenData'),\r\n    Timeline: require('./Timeline')\r\n\r\n};\r\n\r\n//   Merge in the consts\r\nTweens = Extend(false, Tweens, CONST);\r\n\r\nmodule.exports = Tweens;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @typedef {object} Phaser.Types.Tweens.TweenConfigDefaults\r\n * @since 3.0.0\r\n * \r\n * @property {(object|object[])} targets - The object, or an array of objects, to run the tween on.\r\n * @property {number} [delay=0] - The number of milliseconds to delay before the tween will start.\r\n * @property {number} [duration=1000] - The duration of the tween in milliseconds.\r\n * @property {string} [ease='Power0'] - The easing equation to use for the tween.\r\n * @property {array} [easeParams] - Optional easing parameters.\r\n * @property {number} [hold=0] - The number of milliseconds to hold the tween for before yoyo'ing.\r\n * @property {number} [repeat=0] - The number of times to repeat the tween.\r\n * @property {number} [repeatDelay=0] - The number of milliseconds to pause before a tween will repeat.\r\n * @property {boolean} [yoyo=false] - Should the tween complete, then reverse the values incrementally to get back to the starting tween values? The reverse tweening will also take `duration` milliseconds to complete.\r\n * @property {boolean} [flipX=false] - Horizontally flip the target of the Tween when it completes (before it yoyos, if set to do so). Only works for targets that support the `flipX` property.\r\n * @property {boolean} [flipY=false] - Vertically flip the target of the Tween when it completes (before it yoyos, if set to do so). Only works for targets that support the `flipY` property.\r\n */\r\n\r\nvar TWEEN_DEFAULTS = {\r\n    targets: null,\r\n    delay: 0,\r\n    duration: 1000,\r\n    ease: 'Power0',\r\n    easeParams: null,\r\n    hold: 0,\r\n    repeat: 0,\r\n    repeatDelay: 0,\r\n    yoyo: false,\r\n    flipX: false,\r\n    flipY: false\r\n};\r\n\r\nmodule.exports = TWEEN_DEFAULTS;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  RESERVED properties that a Tween config object uses\r\n\r\n//  completeDelay: The time the tween will wait before the onComplete event is dispatched once it has completed\r\n//  delay: The time the tween will wait before it first starts\r\n//  duration: The duration of the tween\r\n//  ease: The ease function used by the tween\r\n//  easeParams: The parameters to go with the ease function (if any)\r\n//  flipX: flip X the GameObject on tween end\r\n//  flipY: flip Y the GameObject on tween end//  hold: The time the tween will pause before running a yoyo\r\n//  hold: The time the tween will pause before running a yoyo\r\n//  loop: The time the tween will pause before starting either a yoyo or returning to the start for a repeat\r\n//  loopDelay:\r\n//  offset: Used when the Tween is part of a Timeline\r\n//  paused: Does the tween start in a paused state, or playing?\r\n//  props: The properties being tweened by the tween\r\n//  repeat: The number of times the tween will repeat itself (a value of 1 means the tween will play twice, as it repeated once)\r\n//  repeatDelay: The time the tween will pause for before starting a repeat. The tween holds in the start state.\r\n//  targets: The targets the tween is updating.\r\n//  useFrames: Use frames or milliseconds?\r\n//  yoyo: boolean - Does the tween reverse itself (yoyo) when it reaches the end?\r\n\r\nmodule.exports = [\r\n    'callbackScope',\r\n    'completeDelay',\r\n    'delay',\r\n    'duration',\r\n    'ease',\r\n    'easeParams',\r\n    'flipX',\r\n    'flipY',\r\n    'hold',\r\n    'loop',\r\n    'loopDelay',\r\n    'offset',\r\n    'onActive',\r\n    'onActiveParams',\r\n    'onActiveScope',\r\n    'onComplete',\r\n    'onCompleteParams',\r\n    'onCompleteScope',\r\n    'onLoop',\r\n    'onLoopParams',\r\n    'onLoopScope',\r\n    'onRepeat',\r\n    'onRepeatParams',\r\n    'onRepeatScope',\r\n    'onStart',\r\n    'onStartParams',\r\n    'onStartScope',\r\n    'onStop',\r\n    'onStopParams',\r\n    'onStopScope',\r\n    'onUpdate',\r\n    'onUpdateParams',\r\n    'onUpdateScope',\r\n    'onYoyo',\r\n    'onYoyoParams',\r\n    'onYoyoScope',\r\n    'paused',\r\n    'props',\r\n    'repeat',\r\n    'repeatDelay',\r\n    'targets',\r\n    'useFrames',\r\n    'yoyo'\r\n];\r\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Class = require('../../utils/Class');\nvar EventEmitter = require('eventemitter3');\nvar Events = require('../events');\nvar GameObjectCreator = require('../../gameobjects/GameObjectCreator');\nvar GameObjectFactory = require('../../gameobjects/GameObjectFactory');\nvar TWEEN_CONST = require('./const');\nvar MATH_CONST = require('../../math/const');\n\n/**\n * @classdesc\n * A Tween is able to manipulate the properties of one or more objects to any given value, based\n * on a duration and type of ease. They are rarely instantiated directly and instead should be\n * created via the TweenManager.\n *\n * @class Tween\n * @memberof Phaser.Tweens\n * @extends Phaser.Events.EventEmitter\n * @constructor\n * @since 3.0.0\n *\n * @param {(Phaser.Tweens.TweenManager|Phaser.Tweens.Timeline)} parent - A reference to the parent of this Tween. Either the Tween Manager or a Tween Timeline instance.\n * @param {Phaser.Types.Tweens.TweenDataConfig[]} data - An array of TweenData objects, each containing a unique property to be tweened.\n * @param {array} targets - An array of targets to be tweened.\n */\nvar Tween = new Class({\n\n    Extends: EventEmitter,\n\n    initialize:\n\n    function Tween (parent, data, targets)\n    {\n        EventEmitter.call(this);\n\n        /**\n         * A reference to the parent of this Tween.\n         * Either the Tween Manager or a Tween Timeline instance.\n         *\n         * @name Phaser.Tweens.Tween#parent\n         * @type {(Phaser.Tweens.TweenManager|Phaser.Tweens.Timeline)}\n         * @since 3.0.0\n         */\n        this.parent = parent;\n\n        /**\n         * Is the parent of this Tween a Timeline?\n         *\n         * @name Phaser.Tweens.Tween#parentIsTimeline\n         * @type {boolean}\n         * @since 3.0.0\n         */\n        this.parentIsTimeline = parent.hasOwnProperty('isTimeline');\n\n        /**\n         * An array of TweenData objects, each containing a unique property and target being tweened.\n         *\n         * @name Phaser.Tweens.Tween#data\n         * @type {Phaser.Types.Tweens.TweenDataConfig[]}\n         * @since 3.0.0\n         */\n        this.data = data;\n\n        /**\n         * The cached length of the data array.\n         *\n         * @name Phaser.Tweens.Tween#totalData\n         * @type {number}\n         * @since 3.0.0\n         */\n        this.totalData = data.length;\n\n        /**\n         * An array of references to the target/s this Tween is operating on.\n         *\n         * @name Phaser.Tweens.Tween#targets\n         * @type {object[]}\n         * @since 3.0.0\n         */\n        this.targets = targets;\n\n        /**\n         * Cached target total (not necessarily the same as the data total)\n         *\n         * @name Phaser.Tweens.Tween#totalTargets\n         * @type {number}\n         * @since 3.0.0\n         */\n        this.totalTargets = targets.length;\n\n        /**\n         * If `true` then duration, delay, etc values are all frame totals.\n         *\n         * @name Phaser.Tweens.Tween#useFrames\n         * @type {boolean}\n         * @default false\n         * @since 3.0.0\n         */\n        this.useFrames = false;\n\n        /**\n         * Scales the time applied to this Tween. A value of 1 runs in real-time. A value of 0.5 runs 50% slower, and so on.\n         * Value isn't used when calculating total duration of the tween, it's a run-time delta adjustment only.\n         *\n         * @name Phaser.Tweens.Tween#timeScale\n         * @type {number}\n         * @default 1\n         * @since 3.0.0\n         */\n        this.timeScale = 1;\n\n        /**\n         * Loop this tween? Can be -1 for an infinite loop, or an integer.\n         * When enabled it will play through ALL TweenDatas again. Use TweenData.repeat to loop a single element.\n         *\n         * @name Phaser.Tweens.Tween#loop\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.loop = 0;\n\n        /**\n         * Time in ms/frames before the tween loops.\n         *\n         * @name Phaser.Tweens.Tween#loopDelay\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.loopDelay = 0;\n\n        /**\n         * How many loops are left to run?\n         *\n         * @name Phaser.Tweens.Tween#loopCounter\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.loopCounter = 0;\n\n        /**\n         * Time in ms/frames before the 'onStart' event fires.\n         * This is the shortest `delay` value across all of the TweenDatas of this Tween.\n         *\n         * @name Phaser.Tweens.Tween#startDelay\n         * @type {number}\n         * @default 0\n         * @since 3.19.0\n         */\n        this.startDelay = 0;\n\n        /**\n         * Has this Tween started playback yet?\n         * This boolean is toggled when the Tween leaves the 'delayed' state and starts running.\n         *\n         * @name Phaser.Tweens.Tween#hasStarted\n         * @type {boolean}\n         * @readonly\n         * @since 3.19.0\n         */\n        this.hasStarted = false;\n\n        /**\n         * Is this Tween currently seeking?\n         * This boolean is toggled in the `Tween.seek` method.\n         * When a tween is seeking it will not dispatch any events or callbacks.\n         *\n         * @name Phaser.Tweens.Tween#isSeeking\n         * @type {boolean}\n         * @readonly\n         * @since 3.19.0\n         */\n        this.isSeeking = false;\n\n        /**\n         * Time in ms/frames before the 'onComplete' event fires. This never fires if loop = -1 (as it never completes)\n         *\n         * @name Phaser.Tweens.Tween#completeDelay\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.completeDelay = 0;\n\n        /**\n         * Countdown timer (used by timeline offset, loopDelay and completeDelay)\n         *\n         * @name Phaser.Tweens.Tween#countdown\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.countdown = 0;\n\n        /**\n         * Set only if this Tween is part of a Timeline.\n         *\n         * @name Phaser.Tweens.Tween#offset\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.offset = 0;\n\n        /**\n         * Set only if this Tween is part of a Timeline. The calculated offset amount.\n         *\n         * @name Phaser.Tweens.Tween#calculatedOffset\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.calculatedOffset = 0;\n\n        /**\n         * The current state of the tween\n         *\n         * @name Phaser.Tweens.Tween#state\n         * @type {number}\n         * @since 3.0.0\n         */\n        this.state = TWEEN_CONST.PENDING_ADD;\n\n        /**\n         * The state of the tween when it was paused (used by Resume)\n         *\n         * @name Phaser.Tweens.Tween#_pausedState\n         * @type {number}\n         * @private\n         * @since 3.0.0\n         */\n        this._pausedState = TWEEN_CONST.INIT;\n\n        /**\n         * Does the Tween start off paused? (if so it needs to be started with Tween.play)\n         *\n         * @name Phaser.Tweens.Tween#paused\n         * @type {boolean}\n         * @default false\n         * @since 3.0.0\n         */\n        this.paused = false;\n\n        /**\n         * Elapsed time in ms/frames of this run through the Tween.\n         *\n         * @name Phaser.Tweens.Tween#elapsed\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.elapsed = 0;\n\n        /**\n         * Total elapsed time in ms/frames of the entire Tween, including looping.\n         *\n         * @name Phaser.Tweens.Tween#totalElapsed\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.totalElapsed = 0;\n\n        /**\n         * Time in ms/frames for the whole Tween to play through once, excluding loop amounts and loop delays.\n         *\n         * @name Phaser.Tweens.Tween#duration\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.duration = 0;\n\n        /**\n         * Value between 0 and 1. The amount through the Tween, excluding loops.\n         *\n         * @name Phaser.Tweens.Tween#progress\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.progress = 0;\n\n        /**\n         * Time in ms/frames for the Tween to complete (including looping)\n         *\n         * @name Phaser.Tweens.Tween#totalDuration\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.totalDuration = 0;\n\n        /**\n         * Value between 0 and 1. The amount through the entire Tween, including looping.\n         *\n         * @name Phaser.Tweens.Tween#totalProgress\n         * @type {number}\n         * @default 0\n         * @since 3.0.0\n         */\n        this.totalProgress = 0;\n\n        /**\n         * An object containing the different Tween callback functions.\n         *\n         * You can either set these in the Tween config, or by calling the `Tween.setCallback` method.\n         *\n         * `onActive` When the Tween is moved from the pending to the active list in the Tween Manager, even if playback paused.\n         * `onStart` When the Tween starts playing after a delayed state. Will happen at the same time as `onActive` if it has no delay.\n         * `onYoyo` When a TweenData starts a yoyo. This happens _after_ the `hold` delay expires, if set.\n         * `onRepeat` When a TweenData repeats playback. This happens _after_ the `repeatDelay` expires, if set.\n         * `onComplete` When the Tween finishes playback fully. Never invoked if tween is set to repeat infinitely.\n         * `onUpdate` When a TweenData updates a property on a source target during playback.\n         * `onLoop` When a Tween loops. This happens _after_ the `loopDelay` expires, if set.\n         *\n         * @name Phaser.Tweens.Tween#callbacks\n         * @type {object}\n         * @since 3.0.0\n         */\n        this.callbacks = {\n            onActive: null,\n            onComplete: null,\n            onLoop: null,\n            onRepeat: null,\n            onStart: null,\n            onStop: null,\n            onUpdate: null,\n            onYoyo: null\n        };\n\n        /**\n         * The context in which all callbacks are invoked.\n         *\n         * @name Phaser.Tweens.Tween#callbackScope\n         * @type {any}\n         * @since 3.0.0\n         */\n        this.callbackScope;\n    },\n\n    /**\n     * Returns the current value of the specified Tween Data.\n     *\n     * @method Phaser.Tweens.Tween#getValue\n     * @since 3.0.0\n     *\n     * @param {number} [index=0] - The Tween Data to return the value from.\n     *\n     * @return {number} The value of the requested Tween Data.\n     */\n    getValue: function (index)\n    {\n        if (index === undefined) { index = 0; }\n\n        return this.data[index].current;\n    },\n\n    /**\n     * Set the scale the time applied to this Tween. A value of 1 runs in real-time. A value of 0.5 runs 50% slower, and so on.\n     *\n     * @method Phaser.Tweens.Tween#setTimeScale\n     * @since 3.0.0\n     *\n     * @param {number} value - The scale factor for timescale.\n     *\n     * @return {this} - This Tween instance.\n     */\n    setTimeScale: function (value)\n    {\n        this.timeScale = value;\n\n        return this;\n    },\n\n    /**\n     * Returns the scale of the time applied to this Tween.\n     *\n     * @method Phaser.Tweens.Tween#getTimeScale\n     * @since 3.0.0\n     *\n     * @return {number} The timescale of this tween (between 0 and 1)\n     */\n    getTimeScale: function ()\n    {\n        return this.timeScale;\n    },\n\n    /**\n     * Checks if the Tween is currently active.\n     *\n     * @method Phaser.Tweens.Tween#isPlaying\n     * @since 3.0.0\n     *\n     * @return {boolean} `true` if the Tween is active, otherwise `false`.\n     */\n    isPlaying: function ()\n    {\n        return (this.state === TWEEN_CONST.ACTIVE);\n    },\n\n    /**\n     * Checks if the Tween is currently paused.\n     *\n     * @method Phaser.Tweens.Tween#isPaused\n     * @since 3.0.0\n     *\n     * @return {boolean} `true` if the Tween is paused, otherwise `false`.\n     */\n    isPaused: function ()\n    {\n        return (this.state === TWEEN_CONST.PAUSED);\n    },\n\n    /**\n     * See if this Tween is currently acting upon the given target.\n     *\n     * @method Phaser.Tweens.Tween#hasTarget\n     * @since 3.0.0\n     *\n     * @param {object} target - The target to check against this Tween.\n     *\n     * @return {boolean} `true` if the given target is a target of this Tween, otherwise `false`.\n     */\n    hasTarget: function (target)\n    {\n        return (this.targets.indexOf(target) !== -1);\n    },\n\n    /**\n     * Updates the 'end' value of the given property across all matching targets.\n     *\n     * Calling this does not adjust the duration of the tween, or the current progress.\n     *\n     * You can optionally tell it to set the 'start' value to be the current value (before the change).\n     *\n     * @method Phaser.Tweens.Tween#updateTo\n     * @since 3.0.0\n     *\n     * @param {string} key - The property to set the new value for.\n     * @param {*} value - The new value of the property.\n     * @param {boolean} [startToCurrent=false] - Should this change set the start value to be the current value?\n     *\n     * @return {this} - This Tween instance.\n     */\n    updateTo: function (key, value, startToCurrent)\n    {\n        if (startToCurrent === undefined) { startToCurrent = false; }\n\n        for (var i = 0; i < this.totalData; i++)\n        {\n            var tweenData = this.data[i];\n\n            if (tweenData.key === key)\n            {\n                tweenData.end = value;\n\n                if (startToCurrent)\n                {\n                    tweenData.start = tweenData.current;\n                }\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * Restarts the tween from the beginning.\n     *\n     * @method Phaser.Tweens.Tween#restart\n     * @since 3.0.0\n     *\n     * @return {this} This Tween instance.\n     */\n    restart: function ()\n    {\n        //  Reset these so they're ready for the next update\n        this.elapsed = 0;\n        this.progress = 0;\n        this.totalElapsed = 0;\n        this.totalProgress = 0;\n\n        if (this.state === TWEEN_CONST.ACTIVE)\n        {\n            return this.seek(0);\n        }\n        else if (this.state === TWEEN_CONST.REMOVED)\n        {\n            this.seek(0);\n            this.parent.makeActive(this);\n\n            return this;\n        }\n        else if (this.state === TWEEN_CONST.PENDING_ADD)\n        {\n            return this;\n        }\n        else\n        {\n            return this.play();\n        }\n    },\n\n    /**\n     * Internal method that calculates the overall duration of the Tween.\n     *\n     * @method Phaser.Tweens.Tween#calcDuration\n     * @since 3.0.0\n     */\n    calcDuration: function ()\n    {\n        var maxDuration = 0;\n        var minDelay = MATH_CONST.MAX_SAFE_INTEGER;\n\n        var data = this.data;\n\n        for (var i = 0; i < this.totalData; i++)\n        {\n            var tweenData = data[i];\n\n            //  Set t1 (duration + hold + yoyo)\n            tweenData.t1 = tweenData.duration + tweenData.hold;\n\n            if (tweenData.yoyo)\n            {\n                tweenData.t1 += tweenData.duration;\n            }\n\n            //  Set t2 (repeatDelay + duration + hold + yoyo)\n            tweenData.t2 = tweenData.t1 + tweenData.repeatDelay;\n\n            //  Total Duration\n            tweenData.totalDuration = tweenData.delay + tweenData.t1;\n\n            if (tweenData.repeat === -1)\n            {\n                tweenData.totalDuration += (tweenData.t2 * 999999999999);\n            }\n            else if (tweenData.repeat > 0)\n            {\n                tweenData.totalDuration += (tweenData.t2 * tweenData.repeat);\n            }\n\n            if (tweenData.totalDuration > maxDuration)\n            {\n                //  Get the longest TweenData from the Tween, used to calculate the Tween TD\n                maxDuration = tweenData.totalDuration;\n            }\n\n            if (tweenData.delay < minDelay)\n            {\n                minDelay = tweenData.delay;\n            }\n        }\n\n        //  Excludes loop values\n\n        //  If duration has been set to 0 then we give it a super-low value so that it always\n        //  renders at least 1 frame, but no more, without causing divided by zero errors elsewhere.\n        this.duration = Math.max(maxDuration, 0.001);\n\n        this.loopCounter = (this.loop === -1) ? 999999999999 : this.loop;\n\n        if (this.loopCounter > 0)\n        {\n            this.totalDuration = this.duration + this.completeDelay + ((this.duration + this.loopDelay) * this.loopCounter);\n        }\n        else\n        {\n            this.totalDuration = this.duration + this.completeDelay;\n        }\n\n        //  How long before this Tween starts playback?\n        this.startDelay = minDelay;\n    },\n\n    /**\n     * Called by TweenManager.preUpdate as part of its loop to check pending and active tweens.\n     * Should not be called directly.\n     *\n     * @method Phaser.Tweens.Tween#init\n     * @since 3.0.0\n     *\n     * @return {boolean} Returns `true` if this Tween should be moved from the pending list to the active list by the Tween Manager.\n     */\n    init: function ()\n    {\n        //  You can't have a paused Tween if it's part of a Timeline\n        if (this.paused && !this.parentIsTimeline)\n        {\n            this.state = TWEEN_CONST.PENDING_ADD;\n            this._pausedState = TWEEN_CONST.INIT;\n\n            return false;\n        }\n\n        var data = this.data;\n        var totalTargets = this.totalTargets;\n\n        for (var i = 0; i < this.totalData; i++)\n        {\n            var tweenData = data[i];\n            var target = tweenData.target;\n            var gen = tweenData.gen;\n            var key = tweenData.key;\n            var targetIndex = tweenData.index;\n\n            //  Old function signature: i, totalTargets, target\n            //  New function signature: target, key, value, index, total, tween\n\n            tweenData.delay = gen.delay(target, key, 0, targetIndex, totalTargets, this);\n            tweenData.duration = Math.max(gen.duration(target, key, 0, targetIndex, totalTargets, this), 0.001);\n            tweenData.hold = gen.hold(target, key, 0, targetIndex, totalTargets, this);\n            tweenData.repeat = gen.repeat(target, key, 0, targetIndex, totalTargets, this);\n            tweenData.repeatDelay = gen.repeatDelay(target, key, 0, targetIndex, totalTargets, this);\n        }\n\n        this.calcDuration();\n\n        this.progress = 0;\n        this.totalProgress = 0;\n        this.elapsed = 0;\n        this.totalElapsed = 0;\n\n        this.state = TWEEN_CONST.INIT;\n\n        return true;\n    },\n\n    /**\n     * Internal method that makes this Tween active within the TweenManager\n     * and emits the onActive event and callback.\n     *\n     * @method Phaser.Tweens.Tween#makeActive\n     * @fires Phaser.Tweens.Events#TWEEN_ACTIVE\n     * @since 3.19.0\n     */\n    makeActive: function ()\n    {\n        this.parent.makeActive(this);\n\n        this.dispatchTweenEvent(Events.TWEEN_ACTIVE, this.callbacks.onActive);\n    },\n\n    /**\n     * Internal method that advances to the next state of the Tween during playback.\n     *\n     * @method Phaser.Tweens.Tween#nextState\n     * @fires Phaser.Tweens.Events#TWEEN_COMPLETE\n     * @fires Phaser.Tweens.Events#TWEEN_LOOP\n     * @since 3.0.0\n     */\n    nextState: function ()\n    {\n        if (this.loopCounter > 0)\n        {\n            this.elapsed = 0;\n            this.progress = 0;\n            this.loopCounter--;\n\n            this.resetTweenData(true);\n\n            if (this.loopDelay > 0)\n            {\n                this.countdown = this.loopDelay;\n                this.state = TWEEN_CONST.LOOP_DELAY;\n            }\n            else\n            {\n                this.state = TWEEN_CONST.ACTIVE;\n\n                this.dispatchTweenEvent(Events.TWEEN_LOOP, this.callbacks.onLoop);\n            }\n        }\n        else if (this.completeDelay > 0)\n        {\n            this.state = TWEEN_CONST.COMPLETE_DELAY;\n\n            this.countdown = this.completeDelay;\n        }\n        else\n        {\n            this.state = TWEEN_CONST.PENDING_REMOVE;\n\n            this.dispatchTweenEvent(Events.TWEEN_COMPLETE, this.callbacks.onComplete);\n        }\n    },\n\n    /**\n     * Pauses the Tween immediately. Use `resume` to continue playback.\n     *\n     * @method Phaser.Tweens.Tween#pause\n     * @since 3.0.0\n     *\n     * @return {this} - This Tween instance.\n     */\n    pause: function ()\n    {\n        if (this.state === TWEEN_CONST.PAUSED)\n        {\n            return this;\n        }\n\n        this.paused = true;\n\n        this._pausedState = this.state;\n\n        this.state = TWEEN_CONST.PAUSED;\n\n        return this;\n    },\n\n    /**\n     * Starts a Tween playing.\n     *\n     * You only need to call this method if you have configured the tween to be paused on creation.\n     *\n     * If the Tween is already playing, calling this method again will have no effect. If you wish to\n     * restart the Tween, use `Tween.restart` instead.\n     *\n     * Calling this method after the Tween has completed will start the Tween playing again from the start.\n     * This is the same as calling `Tween.seek(0)` and then `Tween.play()`.\n     *\n     * @method Phaser.Tweens.Tween#play\n     * @since 3.0.0\n     *\n     * @param {boolean} [resetFromTimeline=false] - Is this Tween being played as part of a Timeline?\n     *\n     * @return {this} This Tween instance.\n     */\n    play: function (resetFromTimeline)\n    {\n        if (resetFromTimeline === undefined) { resetFromTimeline = false; }\n\n        var state = this.state;\n\n        if (state === TWEEN_CONST.INIT && !this.parentIsTimeline)\n        {\n            this.resetTweenData(false);\n\n            this.state = TWEEN_CONST.ACTIVE;\n\n            return this;\n        }\n        else if (state === TWEEN_CONST.ACTIVE || (state === TWEEN_CONST.PENDING_ADD && this._pausedState === TWEEN_CONST.PENDING_ADD))\n        {\n            return this;\n        }\n        else if (!this.parentIsTimeline && (state === TWEEN_CONST.PENDING_REMOVE || state === TWEEN_CONST.REMOVED))\n        {\n            this.seek(0);\n            this.parent.makeActive(this);\n\n            return this;\n        }\n\n        if (this.parentIsTimeline)\n        {\n            this.resetTweenData(resetFromTimeline);\n\n            if (this.calculatedOffset === 0)\n            {\n                this.state = TWEEN_CONST.ACTIVE;\n            }\n            else\n            {\n                this.countdown = this.calculatedOffset;\n\n                this.state = TWEEN_CONST.OFFSET_DELAY;\n            }\n        }\n        else if (this.paused)\n        {\n            this.paused = false;\n\n            this.makeActive();\n        }\n        else\n        {\n            this.resetTweenData(resetFromTimeline);\n\n            this.state = TWEEN_CONST.ACTIVE;\n\n            this.makeActive();\n        }\n\n        return this;\n    },\n\n    /**\n     * Internal method that resets all of the Tween Data, including the progress and elapsed values.\n     *\n     * @method Phaser.Tweens.Tween#resetTweenData\n     * @since 3.0.0\n     *\n     * @param {boolean} resetFromLoop - Has this method been called as part of a loop?\n     */\n    resetTweenData: function (resetFromLoop)\n    {\n        var data = this.data;\n        var total = this.totalData;\n        var totalTargets = this.totalTargets;\n\n        for (var i = 0; i < total; i++)\n        {\n            var tweenData = data[i];\n\n            var target = tweenData.target;\n            var key = tweenData.key;\n            var targetIndex = tweenData.index;\n\n            tweenData.progress = 0;\n            tweenData.elapsed = 0;\n\n            tweenData.repeatCounter = (tweenData.repeat === -1) ? 999999999999 : tweenData.repeat;\n\n            if (resetFromLoop)\n            {\n                tweenData.start = tweenData.getStartValue(target, key, tweenData.start, targetIndex, totalTargets, this);\n\n                tweenData.end = tweenData.getEndValue(target, key, tweenData.end, targetIndex, totalTargets, this);\n\n                tweenData.current = tweenData.start;\n\n                tweenData.state = TWEEN_CONST.PLAYING_FORWARD;\n            }\n            else\n            {\n                tweenData.state = TWEEN_CONST.PENDING_RENDER;\n            }\n\n            if (tweenData.delay > 0)\n            {\n                tweenData.elapsed = tweenData.delay;\n\n                tweenData.state = TWEEN_CONST.DELAY;\n            }\n\n            if (tweenData.getActiveValue)\n            {\n                target[key] = tweenData.getActiveValue(tweenData.target, tweenData.key, tweenData.start);\n            }\n        }\n    },\n\n    /**\n     * Resumes the playback of a previously paused Tween.\n     *\n     * @method Phaser.Tweens.Tween#resume\n     * @since 3.0.0\n     *\n     * @return {this} - This Tween instance.\n     */\n    resume: function ()\n    {\n        if (this.state === TWEEN_CONST.PAUSED)\n        {\n            this.paused = false;\n\n            this.state = this._pausedState;\n        }\n        else\n        {\n            this.play();\n        }\n\n        return this;\n    },\n\n    /**\n     * Seeks to a specific point in the Tween.\n     *\n     * **Note:** Be careful when seeking a Tween that repeats or loops forever,\n     * or that has an unusually long total duration, as it's possible to hang the browser.\n     *\n     * The given position is a value between 0 and 1 which represents how far through the Tween to seek to.\n     * A value of 0.5 would seek to half-way through the Tween, where-as a value of zero would seek to the start.\n     *\n     * Note that the seek takes the entire duration of the Tween into account, including delays, loops and repeats.\n     * For example, a Tween that lasts for 2 seconds, but that loops 3 times, would have a total duration of 6 seconds,\n     * so seeking to 0.5 would seek to 3 seconds into the Tween, as that's half-way through its _entire_ duration.\n     *\n     * Seeking works by resetting the Tween to its initial values and then iterating through the Tween at `delta`\n     * jumps per step. The longer the Tween, the longer this can take.\n     *\n     * @method Phaser.Tweens.Tween#seek\n     * @since 3.0.0\n     *\n     * @param {number} toPosition - A value between 0 and 1 which represents the progress point to seek to.\n     * @param {number} [delta=16.6] - The size of each step when seeking through the Tween. A higher value completes faster but at a cost of less precision.\n     *\n     * @return {this} This Tween instance.\n     */\n    seek: function (toPosition, delta)\n    {\n        if (delta === undefined) { delta = 16.6; }\n\n        if (this.state === TWEEN_CONST.REMOVED)\n        {\n            this.makeActive();\n        }\n\n        this.elapsed = 0;\n        this.progress = 0;\n        this.totalElapsed = 0;\n        this.totalProgress = 0;\n\n        var data = this.data;\n        var totalTargets = this.totalTargets;\n\n        for (var i = 0; i < this.totalData; i++)\n        {\n            var tweenData = data[i];\n            var target = tweenData.target;\n            var gen = tweenData.gen;\n            var key = tweenData.key;\n            var targetIndex = tweenData.index;\n\n            tweenData.progress = 0;\n            tweenData.elapsed = 0;\n\n            tweenData.repeatCounter = (tweenData.repeat === -1) ? 999999999999 : tweenData.repeat;\n\n            //  Old function signature: i, totalTargets, target\n            //  New function signature: target, key, value, index, total, tween\n\n            tweenData.delay = gen.delay(target, key, 0, targetIndex, totalTargets, this);\n            tweenData.duration = Math.max(gen.duration(target, key, 0, targetIndex, totalTargets, this), 0.001);\n            tweenData.hold = gen.hold(target, key, 0, targetIndex, totalTargets, this);\n            tweenData.repeat = gen.repeat(target, key, 0, targetIndex, totalTargets, this);\n            tweenData.repeatDelay = gen.repeatDelay(target, key, 0, targetIndex, totalTargets, this);\n\n            tweenData.current = tweenData.start;\n            tweenData.state = TWEEN_CONST.PLAYING_FORWARD;\n\n            this.updateTweenData(this, tweenData, 0, targetIndex, totalTargets);\n\n            if (tweenData.delay > 0)\n            {\n                tweenData.elapsed = tweenData.delay;\n                tweenData.state = TWEEN_CONST.DELAY;\n            }\n        }\n\n        this.calcDuration();\n\n        var wasPaused = false;\n\n        if (this.state === TWEEN_CONST.PAUSED)\n        {\n            wasPaused = true;\n\n            this.state = TWEEN_CONST.ACTIVE;\n        }\n\n        this.isSeeking = true;\n\n        do\n        {\n            this.update(0, delta);\n\n        } while (this.totalProgress < toPosition);\n\n        this.isSeeking = false;\n\n        if (wasPaused)\n        {\n            this.state = TWEEN_CONST.PAUSED;\n        }\n\n        return this;\n    },\n\n    /**\n     * Sets an event based callback to be invoked during playback.\n     *\n     * Calling this method will replace a previously set callback for the given type, if any exists.\n     *\n     * The types available are:\n     *\n     * `onActive` When the Tween is moved from the pending to the active list in the Tween Manager, even if playback paused.\n     * `onStart` When the Tween starts playing after a delayed state. Will happen at the same time as `onActive` if it has no delay.\n     * `onYoyo` When a TweenData starts a yoyo. This happens _after_ the `hold` delay expires, if set.\n     * `onRepeat` When a TweenData repeats playback. This happens _after_ the `repeatDelay` expires, if set.\n     * `onComplete` When the Tween finishes playback fully or `Tween.stop` is called. Never invoked if tween is set to repeat infinitely.\n     * `onUpdate` When a TweenData updates a property on a source target during playback.\n     * `onLoop` When a Tween loops. This happens _after_ the `loopDelay` expires, if set.\n     *\n     * @method Phaser.Tweens.Tween#setCallback\n     * @since 3.0.0\n     *\n     * @param {string} type - Type of the callback to set.\n     * @param {function} callback - The function to invoke when this callback happens.\n     * @param {array} [params] - An array of parameters for specified callbacks types.\n     * @param {any} [scope] - The context the callback will be invoked in.\n     *\n     * @return {this} This Tween instance.\n     */\n    setCallback: function (type, callback, params, scope)\n    {\n        this.callbacks[type] = { func: callback, scope: scope, params: params };\n\n        return this;\n    },\n\n    /**\n     * Flags the Tween as being complete, whatever stage of progress it is at.\n     *\n     * If an onComplete callback has been defined it will automatically invoke it, unless a `delay`\n     * argument is provided, in which case the Tween will delay for that period of time before calling the callback.\n     *\n     * If you don't need a delay, or have an onComplete callback, then call `Tween.stop` instead.\n     *\n     * @method Phaser.Tweens.Tween#complete\n     * @fires Phaser.Tweens.Events#TWEEN_COMPLETE\n     * @since 3.2.0\n     *\n     * @param {number} [delay=0] - The time to wait before invoking the complete callback. If zero it will fire immediately.\n     *\n     * @return {this} This Tween instance.\n     */\n    complete: function (delay)\n    {\n        if (delay === undefined) { delay = 0; }\n\n        if (delay)\n        {\n            this.state = TWEEN_CONST.COMPLETE_DELAY;\n\n            this.countdown = delay;\n        }\n        else\n        {\n            this.state = TWEEN_CONST.PENDING_REMOVE;\n\n            this.dispatchTweenEvent(Events.TWEEN_COMPLETE, this.callbacks.onComplete);\n        }\n\n        return this;\n    },\n\n    /**\n     * Immediately removes this Tween from the TweenManager and all of its internal arrays,\n     * no matter what stage it as it. Then sets the tween state to `REMOVED`.\n     *\n     * You should dispose of your reference to this tween after calling this method, to\n     * free it from memory.\n     *\n     * @method Phaser.Tweens.Tween#remove\n     * @since 3.17.0\n     *\n     * @return {this} This Tween instance.\n     */\n    remove: function ()\n    {\n        this.parent.remove(this);\n\n        return this;\n    },\n\n    /**\n     * Stops the Tween immediately, whatever stage of progress it is at and flags it for removal by the TweenManager.\n     *\n     * @method Phaser.Tweens.Tween#stop\n     * @since 3.0.0\n     *\n     * @param {number} [resetTo] - If you want to seek the tween, provide a value between 0 and 1.\n     *\n     * @return {this} This Tween instance.\n     */\n    stop: function (resetTo)\n    {\n        if (this.state === TWEEN_CONST.ACTIVE)\n        {\n            if (resetTo !== undefined)\n            {\n                this.seek(resetTo);\n            }\n        }\n\n        if (this.state !== TWEEN_CONST.REMOVED)\n        {\n            if (this.state === TWEEN_CONST.PAUSED || this.state === TWEEN_CONST.PENDING_ADD)\n            {\n                if (this.parentIsTimeline)\n                {\n                    this.parent.manager._destroy.push(this);\n                    this.parent.manager._toProcess++;\n                }\n                else\n                {\n                    this.parent._destroy.push(this);\n                    this.parent._toProcess++;\n                }\n            }\n\n            this.dispatchTweenEvent(Events.TWEEN_STOP, this.callbacks.onStop);\n\n            this.removeAllListeners();\n\n            this.state = TWEEN_CONST.PENDING_REMOVE;\n        }\n\n        return this;\n    },\n\n    /**\n     * Internal method that advances the Tween based on the time values.\n     *\n     * @method Phaser.Tweens.Tween#update\n     * @fires Phaser.Tweens.Events#TWEEN_COMPLETE\n     * @fires Phaser.Tweens.Events#TWEEN_LOOP\n     * @fires Phaser.Tweens.Events#TWEEN_START\n     * @since 3.0.0\n     *\n     * @param {number} timestamp - The current time. Either a High Resolution Timer value if it comes from Request Animation Frame, or Date.now if using SetTimeout.\n     * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\n     *\n     * @return {boolean} Returns `true` if this Tween has finished and should be removed from the Tween Manager, otherwise returns `false`.\n     */\n    update: function (timestamp, delta)\n    {\n        if (this.state === TWEEN_CONST.PAUSED)\n        {\n            return false;\n        }\n\n        if (this.useFrames)\n        {\n            delta = 1 * this.parent.timeScale;\n        }\n\n        delta *= this.timeScale;\n\n        this.elapsed += delta;\n        this.progress = Math.min(this.elapsed / this.duration, 1);\n\n        this.totalElapsed += delta;\n        this.totalProgress = Math.min(this.totalElapsed / this.totalDuration, 1);\n\n        switch (this.state)\n        {\n            case TWEEN_CONST.ACTIVE:\n\n                if (!this.hasStarted && !this.isSeeking)\n                {\n                    this.startDelay -= delta;\n\n                    if (this.startDelay <= 0)\n                    {\n                        this.hasStarted = true;\n\n                        this.dispatchTweenEvent(Events.TWEEN_START, this.callbacks.onStart);\n                    }\n                }\n\n                var stillRunning = false;\n\n                for (var i = 0; i < this.totalData; i++)\n                {\n                    var tweenData = this.data[i];\n\n                    if (this.updateTweenData(this, tweenData, delta))\n                    {\n                        stillRunning = true;\n                    }\n                }\n\n                //  Anything still running? If not, we're done\n                if (!stillRunning)\n                {\n                    this.nextState();\n                }\n\n                break;\n\n            case TWEEN_CONST.LOOP_DELAY:\n\n                this.countdown -= delta;\n\n                if (this.countdown <= 0)\n                {\n                    this.state = TWEEN_CONST.ACTIVE;\n\n                    this.dispatchTweenEvent(Events.TWEEN_LOOP, this.callbacks.onLoop);\n                }\n\n                break;\n\n            case TWEEN_CONST.OFFSET_DELAY:\n\n                this.countdown -= delta;\n\n                if (this.countdown <= 0)\n                {\n                    this.state = TWEEN_CONST.ACTIVE;\n                }\n\n                break;\n\n            case TWEEN_CONST.COMPLETE_DELAY:\n\n                this.countdown -= delta;\n\n                if (this.countdown <= 0)\n                {\n                    this.state = TWEEN_CONST.PENDING_REMOVE;\n\n                    this.dispatchTweenEvent(Events.TWEEN_COMPLETE, this.callbacks.onComplete);\n                }\n\n                break;\n        }\n\n        return (this.state === TWEEN_CONST.PENDING_REMOVE);\n    },\n\n    /**\n     * Internal method that will emit a TweenData based Event and invoke the given callback.\n     *\n     * @method Phaser.Tweens.Tween#dispatchTweenDataEvent\n     * @since 3.19.0\n     *\n     * @param {Phaser.Types.Tweens.Event} event - The Event to be dispatched.\n     * @param {function} callback - The callback to be invoked. Can be `null` or `undefined` to skip invocation.\n     * @param {Phaser.Types.Tweens.TweenDataConfig} tweenData - The TweenData object that caused this event.\n     */\n    dispatchTweenDataEvent: function (event, callback, tweenData)\n    {\n        if (!this.isSeeking)\n        {\n            this.emit(event, this, tweenData.key, tweenData.target, tweenData.current, tweenData.previous);\n\n            if (callback)\n            {\n                callback.params[1] = tweenData.target;\n\n                callback.func.apply(callback.scope, callback.params);\n            }\n        }\n    },\n\n    /**\n     * Internal method that will emit a Tween based Event and invoke the given callback.\n     *\n     * @method Phaser.Tweens.Tween#dispatchTweenEvent\n     * @since 3.19.0\n     *\n     * @param {Phaser.Types.Tweens.Event} event - The Event to be dispatched.\n     * @param {function} callback - The callback to be invoked. Can be `null` or `undefined` to skip invocation.\n     */\n    dispatchTweenEvent: function (event, callback)\n    {\n        if (!this.isSeeking)\n        {\n            this.emit(event, this, this.targets);\n\n            if (callback)\n            {\n                callback.params[1] = this.targets;\n\n                callback.func.apply(callback.scope, callback.params);\n            }\n        }\n    },\n\n    /**\n     * Internal method used as part of the playback process that sets a tween to play in reverse.\n     *\n     * @method Phaser.Tweens.Tween#setStateFromEnd\n     * @fires Phaser.Tweens.Events#TWEEN_REPEAT\n     * @fires Phaser.Tweens.Events#TWEEN_YOYO\n     * @since 3.0.0\n     *\n     * @param {Phaser.Tweens.Tween} tween - The Tween to update.\n     * @param {Phaser.Types.Tweens.TweenDataConfig} tweenData - The TweenData property to update.\n     * @param {number} diff - Any extra time that needs to be accounted for in the elapsed and progress values.\n     *\n     * @return {number} The state of this Tween.\n     */\n    setStateFromEnd: function (tween, tweenData, diff)\n    {\n        if (tweenData.yoyo)\n        {\n            //  We've hit the end of a Playing Forward TweenData and we have a yoyo\n\n            //  Account for any extra time we got from the previous frame\n            tweenData.elapsed = diff;\n            tweenData.progress = diff / tweenData.duration;\n\n            if (tweenData.flipX)\n            {\n                tweenData.target.toggleFlipX();\n            }\n\n            if (tweenData.flipY)\n            {\n                tweenData.target.toggleFlipY();\n            }\n\n            this.dispatchTweenDataEvent(Events.TWEEN_YOYO, tween.callbacks.onYoyo, tweenData);\n\n            tweenData.start = tweenData.getStartValue(tweenData.target, tweenData.key, tweenData.start, tweenData.index, tween.totalTargets, tween);\n\n            return TWEEN_CONST.PLAYING_BACKWARD;\n        }\n        else if (tweenData.repeatCounter > 0)\n        {\n            //  We've hit the end of a Playing Forward TweenData and we have a Repeat.\n            //  So we're going to go right back to the start to repeat it again.\n\n            tweenData.repeatCounter--;\n\n            //  Account for any extra time we got from the previous frame\n            tweenData.elapsed = diff;\n            tweenData.progress = diff / tweenData.duration;\n\n            if (tweenData.flipX)\n            {\n                tweenData.target.toggleFlipX();\n            }\n\n            if (tweenData.flipY)\n            {\n                tweenData.target.toggleFlipY();\n            }\n\n            tweenData.start = tweenData.getStartValue(tweenData.target, tweenData.key, tweenData.start, tweenData.index, tween.totalTargets, tween);\n\n            tweenData.end = tweenData.getEndValue(tweenData.target, tweenData.key, tweenData.start, tweenData.index, tween.totalTargets, tween);\n\n            //  Delay?\n            if (tweenData.repeatDelay > 0)\n            {\n                tweenData.elapsed = tweenData.repeatDelay - diff;\n\n                tweenData.current = tweenData.start;\n\n                tweenData.target[tweenData.key] = tweenData.current;\n\n                return TWEEN_CONST.REPEAT_DELAY;\n            }\n            else\n            {\n                this.dispatchTweenDataEvent(Events.TWEEN_REPEAT, tween.callbacks.onRepeat, tweenData);\n\n                return TWEEN_CONST.PLAYING_FORWARD;\n            }\n        }\n\n        return TWEEN_CONST.COMPLETE;\n    },\n\n    /**\n     * Internal method used as part of the playback process that sets a tween to play from the start.\n     *\n     * @method Phaser.Tweens.Tween#setStateFromStart\n     * @fires Phaser.Tweens.Events#TWEEN_REPEAT\n     * @since 3.0.0\n     *\n     * @param {Phaser.Tweens.Tween} tween - The Tween to update.\n     * @param {Phaser.Types.Tweens.TweenDataConfig} tweenData - The TweenData property to update.\n     * @param {number} diff - Any extra time that needs to be accounted for in the elapsed and progress values.\n     *\n     * @return {number} The state of this Tween.\n     */\n    setStateFromStart: function (tween, tweenData, diff)\n    {\n        if (tweenData.repeatCounter > 0)\n        {\n            tweenData.repeatCounter--;\n\n            //  Account for any extra time we got from the previous frame\n            tweenData.elapsed = diff;\n            tweenData.progress = diff / tweenData.duration;\n\n            if (tweenData.flipX)\n            {\n                tweenData.target.toggleFlipX();\n            }\n\n            if (tweenData.flipY)\n            {\n                tweenData.target.toggleFlipY();\n            }\n\n            tweenData.end = tweenData.getEndValue(tweenData.target, tweenData.key, tweenData.start, tweenData.index, tween.totalTargets, tween);\n\n            //  Delay?\n            if (tweenData.repeatDelay > 0)\n            {\n                tweenData.elapsed = tweenData.repeatDelay - diff;\n\n                tweenData.current = tweenData.start;\n\n                tweenData.target[tweenData.key] = tweenData.current;\n\n                return TWEEN_CONST.REPEAT_DELAY;\n            }\n            else\n            {\n                this.dispatchTweenDataEvent(Events.TWEEN_REPEAT, tween.callbacks.onRepeat, tweenData);\n\n                return TWEEN_CONST.PLAYING_FORWARD;\n            }\n        }\n\n        return TWEEN_CONST.COMPLETE;\n    },\n\n    /**\n     * Internal method that advances the TweenData based on the time value given.\n     *\n     * @method Phaser.Tweens.Tween#updateTweenData\n     * @fires Phaser.Tweens.Events#TWEEN_UPDATE\n     * @fires Phaser.Tweens.Events#TWEEN_REPEAT\n     * @since 3.0.0\n     *\n     * @param {Phaser.Tweens.Tween} tween - The Tween to update.\n     * @param {Phaser.Types.Tweens.TweenDataConfig} tweenData - The TweenData property to update.\n     * @param {number} delta - Either a value in ms, or 1 if Tween.useFrames is true.\n     *\n     * @return {boolean} True if the tween is not complete (e.g., playing), or false if the tween is complete.\n     */\n    updateTweenData: function (tween, tweenData, delta)\n    {\n        var target = tweenData.target;\n\n        switch (tweenData.state)\n        {\n            case TWEEN_CONST.PLAYING_FORWARD:\n            case TWEEN_CONST.PLAYING_BACKWARD:\n\n                if (!target)\n                {\n                    tweenData.state = TWEEN_CONST.COMPLETE;\n                    break;\n                }\n\n                var elapsed = tweenData.elapsed;\n                var duration = tweenData.duration;\n                var diff = 0;\n\n                elapsed += delta;\n\n                if (elapsed > duration)\n                {\n                    diff = elapsed - duration;\n                    elapsed = duration;\n                }\n\n                var forward = (tweenData.state === TWEEN_CONST.PLAYING_FORWARD);\n                var progress = elapsed / duration;\n\n                tweenData.elapsed = elapsed;\n                tweenData.progress = progress;\n                tweenData.previous = tweenData.current;\n\n                if (progress === 1)\n                {\n                    if (forward)\n                    {\n                        tweenData.current = tweenData.end;\n                        target[tweenData.key] = tweenData.end;\n\n                        if (tweenData.hold > 0)\n                        {\n                            tweenData.elapsed = tweenData.hold - diff;\n\n                            tweenData.state = TWEEN_CONST.HOLD_DELAY;\n                        }\n                        else\n                        {\n                            tweenData.state = this.setStateFromEnd(tween, tweenData, diff);\n                        }\n                    }\n                    else\n                    {\n                        tweenData.current = tweenData.start;\n                        target[tweenData.key] = tweenData.start;\n\n                        tweenData.state = this.setStateFromStart(tween, tweenData, diff);\n                    }\n                }\n                else\n                {\n                    var v = (forward) ? tweenData.ease(progress) : tweenData.ease(1 - progress);\n\n                    tweenData.current = tweenData.start + ((tweenData.end - tweenData.start) * v);\n\n                    target[tweenData.key] = tweenData.current;\n                }\n\n                this.dispatchTweenDataEvent(Events.TWEEN_UPDATE, tween.callbacks.onUpdate, tweenData);\n\n                break;\n\n            case TWEEN_CONST.DELAY:\n\n                tweenData.elapsed -= delta;\n\n                if (tweenData.elapsed <= 0)\n                {\n                    tweenData.elapsed = Math.abs(tweenData.elapsed);\n\n                    tweenData.state = TWEEN_CONST.PENDING_RENDER;\n                }\n\n                break;\n\n            case TWEEN_CONST.REPEAT_DELAY:\n\n                tweenData.elapsed -= delta;\n\n                if (tweenData.elapsed <= 0)\n                {\n                    tweenData.elapsed = Math.abs(tweenData.elapsed);\n\n                    tweenData.state = TWEEN_CONST.PLAYING_FORWARD;\n\n                    this.dispatchTweenDataEvent(Events.TWEEN_REPEAT, tween.callbacks.onRepeat, tweenData);\n                }\n\n                break;\n\n            case TWEEN_CONST.HOLD_DELAY:\n\n                tweenData.elapsed -= delta;\n\n                if (tweenData.elapsed <= 0)\n                {\n                    tweenData.state = this.setStateFromEnd(tween, tweenData, Math.abs(tweenData.elapsed));\n                }\n\n                break;\n\n            case TWEEN_CONST.PENDING_RENDER:\n\n                if (target)\n                {\n                    tweenData.start = tweenData.getStartValue(target, tweenData.key, target[tweenData.key], tweenData.index, tween.totalTargets, tween);\n\n                    tweenData.end = tweenData.getEndValue(target, tweenData.key, tweenData.start, tweenData.index, tween.totalTargets, tween);\n\n                    tweenData.current = tweenData.start;\n\n                    target[tweenData.key] = tweenData.start;\n\n                    tweenData.state = TWEEN_CONST.PLAYING_FORWARD;\n                }\n                else\n                {\n                    tweenData.state = TWEEN_CONST.COMPLETE;\n                }\n\n                break;\n        }\n\n        //  Return TRUE if this TweenData still playing, otherwise return FALSE\n        return (tweenData.state !== TWEEN_CONST.COMPLETE);\n    }\n\n});\n\n//  onActive = 'active' event = When the Tween is moved from the pending to the active list in the manager, even if playback delayed\n//  onStart = 'start' event = When the Tween starts playing from a delayed state (will happen same time as onActive if no delay)\n//  onStop = 'stop' event = When the Tween is stopped\n//  onYoyo = 'yoyo' event = When the Tween starts a yoyo\n//  onRepeat = 'repeat' event = When a TweenData repeats playback (if any)\n//  onComplete = 'complete' event = When the Tween finishes all playback (can sometimes never happen if repeat -1), also when 'stop' called\n//  onUpdate = 'update' event = When the Tween updates a TweenData during playback (expensive!)\n//  onLoop = 'loop' event = Used to loop ALL TweenDatas in a Tween\n\nTween.TYPES = [\n    'onActive',\n    'onComplete',\n    'onLoop',\n    'onRepeat',\n    'onStart',\n    'onStop',\n    'onUpdate',\n    'onYoyo'\n];\n\n/**\n * Creates a new Tween object.\n *\n * Note: This method will only be available if Tweens have been built into Phaser.\n *\n * @method Phaser.GameObjects.GameObjectFactory#tween\n * @since 3.0.0\n *\n * @param {Phaser.Types.Tweens.TweenBuilderConfig|object} config - The Tween configuration.\n *\n * @return {Phaser.Tweens.Tween} The Tween that was created.\n */\nGameObjectFactory.register('tween', function (config)\n{\n    return this.scene.sys.tweens.add(config);\n});\n\n//  When registering a factory function 'this' refers to the GameObjectFactory context.\n//\n//  There are several properties available to use:\n//\n//  this.scene - a reference to the Scene that owns the GameObjectFactory\n//  this.displayList - a reference to the Display List the Scene owns\n//  this.updateList - a reference to the Update List the Scene owns\n\n/**\n * Creates a new Tween object and returns it.\n *\n * Note: This method will only be available if Tweens have been built into Phaser.\n *\n * @method Phaser.GameObjects.GameObjectCreator#tween\n * @since 3.0.0\n *\n * @param {Phaser.Types.Tweens.TweenBuilderConfig|object} config - The Tween configuration.\n *\n * @return {Phaser.Tweens.Tween} The Tween that was created.\n */\nGameObjectCreator.register('tween', function (config)\n{\n    return this.scene.sys.tweens.create(config);\n});\n\n//  When registering a factory function 'this' refers to the GameObjectCreator context.\n\nmodule.exports = Tween;\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Returns a TweenDataConfig object that describes the tween data for a unique property of a unique target.\r\n * A single Tween consists of multiple TweenDatas, depending on how many properties are being changed by the Tween.\r\n *\r\n * This is an internal function used by the TweenBuilder and should not be accessed directly, instead,\r\n * Tweens should be created using the GameObjectFactory or GameObjectCreator.\r\n *\r\n * @function Phaser.Tweens.TweenData\r\n * @since 3.0.0\r\n *\r\n * @param {any} target - The target to tween.\r\n * @param {number} index - The target index within the Tween targets array.\r\n * @param {string} key - The property of the target to tween.\r\n * @param {function} getEnd - What the property will be at the END of the Tween.\r\n * @param {function} getStart - What the property will be at the START of the Tween.\r\n * @param {?function} getActive - If not null, is invoked _immediately_ as soon as the TweenData is running, and is set on the target property.\r\n * @param {function} ease - The ease function this tween uses.\r\n * @param {number} delay - Time in ms/frames before tween will start.\r\n * @param {number} duration - Duration of the tween in ms/frames.\r\n * @param {boolean} yoyo - Determines whether the tween should return back to its start value after hold has expired.\r\n * @param {number} hold - Time in ms/frames the tween will pause before repeating or returning to its starting value if yoyo is set to true.\r\n * @param {number} repeat - Number of times to repeat the tween. The tween will always run once regardless, so a repeat value of '1' will play the tween twice.\r\n * @param {number} repeatDelay - Time in ms/frames before the repeat will start.\r\n * @param {boolean} flipX - Should toggleFlipX be called when yoyo or repeat happens?\r\n * @param {boolean} flipY - Should toggleFlipY be called when yoyo or repeat happens?\r\n *\r\n * @return {Phaser.Types.Tweens.TweenDataConfig} The config object describing this TweenData.\r\n */\r\nvar TweenData = function (target, index, key, getEnd, getStart, getActive, ease, delay, duration, yoyo, hold, repeat, repeatDelay, flipX, flipY)\r\n{\r\n    return {\r\n\r\n        //  The target to tween\r\n        target: target,\r\n\r\n        //  The index of the target within the tween targets array\r\n        index: index,\r\n\r\n        //  The property of the target to tween\r\n        key: key,\r\n\r\n        //  What to set the property to the moment the TweenData is invoked.\r\n        getActiveValue: getActive,\r\n\r\n        //  The returned value sets what the property will be at the END of the Tween.\r\n        getEndValue: getEnd,\r\n\r\n        //  The returned value sets what the property will be at the START of the Tween.\r\n        getStartValue: getStart,\r\n\r\n        //  The ease function this tween uses.\r\n        ease: ease,\r\n\r\n        //  Duration of the tween in ms/frames, excludes time for yoyo or repeats.\r\n        duration: 0,\r\n\r\n        //  The total calculated duration of this TweenData (based on duration, repeat, delay and yoyo)\r\n        totalDuration: 0,\r\n\r\n        //  Time in ms/frames before tween will start.\r\n        delay: 0,\r\n\r\n        //  Cause the tween to return back to its start value after hold has expired.\r\n        yoyo: yoyo,\r\n\r\n        //  Time in ms/frames the tween will pause before running the yoyo or starting a repeat.\r\n        hold: 0,\r\n\r\n        //  Number of times to repeat the tween. The tween will always run once regardless, so a repeat value of '1' will play the tween twice.\r\n        repeat: 0,\r\n\r\n        //  Time in ms/frames before the repeat will start.\r\n        repeatDelay: 0,\r\n\r\n        //  Automatically call toggleFlipX when the TweenData yoyos or repeats\r\n        flipX: flipX,\r\n\r\n        //  Automatically call toggleFlipY when the TweenData yoyos or repeats\r\n        flipY: flipY,\r\n\r\n        //  Between 0 and 1 showing completion of this TweenData.\r\n        progress: 0,\r\n\r\n        //  Delta counter.\r\n        elapsed: 0,\r\n\r\n        //  How many repeats are left to run?\r\n        repeatCounter: 0,\r\n\r\n        //  Ease Value Data:\r\n\r\n        start: 0,\r\n        previous: 0,\r\n        current: 0,\r\n        end: 0,\r\n\r\n        //  Time Durations\r\n        t1: 0,\r\n        t2: 0,\r\n\r\n        //  LoadValue generation functions\r\n        gen: {\r\n            delay: delay,\r\n            duration: duration,\r\n            hold: hold,\r\n            repeat: repeat,\r\n            repeatDelay: repeatDelay\r\n        },\r\n\r\n        //  TWEEN_CONST.CREATED\r\n        state: 0\r\n    };\r\n};\r\n\r\nmodule.exports = TweenData;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar TWEEN_CONST = {\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.CREATED\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    CREATED: 0,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.INIT\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    INIT: 1,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    DELAY: 2,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.OFFSET_DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    OFFSET_DELAY: 3,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.PENDING_RENDER\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PENDING_RENDER: 4,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.PLAYING_FORWARD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PLAYING_FORWARD: 5,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.PLAYING_BACKWARD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PLAYING_BACKWARD: 6,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.HOLD_DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    HOLD_DELAY: 7,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.REPEAT_DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    REPEAT_DELAY: 8,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.COMPLETE\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    COMPLETE: 9,\r\n\r\n    //  Tween specific (starts from 20 to cleanly allow extra TweenData consts in the future)\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.PENDING_ADD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PENDING_ADD: 20,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.PAUSED\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PAUSED: 21,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.LOOP_DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    LOOP_DELAY: 22,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.ACTIVE\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    ACTIVE: 23,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.COMPLETE_DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    COMPLETE_DELAY: 24,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.PENDING_REMOVE\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PENDING_REMOVE: 25,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.REMOVED\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    REMOVED: 26\r\n\r\n};\r\n\r\nmodule.exports = TWEEN_CONST;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar SpliceOne = require('./SpliceOne');\r\n\r\n/**\r\n * Removes the given item, or array of items, from the array.\r\n *\r\n * The array is modified in-place.\r\n *\r\n * You can optionally specify a callback to be invoked for each item successfully removed from the array.\r\n *\r\n * @function Phaser.Utils.Array.Remove\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to be modified.\r\n * @param {*|Array.<*>} item - The item, or array of items, to be removed from the array.\r\n * @param {function} [callback] - A callback to be invoked for each item successfully removed from the array.\r\n * @param {object} [context] - The context in which the callback is invoked.\r\n *\r\n * @return {*|Array.<*>} The item, or array of items, that were successfully removed from the array.\r\n */\r\nvar Remove = function (array, item, callback, context)\r\n{\r\n    if (context === undefined) { context = array; }\r\n\r\n    var index;\r\n\r\n    //  Fast path to avoid array mutation and iteration\r\n    if (!Array.isArray(item))\r\n    {\r\n        index = array.indexOf(item);\r\n\r\n        if (index !== -1)\r\n        {\r\n            SpliceOne(array, index);\r\n\r\n            if (callback)\r\n            {\r\n                callback.call(context, item);\r\n            }\r\n\r\n            return item;\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    //  If we got this far, we have an array of items to remove\r\n\r\n    var itemLength = item.length - 1;\r\n    var removed = [];\r\n\r\n    while (itemLength >= 0)\r\n    {\r\n        var entry = item[itemLength];\r\n\r\n        index = array.indexOf(entry);\r\n\r\n        if (index !== -1)\r\n        {\r\n            SpliceOne(array, index);\r\n\r\n            removed.push(entry);\r\n\r\n            if (callback)\r\n            {\r\n                callback.call(context, entry);\r\n            }\r\n        }\r\n\r\n        itemLength--;\r\n    }\r\n\r\n    return removed;\r\n};\r\n\r\nmodule.exports = Remove;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Removes a single item from an array and returns it without creating gc, like the native splice does.\r\n * Based on code by Mike Reinstein.\r\n *\r\n * @function Phaser.Utils.Array.SpliceOne\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to splice from.\r\n * @param {number} index - The index of the item which should be spliced.\r\n *\r\n * @return {*} The item which was spliced (removed).\r\n */\r\nvar SpliceOne = function (array, index)\r\n{\r\n    if (index >= array.length)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var len = array.length - 1;\r\n\r\n    var item = array[index];\r\n\r\n    for (var i = index; i < len; i++)\r\n    {\r\n        array[i] = array[i + 1];\r\n    }\r\n\r\n    array.length = len;\r\n\r\n    return item;\r\n};\r\n\r\nmodule.exports = SpliceOne;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Shallow Object Clone. Will not clone nested objects.\r\n *\r\n * @function Phaser.Utils.Objects.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {object} obj - The object to clone.\r\n *\r\n * @return {object} A new object with the same properties as the input object.\r\n */\r\nvar Clone = function (obj)\r\n{\r\n    var clone = {};\r\n\r\n    for (var key in obj)\r\n    {\r\n        if (Array.isArray(obj[key]))\r\n        {\r\n            clone[key] = obj[key].slice(0);\r\n        }\r\n        else\r\n        {\r\n            clone[key] = obj[key];\r\n        }\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nmodule.exports = Clone;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MATH = require('../../math');\r\nvar GetValue = require('./GetValue');\r\n\r\n/**\r\n * Retrieves a value from an object. Allows for more advanced selection options, including:\r\n *\r\n * Allowed types:\r\n * \r\n * Implicit\r\n * {\r\n *     x: 4\r\n * }\r\n *\r\n * From function\r\n * {\r\n *     x: function ()\r\n * }\r\n *\r\n * Randomly pick one element from the array\r\n * {\r\n *     x: [a, b, c, d, e, f]\r\n * }\r\n *\r\n * Random integer between min and max:\r\n * {\r\n *     x: { randInt: [min, max] }\r\n * }\r\n *\r\n * Random float between min and max:\r\n * {\r\n *     x: { randFloat: [min, max] }\r\n * }\r\n * \r\n *\r\n * @function Phaser.Utils.Objects.GetAdvancedValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`) - `banner.hideBanner` would return the value of the `hideBanner` property from the object stored in the `banner` property of the `source` object.\r\n * @param {*} defaultValue - The value to return if the `key` isn't found in the `source` object.\r\n *\r\n * @return {*} The value of the requested key.\r\n */\r\nvar GetAdvancedValue = function (source, key, defaultValue)\r\n{\r\n    var value = GetValue(source, key, null);\r\n\r\n    if (value === null)\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (Array.isArray(value))\r\n    {\r\n        return MATH.RND.pick(value);\r\n    }\r\n    else if (typeof value === 'object')\r\n    {\r\n        if (value.hasOwnProperty('randInt'))\r\n        {\r\n            return MATH.RND.integerInRange(value.randInt[0], value.randInt[1]);\r\n        }\r\n        else if (value.hasOwnProperty('randFloat'))\r\n        {\r\n            return MATH.RND.realInRange(value.randFloat[0], value.randFloat[1]);\r\n        }\r\n    }\r\n    else if (typeof value === 'function')\r\n    {\r\n        return value(key);\r\n    }\r\n\r\n    return value;\r\n};\r\n\r\nmodule.exports = GetAdvancedValue;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Source object\r\n//  The key as a string, or an array of keys, i.e. 'banner', or 'banner.hideBanner'\r\n//  The default value to use if the key doesn't exist\r\n\r\n/**\r\n * Retrieves a value from an object.\r\n *\r\n * @function Phaser.Utils.Objects.GetValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`) - `banner.hideBanner` would return the value of the `hideBanner` property from the object stored in the `banner` property of the `source` object.\r\n * @param {*} defaultValue - The value to return if the `key` isn't found in the `source` object.\r\n *\r\n * @return {*} The value of the requested key.\r\n */\r\nvar GetValue = function (source, key, defaultValue)\r\n{\r\n    if (!source || typeof source === 'number')\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (source.hasOwnProperty(key))\r\n    {\r\n        return source[key];\r\n    }\r\n    else if (key.indexOf('.') !== -1)\r\n    {\r\n        var keys = key.split('.');\r\n        var parent = source;\r\n        var value = defaultValue;\r\n\r\n        //  Use for loop here so we can break early\r\n        for (var i = 0; i < keys.length; i++)\r\n        {\r\n            if (parent.hasOwnProperty(keys[i]))\r\n            {\r\n                //  Yes it has a key property, let's carry on down\r\n                value = parent[keys[i]];\r\n\r\n                parent = parent[keys[i]];\r\n            }\r\n            else\r\n            {\r\n                //  Can't go any further, so reset to default\r\n                value = defaultValue;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n    else\r\n    {\r\n        return defaultValue;\r\n    }\r\n};\r\n\r\nmodule.exports = GetValue;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Capitalizes the first letter of a string if there is one.\r\n * @example\r\n * UppercaseFirst('abc');\r\n * // returns 'Abc'\r\n * @example\r\n * UppercaseFirst('the happy family');\r\n * // returns 'The happy family'\r\n * @example\r\n * UppercaseFirst('');\r\n * // returns ''\r\n *\r\n * @function Phaser.Utils.String.UppercaseFirst\r\n * @since 3.0.0\r\n *\r\n * @param {string} str - The string to capitalize.\r\n *\r\n * @return {string} A new string, same as the first, but with the first letter capitalized.\r\n */\r\nvar UppercaseFirst = function (str)\r\n{\r\n    return str && str[0].toUpperCase() + str.slice(1);\r\n};\r\n\r\nmodule.exports = UppercaseFirst;\r\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","exports","Class","PluginCache","SceneEvents","GameObjectCreator","initialize","scene","systems","sys","displayList","updateList","BOOT","boot","START","start","DESTROY","destroy","SHUTDOWN","shutdown","register","factoryType","factoryFunction","remove","GameObjectFactory","existing","child","renderCanvas","renderWebGL","add","preUpdate","point","x","y","angle","c","Math","cos","s","sin","tx","ty","Vector2","positionX","positionY","rotation","scaleX","scaleY","output","radianSin","radianCos","a","b","d","id","MathWrap","PI","Wrap","MATH_CONST","PI2","TAU","EPSILON","DEG_TO_RAD","RAD_TO_DEG","RND","MIN_SAFE_INTEGER","Number","MAX_SAFE_INTEGER","Back","Bounce","Circular","Cubic","Elastic","Expo","Linear","Quadratic","Quartic","Quintic","Sine","Stepped","Power0","Power1","Out","Power2","Power3","Power4","Quad","Quart","Quint","Circ","In","InOut","corePlugins","customPlugins","key","plugin","mapping","custom","data","TweenBuilder","TWEEN_CONST","Timeline","Extends","manager","isTimeline","totalData","useFrames","timeScale","loop","loopDelay","loopCounter","completeDelay","countdown","state","PENDING_ADD","_pausedState","paused","elapsed","totalElapsed","duration","progress","totalDuration","totalProgress","callbacks","onComplete","onLoop","onStart","onUpdate","onYoyo","callbackScope","dispatchTimelineEvent","callback","func","scope","params","setTimeScale","value","getTimeScale","isPlaying","ACTIVE","config","queue","tween","parent","parentIsTimeline","hasOffset","offset","isOffsetAbsolute","isOffsetRelative","op","getRelativeOffset","base","num","parseFloat","substr","result","max","calcDuration","prevEnd","offsetDuration","init","calculatedOffset","PAUSED","resetTweens","resetFromLoop","play","setCallback","type","TYPES","indexOf","makeActive","TIMELINE_START","nextState","LOOP_DELAY","TIMELINE_LOOP","COMPLETE_DELAY","PENDING_REMOVE","TIMELINE_COMPLETE","update","timestamp","delta","min","stillRunning","TIMELINE_UPDATE","stop","pause","TIMELINE_PAUSE","resume","TIMELINE_RESUME","hasTarget","target","ArrayRemove","NumberTweenBuilder","StaggerBuilder","TimelineBuilder","TweenManager","_add","_pending","_active","_destroy","_toProcess","eventEmitter","PRE_UPDATE","UPDATE","createTimeline","timeline","addCounter","stagger","options","list","active","pending","idx","REMOVED","splice","each","texture","getAllTweens","getGlobalTimeScale","getTweensOf","includePending","t","isArray","isTweening","killAll","tweens","killTweensOf","pauseAll","resumeAll","setGlobalTimeScale","source","defaultValue","EaseMap","UppercaseFirst","ease","easeParams","easeFunction","direction","toLowerCase","cloneParams","unshift","v","targetKey","targetIndex","totalTargets","RESERVED","keys","props","GetValue","targets","hasGetActive","def","getActive","hasGetStart","getStart","hasGetEnd","getEnd","GetValueOp","propertyValue","hasTo","hasFrom","hasStart","to","startCallbacks","fromCallbacks","from","Defaults","GetAdvancedValue","GetBoolean","GetEaseFunction","GetNewValue","Tween","TweenData","defaults","delay","hold","repeat","repeatDelay","yoyo","ops","tweenData","current","round","tweenArray","callbackParams","grid","fromFirst","fromCenter","fromLast","fromValue","isRange","value1","value2","maxValue","gridWidth","gridHeight","fromX","fromY","distanceX","distanceY","gridValues","floor","gridMax","toY","toX","dist","sqrt","index","gridSpace","diff","total","fromIndex","spacing","abs","Clone","GetTargets","GetTweens","timelineArray","onStartScope","onStartParams","onUpdateScope","onUpdateParams","onLoopScope","onLoopParams","onYoyoScope","onYoyoParams","onCompleteScope","onCompleteParams","flipX","flipY","GetProps","p","TWEEN_ACTIVE","TWEEN_COMPLETE","TWEEN_LOOP","TWEEN_REPEAT","TWEEN_START","TWEEN_STOP","TWEEN_UPDATE","TWEEN_YOYO","CONST","Extend","Tweens","Builders","startDelay","hasStarted","isSeeking","INIT","onActive","onRepeat","onStop","getValue","isPaused","updateTo","startToCurrent","end","restart","seek","maxDuration","minDelay","t1","t2","gen","dispatchTweenEvent","resetTweenData","resetFromTimeline","OFFSET_DELAY","repeatCounter","getStartValue","getEndValue","PLAYING_FORWARD","PENDING_RENDER","DELAY","getActiveValue","toPosition","updateTweenData","wasPaused","complete","resetTo","dispatchTweenDataEvent","previous","setStateFromEnd","toggleFlipX","toggleFlipY","PLAYING_BACKWARD","REPEAT_DELAY","COMPLETE","setStateFromStart","forward","HOLD_DELAY","CREATED","SpliceOne","array","item","itemLength","removed","entry","obj","clone","MATH","pick","integerInRange","randInt","realInRange","randFloat","split","str","toUpperCase"],"sourceRoot":""}