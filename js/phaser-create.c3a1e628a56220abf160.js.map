{"version":3,"file":"js/phaser-create.c3a1e628a56220abf160.js","mappings":"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","sources":["webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/create/GenerateTexture.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/create/index.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/create/palettes/Arne16.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/create/palettes/C64.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/create/palettes/CGA.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/create/palettes/JMP.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/create/palettes/MSX.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/create/palettes/index.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/display/canvas/CanvasPool.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/display/canvas/Smoothing.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/GetValue.js"],"sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Arne16 = require('./palettes/Arne16');\r\nvar CanvasPool = require('../display/canvas/CanvasPool');\r\nvar GetValue = require('../utils/object/GetValue');\r\n\r\n/**\r\n * Generates a texture based on the given Create configuration object.\r\n * \r\n * The texture is drawn using a fixed-size indexed palette of 16 colors, where the hex value in the\r\n * data cells map to a single color. For example, if the texture config looked like this:\r\n *\r\n * ```javascript\r\n * var star = [\r\n *   '.....828.....',\r\n *   '....72227....',\r\n *   '....82228....',\r\n *   '...7222227...',\r\n *   '2222222222222',\r\n *   '8222222222228',\r\n *   '.72222222227.',\r\n *   '..787777787..',\r\n *   '..877777778..',\r\n *   '.78778887787.',\r\n *   '.27887.78872.',\r\n *   '.787.....787.'\r\n * ];\r\n * \r\n * this.textures.generate('star', { data: star, pixelWidth: 4 });\r\n * ```\r\n * \r\n * Then it would generate a texture that is 52 x 48 pixels in size, because each cell of the data array\r\n * represents 1 pixel multiplied by the `pixelWidth` value. The cell values, such as `8`, maps to color\r\n * number 8 in the palette. If a cell contains a period character `.` then it is transparent.\r\n * \r\n * The default palette is Arne16, but you can specify your own using the `palette` property.\r\n *\r\n * @function Phaser.Create.GenerateTexture\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.Create.GenerateTextureConfig} config - The Generate Texture Configuration object.\r\n *\r\n * @return {HTMLCanvasElement} An HTMLCanvasElement which contains the generated texture drawn to it.\r\n */\r\nvar GenerateTexture = function (config)\r\n{\r\n    var data = GetValue(config, 'data', []);\r\n    var canvas = GetValue(config, 'canvas', null);\r\n    var palette = GetValue(config, 'palette', Arne16);\r\n    var pixelWidth = GetValue(config, 'pixelWidth', 1);\r\n    var pixelHeight = GetValue(config, 'pixelHeight', pixelWidth);\r\n    var resizeCanvas = GetValue(config, 'resizeCanvas', true);\r\n    var clearCanvas = GetValue(config, 'clearCanvas', true);\r\n    var preRender = GetValue(config, 'preRender', null);\r\n    var postRender = GetValue(config, 'postRender', null);\r\n\r\n    var width = Math.floor(Math.abs(data[0].length * pixelWidth));\r\n    var height = Math.floor(Math.abs(data.length * pixelHeight));\r\n\r\n    if (!canvas)\r\n    {\r\n        canvas = CanvasPool.create2D(this, width, height);\r\n        resizeCanvas = false;\r\n        clearCanvas = false;\r\n    }\r\n\r\n    if (resizeCanvas)\r\n    {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n\r\n    var ctx = canvas.getContext('2d');\r\n\r\n    if (clearCanvas)\r\n    {\r\n        ctx.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    //  preRender Callback?\r\n    if (preRender)\r\n    {\r\n        preRender(canvas, ctx);\r\n    }\r\n\r\n    //  Draw it\r\n    for (var y = 0; y < data.length; y++)\r\n    {\r\n        var row = data[y];\r\n\r\n        for (var x = 0; x < row.length; x++)\r\n        {\r\n            var d = row[x];\r\n\r\n            if (d !== '.' && d !== ' ')\r\n            {\r\n                ctx.fillStyle = palette[d];\r\n                ctx.fillRect(x * pixelWidth, y * pixelHeight, pixelWidth, pixelHeight);\r\n            }\r\n        }\r\n    }\r\n\r\n    //  postRender Callback?\r\n    if (postRender)\r\n    {\r\n        postRender(canvas, ctx);\r\n    }\r\n\r\n    return canvas;\r\n};\r\n\r\nmodule.exports = GenerateTexture;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Create\r\n */\r\n\r\nmodule.exports = {\r\n  \r\n    GenerateTexture: require('./GenerateTexture'),\r\n    Palettes: require('./palettes')\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette by [Arne](http://androidarts.com/palette/16pal.htm)\r\n *\r\n * @name Phaser.Create.Palettes.ARNE16\r\n * @since 3.0.0\r\n *\r\n * @type {Phaser.Types.Create.Palette}\r\n */\r\nmodule.exports = {\r\n    0: '#000',\r\n    1: '#9D9D9D',\r\n    2: '#FFF',\r\n    3: '#BE2633',\r\n    4: '#E06F8B',\r\n    5: '#493C2B',\r\n    6: '#A46422',\r\n    7: '#EB8931',\r\n    8: '#F7E26B',\r\n    9: '#2F484E',\r\n    A: '#44891A',\r\n    B: '#A3CE27',\r\n    C: '#1B2632',\r\n    D: '#005784',\r\n    E: '#31A2F2',\r\n    F: '#B2DCEF'\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette inspired by the Commodore 64.\r\n *\r\n * @name Phaser.Create.Palettes.C64\r\n * @since 3.0.0\r\n *\r\n * @type {Phaser.Types.Create.Palette}\r\n */\r\nmodule.exports = {\r\n    0: '#000',\r\n    1: '#fff',\r\n    2: '#8b4131',\r\n    3: '#7bbdc5',\r\n    4: '#8b41ac',\r\n    5: '#6aac41',\r\n    6: '#3931a4',\r\n    7: '#d5de73',\r\n    8: '#945a20',\r\n    9: '#5a4100',\r\n    A: '#bd736a',\r\n    B: '#525252',\r\n    C: '#838383',\r\n    D: '#acee8b',\r\n    E: '#7b73de',\r\n    F: '#acacac'\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color CGA inspired palette by [Arne](http://androidarts.com/palette/16pal.htm)\r\n *\r\n * @name Phaser.Create.Palettes.CGA\r\n * @since 3.0.0\r\n *\r\n * @type {Phaser.Types.Create.Palette}\r\n */\r\nmodule.exports = {\r\n    0: '#000',\r\n    1: '#2234d1',\r\n    2: '#0c7e45',\r\n    3: '#44aacc',\r\n    4: '#8a3622',\r\n    5: '#5c2e78',\r\n    6: '#aa5c3d',\r\n    7: '#b5b5b5',\r\n    8: '#5e606e',\r\n    9: '#4c81fb',\r\n    A: '#6cd947',\r\n    B: '#7be2f9',\r\n    C: '#eb8a60',\r\n    D: '#e23d69',\r\n    E: '#ffd93f',\r\n    F: '#fff'\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color JMP palette by [Arne](http://androidarts.com/palette/16pal.htm)\r\n *\r\n * @name Phaser.Create.Palettes.JMP\r\n * @since 3.0.0\r\n *\r\n * @type {Phaser.Types.Create.Palette}\r\n */\r\nmodule.exports = {\r\n    0: '#000',\r\n    1: '#191028',\r\n    2: '#46af45',\r\n    3: '#a1d685',\r\n    4: '#453e78',\r\n    5: '#7664fe',\r\n    6: '#833129',\r\n    7: '#9ec2e8',\r\n    8: '#dc534b',\r\n    9: '#e18d79',\r\n    A: '#d6b97b',\r\n    B: '#e9d8a1',\r\n    C: '#216c4b',\r\n    D: '#d365c8',\r\n    E: '#afaab9',\r\n    F: '#f5f4eb'\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette inspired by Japanese computers like the MSX.\r\n *\r\n * @name Phaser.Create.Palettes.MSX\r\n * @since 3.0.0\r\n *\r\n * @type {Phaser.Types.Create.Palette}\r\n */\r\nmodule.exports = {\r\n    0: '#000',\r\n    1: '#191028',\r\n    2: '#46af45',\r\n    3: '#a1d685',\r\n    4: '#453e78',\r\n    5: '#7664fe',\r\n    6: '#833129',\r\n    7: '#9ec2e8',\r\n    8: '#dc534b',\r\n    9: '#e18d79',\r\n    A: '#d6b97b',\r\n    B: '#e9d8a1',\r\n    C: '#216c4b',\r\n    D: '#d365c8',\r\n    E: '#afaab9',\r\n    F: '#fff'\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Create.Palettes\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    ARNE16: require('./Arne16'),\r\n    C64: require('./C64'),\r\n    CGA: require('./CGA'),\r\n    JMP: require('./JMP'),\r\n    MSX: require('./MSX')\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar CONST = require('../../const');\r\nvar Smoothing = require('./Smoothing');\r\n\r\n// The pool into which the canvas elements are placed.\r\nvar pool = [];\r\n\r\n//  Automatically apply smoothing(false) to created Canvas elements\r\nvar _disableContextSmoothing = false;\r\n\r\n/**\r\n * The CanvasPool is a global static object, that allows Phaser to recycle and pool 2D Context Canvas DOM elements.\r\n * It does not pool WebGL Contexts, because once the context options are set they cannot be modified again, \r\n * which is useless for some of the Phaser pipelines / renderer.\r\n *\r\n * This singleton is instantiated as soon as Phaser loads, before a Phaser.Game instance has even been created.\r\n * Which means all instances of Phaser Games on the same page can share the one single pool.\r\n *\r\n * @namespace Phaser.Display.Canvas.CanvasPool\r\n * @since 3.0.0\r\n */\r\nvar CanvasPool = function ()\r\n{\r\n    /**\r\n     * Creates a new Canvas DOM element, or pulls one from the pool if free.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.create\r\n     * @since 3.0.0\r\n     *\r\n     * @param {*} parent - The parent of the Canvas object.\r\n     * @param {number} [width=1] - The width of the Canvas.\r\n     * @param {number} [height=1] - The height of the Canvas.\r\n     * @param {number} [canvasType=Phaser.CANVAS] - The type of the Canvas. Either `Phaser.CANVAS` or `Phaser.WEBGL`.\r\n     * @param {boolean} [selfParent=false] - Use the generated Canvas element as the parent?\r\n     *\r\n     * @return {HTMLCanvasElement} The canvas element that was created or pulled from the pool\r\n     */\r\n    var create = function (parent, width, height, canvasType, selfParent)\r\n    {\r\n        if (width === undefined) { width = 1; }\r\n        if (height === undefined) { height = 1; }\r\n        if (canvasType === undefined) { canvasType = CONST.CANVAS; }\r\n        if (selfParent === undefined) { selfParent = false; }\r\n\r\n        var canvas;\r\n        var container = first(canvasType);\r\n\r\n        if (container === null)\r\n        {\r\n            container = {\r\n                parent: parent,\r\n                canvas: document.createElement('canvas'),\r\n                type: canvasType\r\n            };\r\n\r\n            if (canvasType === CONST.CANVAS)\r\n            {\r\n                pool.push(container);\r\n            }\r\n\r\n            canvas = container.canvas;\r\n        }\r\n        else\r\n        {\r\n            container.parent = parent;\r\n\r\n            canvas = container.canvas;\r\n        }\r\n\r\n        if (selfParent)\r\n        {\r\n            container.parent = canvas;\r\n        }\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        if (_disableContextSmoothing && canvasType === CONST.CANVAS)\r\n        {\r\n            Smoothing.disable(canvas.getContext('2d'));\r\n        }\r\n\r\n        return canvas;\r\n    };\r\n\r\n    /**\r\n     * Creates a new Canvas DOM element, or pulls one from the pool if free.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.create2D\r\n     * @since 3.0.0\r\n     *\r\n     * @param {*} parent - The parent of the Canvas object.\r\n     * @param {number} [width=1] - The width of the Canvas.\r\n     * @param {number} [height=1] - The height of the Canvas.\r\n     *\r\n     * @return {HTMLCanvasElement} The created canvas.\r\n     */\r\n    var create2D = function (parent, width, height)\r\n    {\r\n        return create(parent, width, height, CONST.CANVAS);\r\n    };\r\n\r\n    /**\r\n     * Creates a new Canvas DOM element, or pulls one from the pool if free.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.createWebGL\r\n     * @since 3.0.0\r\n     *\r\n     * @param {*} parent - The parent of the Canvas object.\r\n     * @param {number} [width=1] - The width of the Canvas.\r\n     * @param {number} [height=1] - The height of the Canvas.\r\n     *\r\n     * @return {HTMLCanvasElement} The created WebGL canvas.\r\n     */\r\n    var createWebGL = function (parent, width, height)\r\n    {\r\n        return create(parent, width, height, CONST.WEBGL);\r\n    };\r\n\r\n    /**\r\n     * Gets the first free canvas index from the pool.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.first\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [canvasType=Phaser.CANVAS] - The type of the Canvas. Either `Phaser.CANVAS` or `Phaser.WEBGL`.\r\n     *\r\n     * @return {HTMLCanvasElement} The first free canvas, or `null` if a WebGL canvas was requested or if the pool doesn't have free canvases.\r\n     */\r\n    var first = function (canvasType)\r\n    {\r\n        if (canvasType === undefined) { canvasType = CONST.CANVAS; }\r\n\r\n        if (canvasType === CONST.WEBGL)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        for (var i = 0; i < pool.length; i++)\r\n        {\r\n            var container = pool[i];\r\n\r\n            if (!container.parent && container.type === canvasType)\r\n            {\r\n                return container;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Looks up a canvas based on its parent, and if found puts it back in the pool, freeing it up for re-use.\r\n     * The canvas has its width and height set to 1, and its parent attribute nulled.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.remove\r\n     * @since 3.0.0\r\n     *\r\n     * @param {*} parent - The canvas or the parent of the canvas to free.\r\n     */\r\n    var remove = function (parent)\r\n    {\r\n        //  Check to see if the parent is a canvas object\r\n        var isCanvas = parent instanceof HTMLCanvasElement;\r\n\r\n        pool.forEach(function (container)\r\n        {\r\n            if ((isCanvas && container.canvas === parent) || (!isCanvas && container.parent === parent))\r\n            {\r\n                container.parent = null;\r\n                container.canvas.width = 1;\r\n                container.canvas.height = 1;\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Gets the total number of used canvas elements in the pool.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.total\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The number of used canvases.\r\n     */\r\n    var total = function ()\r\n    {\r\n        var c = 0;\r\n\r\n        pool.forEach(function (container)\r\n        {\r\n            if (container.parent)\r\n            {\r\n                c++;\r\n            }\r\n        });\r\n\r\n        return c;\r\n    };\r\n\r\n    /**\r\n     * Gets the total number of free canvas elements in the pool.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.free\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The number of free canvases.\r\n     */\r\n    var free = function ()\r\n    {\r\n        return pool.length - total();\r\n    };\r\n\r\n    /**\r\n     * Disable context smoothing on any new Canvas element created.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.disableSmoothing\r\n     * @since 3.0.0\r\n     */\r\n    var disableSmoothing = function ()\r\n    {\r\n        _disableContextSmoothing = true;\r\n    };\r\n\r\n    /**\r\n     * Enable context smoothing on any new Canvas element created.\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasPool.enableSmoothing\r\n     * @since 3.0.0\r\n     */\r\n    var enableSmoothing = function ()\r\n    {\r\n        _disableContextSmoothing = false;\r\n    };\r\n\r\n    return {\r\n        create2D: create2D,\r\n        create: create,\r\n        createWebGL: createWebGL,\r\n        disableSmoothing: disableSmoothing,\r\n        enableSmoothing: enableSmoothing,\r\n        first: first,\r\n        free: free,\r\n        pool: pool,\r\n        remove: remove,\r\n        total: total\r\n    };\r\n};\r\n\r\n//  If we export the called function here, it'll only be invoked once (not every time it's required).\r\nmodule.exports = CanvasPool();\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Browser specific prefix, so not going to change between contexts, only between browsers\r\nvar prefix = '';\r\n\r\n/**\r\n * @namespace Phaser.Display.Canvas.Smoothing\r\n * @since 3.0.0\r\n */\r\nvar Smoothing = function ()\r\n{\r\n    /**\r\n     * Gets the Smoothing Enabled vendor prefix being used on the given context, or null if not set.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.getPrefix\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The canvas context to check.\r\n     *\r\n     * @return {string} The name of the property on the context which controls image smoothing (either `imageSmoothingEnabled` or a vendor-prefixed version thereof), or `null` if not supported.\r\n     */\r\n    var getPrefix = function (context)\r\n    {\r\n        var vendors = [ 'i', 'webkitI', 'msI', 'mozI', 'oI' ];\r\n\r\n        for (var i = 0; i < vendors.length; i++)\r\n        {\r\n            var s = vendors[i] + 'mageSmoothingEnabled';\r\n\r\n            if (s in context)\r\n            {\r\n                return s;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Sets the Image Smoothing property on the given context. Set to false to disable image smoothing.\r\n     * By default browsers have image smoothing enabled, which isn't always what you visually want, especially\r\n     * when using pixel art in a game. Note that this sets the property on the context itself, so that any image\r\n     * drawn to the context will be affected. This sets the property across all current browsers but support is\r\n     * patchy on earlier browsers, especially on mobile.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.enable\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context on which to enable smoothing.\r\n     *\r\n     * @return {(CanvasRenderingContext2D|WebGLRenderingContext)} The provided context.\r\n     */\r\n    var enable = function (context)\r\n    {\r\n        if (prefix === '')\r\n        {\r\n            prefix = getPrefix(context);\r\n        }\r\n\r\n        if (prefix)\r\n        {\r\n            context[prefix] = true;\r\n        }\r\n\r\n        return context;\r\n    };\r\n\r\n    /**\r\n     * Sets the Image Smoothing property on the given context. Set to false to disable image smoothing.\r\n     * By default browsers have image smoothing enabled, which isn't always what you visually want, especially\r\n     * when using pixel art in a game. Note that this sets the property on the context itself, so that any image\r\n     * drawn to the context will be affected. This sets the property across all current browsers but support is\r\n     * patchy on earlier browsers, especially on mobile.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.disable\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context on which to disable smoothing.\r\n     *\r\n     * @return {(CanvasRenderingContext2D|WebGLRenderingContext)} The provided context.\r\n     */\r\n    var disable = function (context)\r\n    {\r\n        if (prefix === '')\r\n        {\r\n            prefix = getPrefix(context);\r\n        }\r\n\r\n        if (prefix)\r\n        {\r\n            context[prefix] = false;\r\n        }\r\n\r\n        return context;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the given context has image smoothing enabled, otherwise returns `false`.\r\n     * Returns null if no smoothing prefix is available.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.isEnabled\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context to check.\r\n     *\r\n     * @return {?boolean} `true` if smoothing is enabled on the context, otherwise `false`. `null` if not supported.\r\n     */\r\n    var isEnabled = function (context)\r\n    {\r\n        return (prefix !== null) ? context[prefix] : null;\r\n    };\r\n\r\n    return {\r\n        disable: disable,\r\n        enable: enable,\r\n        getPrefix: getPrefix,\r\n        isEnabled: isEnabled\r\n    };\r\n\r\n};\r\n\r\nmodule.exports = Smoothing();\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Source object\r\n//  The key as a string, or an array of keys, i.e. 'banner', or 'banner.hideBanner'\r\n//  The default value to use if the key doesn't exist\r\n\r\n/**\r\n * Retrieves a value from an object.\r\n *\r\n * @function Phaser.Utils.Objects.GetValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`) - `banner.hideBanner` would return the value of the `hideBanner` property from the object stored in the `banner` property of the `source` object.\r\n * @param {*} defaultValue - The value to return if the `key` isn't found in the `source` object.\r\n *\r\n * @return {*} The value of the requested key.\r\n */\r\nvar GetValue = function (source, key, defaultValue)\r\n{\r\n    if (!source || typeof source === 'number')\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (source.hasOwnProperty(key))\r\n    {\r\n        return source[key];\r\n    }\r\n    else if (key.indexOf('.') !== -1)\r\n    {\r\n        var keys = key.split('.');\r\n        var parent = source;\r\n        var value = defaultValue;\r\n\r\n        //  Use for loop here so we can break early\r\n        for (var i = 0; i < keys.length; i++)\r\n        {\r\n            if (parent.hasOwnProperty(keys[i]))\r\n            {\r\n                //  Yes it has a key property, let's carry on down\r\n                value = parent[keys[i]];\r\n\r\n                parent = parent[keys[i]];\r\n            }\r\n            else\r\n            {\r\n                //  Can't go any further, so reset to default\r\n                value = defaultValue;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n    else\r\n    {\r\n        return defaultValue;\r\n    }\r\n};\r\n\r\nmodule.exports = GetValue;\r\n"],"names":["Arne16","CanvasPool","GetValue","module","exports","config","data","canvas","palette","pixelWidth","pixelHeight","resizeCanvas","clearCanvas","preRender","postRender","width","Math","floor","abs","length","height","create2D","this","ctx","getContext","clearRect","y","row","x","d","fillStyle","fillRect","GenerateTexture","Palettes","A","B","C","D","E","F","ARNE16","C64","CGA","JMP","MSX","create","first","total","CONST","Smoothing","pool","_disableContextSmoothing","c","forEach","container","parent","CANVAS","canvasType","selfParent","undefined","document","createElement","type","push","disable","createWebGL","WEBGL","disableSmoothing","enableSmoothing","i","free","remove","isCanvas","HTMLCanvasElement","getPrefix","prefix","context","enable","vendors","s","isEnabled","source","key","defaultValue","hasOwnProperty","indexOf","keys","split","value"],"sourceRoot":""}