{"version":3,"file":"js/phaser-utils.5449220c579470b096ff.js","mappings":"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","sources":["webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/RotateAround.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/TransformXY.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/angle/Wrap.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/angle/WrapDegrees.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/math/const.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/array/FindClosestInSorted.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/array/Remove.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/array/RotateLeft.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/array/RotateRight.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/array/Shuffle.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/array/SortByDigits.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/array/SpliceOne.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/base64/index.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/index.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/Clone.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/DeepCopy.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/GetAdvancedValue.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/GetFastValue.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/GetMinMaxValue.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/GetValue.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/HasAll.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/HasAny.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/HasValue.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/Merge.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/MergeRight.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/Pick.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/SetValue.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/object/index.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/string/Format.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/string/RemoveAt.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/string/Reverse.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/string/UUID.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/string/UppercaseFirst.js","webpack://@agogpixel/phaser3-demo/./node_modules/phaser/src/utils/string/index.js"],"sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Rotate a `point` around `x` and `y` to the given `angle`, at the same distance.\r\n *\r\n * In polar notation, this maps a point from (r, t) to (r, angle), vs. the origin (x, y).\r\n *\r\n * @function Phaser.Math.RotateAround\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Types.Math.Vector2Like} T - [point,$return]\r\n *\r\n * @param {(Phaser.Geom.Point|object)} point - The point to be rotated.\r\n * @param {number} x - The horizontal coordinate to rotate around.\r\n * @param {number} y - The vertical coordinate to rotate around.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Types.Math.Vector2Like} The given point.\r\n */\r\nvar RotateAround = function (point, x, y, angle)\r\n{\r\n    var c = Math.cos(angle);\r\n    var s = Math.sin(angle);\r\n\r\n    var tx = point.x - x;\r\n    var ty = point.y - y;\r\n\r\n    point.x = tx * c - ty * s + x;\r\n    point.y = tx * s + ty * c + y;\r\n\r\n    return point;\r\n};\r\n\r\nmodule.exports = RotateAround;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Vector2 = require('./Vector2');\r\n\r\n/**\r\n * Takes the `x` and `y` coordinates and transforms them into the same space as\r\n * defined by the position, rotation and scale values.\r\n *\r\n * @function Phaser.Math.TransformXY\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The x coordinate to be transformed.\r\n * @param {number} y - The y coordinate to be transformed.\r\n * @param {number} positionX - Horizontal position of the transform point.\r\n * @param {number} positionY - Vertical position of the transform point.\r\n * @param {number} rotation - Rotation of the transform point, in radians.\r\n * @param {number} scaleX - Horizontal scale of the transform point.\r\n * @param {number} scaleY - Vertical scale of the transform point.\r\n * @param {(Phaser.Math.Vector2|Phaser.Geom.Point|object)} [output] - The output vector, point or object for the translated coordinates.\r\n *\r\n * @return {(Phaser.Math.Vector2|Phaser.Geom.Point|object)} The translated point.\r\n */\r\nvar TransformXY = function (x, y, positionX, positionY, rotation, scaleX, scaleY, output)\r\n{\r\n    if (output === undefined) { output = new Vector2(); }\r\n\r\n    var radianSin = Math.sin(rotation);\r\n    var radianCos = Math.cos(rotation);\r\n\r\n    // Rotate and Scale\r\n    var a = radianCos * scaleX;\r\n    var b = radianSin * scaleX;\r\n    var c = -radianSin * scaleY;\r\n    var d = radianCos * scaleY;\r\n\r\n    //  Invert\r\n    var id = 1 / ((a * d) + (c * -b));\r\n\r\n    output.x = (d * id * x) + (-c * id * y) + (((positionY * c) - (positionX * d)) * id);\r\n    output.y = (a * id * y) + (-b * id * x) + (((-positionY * a) + (positionX * b)) * id);\r\n\r\n    return output;\r\n};\r\n\r\nmodule.exports = TransformXY;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MathWrap = require('../Wrap');\r\n\r\n/**\r\n * Wrap an angle.\r\n *\r\n * Wraps the angle to a value in the range of -PI to PI.\r\n *\r\n * @function Phaser.Math.Angle.Wrap\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in radians.\r\n *\r\n * @return {number} The wrapped angle, in radians.\r\n */\r\nvar Wrap = function (angle)\r\n{\r\n    return MathWrap(angle, -Math.PI, Math.PI);\r\n};\r\n\r\nmodule.exports = Wrap;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Wrap = require('../Wrap');\r\n\r\n/**\r\n * Wrap an angle in degrees.\r\n *\r\n * Wraps the angle to a value in the range of -180 to 180.\r\n *\r\n * @function Phaser.Math.Angle.WrapDegrees\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in degrees.\r\n *\r\n * @return {number} The wrapped angle, in degrees.\r\n */\r\nvar WrapDegrees = function (angle)\r\n{\r\n    return Wrap(angle, -180, 180);\r\n};\r\n\r\nmodule.exports = WrapDegrees;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MATH_CONST = {\r\n\r\n    /**\r\n     * The value of PI * 2.\r\n     * \r\n     * @name Phaser.Math.PI2\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PI2: Math.PI * 2,\r\n\r\n    /**\r\n     * The value of PI * 0.5.\r\n     * \r\n     * @name Phaser.Math.TAU\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    TAU: Math.PI * 0.5,\r\n\r\n    /**\r\n     * An epsilon value (1.0e-6)\r\n     * \r\n     * @name Phaser.Math.EPSILON\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    EPSILON: 1.0e-6,\r\n\r\n    /**\r\n     * For converting degrees to radians (PI / 180)\r\n     * \r\n     * @name Phaser.Math.DEG_TO_RAD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    DEG_TO_RAD: Math.PI / 180,\r\n\r\n    /**\r\n     * For converting radians to degrees (180 / PI)\r\n     * \r\n     * @name Phaser.Math.RAD_TO_DEG\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    RAD_TO_DEG: 180 / Math.PI,\r\n\r\n    /**\r\n     * An instance of the Random Number Generator.\r\n     * This is not set until the Game boots.\r\n     * \r\n     * @name Phaser.Math.RND\r\n     * @type {Phaser.Math.RandomDataGenerator}\r\n     * @since 3.0.0\r\n     */\r\n    RND: null,\r\n\r\n    /**\r\n     * The minimum safe integer this browser supports.\r\n     * We use a const for backward compatibility with Internet Explorer.\r\n     * \r\n     * @name Phaser.Math.MIN_SAFE_INTEGER\r\n     * @type {number}\r\n     * @since 3.21.0\r\n     */\r\n    MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\r\n\r\n    /**\r\n     * The maximum safe integer this browser supports.\r\n     * We use a const for backward compatibility with Internet Explorer.\r\n     * \r\n     * @name Phaser.Math.MAX_SAFE_INTEGER\r\n     * @type {number}\r\n     * @since 3.21.0\r\n     */\r\n    MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\r\n\r\n};\r\n\r\nmodule.exports = MATH_CONST;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Searches a pre-sorted array for the closet value to the given number.\r\n *\r\n * If the `key` argument is given it will assume the array contains objects that all have the required `key` property name,\r\n * and will check for the closest value of those to the given number.\r\n *\r\n * @function Phaser.Utils.Array.FindClosestInSorted\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to search for in the array.\r\n * @param {array} array - The array to search, which must be sorted.\r\n * @param {string} [key] - An optional property key. If specified the array elements property will be checked against value.\r\n *\r\n * @return {(number|any)} The nearest value found in the array, or if a `key` was given, the nearest object with the matching property value.\r\n */\r\nvar FindClosestInSorted = function (value, array, key)\r\n{\r\n    if (!array.length)\r\n    {\r\n        return NaN;\r\n    }\r\n    else if (array.length === 1)\r\n    {\r\n        return array[0];\r\n    }\r\n\r\n    var i = 1;\r\n    var low;\r\n    var high;\r\n\r\n    if (key)\r\n    {\r\n        if (value < array[0][key])\r\n        {\r\n            return array[0];\r\n        }\r\n\r\n        while (array[i][key] < value)\r\n        {\r\n            i++;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        while (array[i] < value)\r\n        {\r\n            i++;\r\n        }\r\n    }\r\n\r\n    if (i > array.length)\r\n    {\r\n        i = array.length;\r\n    }\r\n\r\n    if (key)\r\n    {\r\n        low = array[i - 1][key];\r\n        high = array[i][key];\r\n\r\n        return ((high - value) <= (value - low)) ? array[i] : array[i - 1];\r\n    }\r\n    else\r\n    {\r\n        low = array[i - 1];\r\n        high = array[i];\r\n\r\n        return ((high - value) <= (value - low)) ? high : low;\r\n    }\r\n};\r\n\r\nmodule.exports = FindClosestInSorted;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar SpliceOne = require('./SpliceOne');\r\n\r\n/**\r\n * Removes the given item, or array of items, from the array.\r\n *\r\n * The array is modified in-place.\r\n *\r\n * You can optionally specify a callback to be invoked for each item successfully removed from the array.\r\n *\r\n * @function Phaser.Utils.Array.Remove\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to be modified.\r\n * @param {*|Array.<*>} item - The item, or array of items, to be removed from the array.\r\n * @param {function} [callback] - A callback to be invoked for each item successfully removed from the array.\r\n * @param {object} [context] - The context in which the callback is invoked.\r\n *\r\n * @return {*|Array.<*>} The item, or array of items, that were successfully removed from the array.\r\n */\r\nvar Remove = function (array, item, callback, context)\r\n{\r\n    if (context === undefined) { context = array; }\r\n\r\n    var index;\r\n\r\n    //  Fast path to avoid array mutation and iteration\r\n    if (!Array.isArray(item))\r\n    {\r\n        index = array.indexOf(item);\r\n\r\n        if (index !== -1)\r\n        {\r\n            SpliceOne(array, index);\r\n\r\n            if (callback)\r\n            {\r\n                callback.call(context, item);\r\n            }\r\n\r\n            return item;\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    //  If we got this far, we have an array of items to remove\r\n\r\n    var itemLength = item.length - 1;\r\n    var removed = [];\r\n\r\n    while (itemLength >= 0)\r\n    {\r\n        var entry = item[itemLength];\r\n\r\n        index = array.indexOf(entry);\r\n\r\n        if (index !== -1)\r\n        {\r\n            SpliceOne(array, index);\r\n\r\n            removed.push(entry);\r\n\r\n            if (callback)\r\n            {\r\n                callback.call(context, entry);\r\n            }\r\n        }\r\n\r\n        itemLength--;\r\n    }\r\n\r\n    return removed;\r\n};\r\n\r\nmodule.exports = Remove;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Moves the element at the start of the array to the end, shifting all items in the process.\r\n * The \"rotation\" happens to the left.\r\n *\r\n * @function Phaser.Utils.Array.RotateLeft\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to shift to the left. This array is modified in place.\r\n * @param {number} [total=1] - The number of times to shift the array.\r\n *\r\n * @return {*} The most recently shifted element.\r\n */\r\nvar RotateLeft = function (array, total)\r\n{\r\n    if (total === undefined) { total = 1; }\r\n\r\n    var element = null;\r\n\r\n    for (var i = 0; i < total; i++)\r\n    {\r\n        element = array.shift();\r\n        array.push(element);\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\nmodule.exports = RotateLeft;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Moves the element at the end of the array to the start, shifting all items in the process.\r\n * The \"rotation\" happens to the right.\r\n *\r\n * @function Phaser.Utils.Array.RotateRight\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to shift to the right. This array is modified in place.\r\n * @param {number} [total=1] - The number of times to shift the array.\r\n *\r\n * @return {*} The most recently shifted element.\r\n */\r\nvar RotateRight = function (array, total)\r\n{\r\n    if (total === undefined) { total = 1; }\r\n\r\n    var element = null;\r\n\r\n    for (var i = 0; i < total; i++)\r\n    {\r\n        element = array.pop();\r\n        array.unshift(element);\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\nmodule.exports = RotateRight;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Shuffles the contents of the given array using the Fisher-Yates implementation.\r\n *\r\n * The original array is modified directly and returned.\r\n *\r\n * @function Phaser.Utils.Array.Shuffle\r\n * @since 3.0.0\r\n *\r\n * @generic T\r\n * @genericUse {T[]} - [array,$return]\r\n *\r\n * @param {T[]} array - The array to shuffle. This array is modified in place.\r\n *\r\n * @return {T[]} The shuffled array.\r\n */\r\nvar Shuffle = function (array)\r\n{\r\n    for (var i = array.length - 1; i > 0; i--)\r\n    {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n\r\n    return array;\r\n};\r\n\r\nmodule.exports = Shuffle;\r\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Takes the given array and runs a numeric sort on it, ignoring any non-digits that\n * may be in the entries.\n *\n * You should only run this on arrays containing strings.\n *\n * @function Phaser.Utils.Array.SortByDigits\n * @since 3.50.0\n *\n * @param {string[]} array - The input array of strings.\n *\n * @return {string[]} The sorted input array.\n */\nvar SortByDigits = function (array)\n{\n    var re = /\\D/g;\n\n    array.sort(function (a, b)\n    {\n        return (parseInt(a.replace(re, ''), 10) - parseInt(b.replace(re, ''), 10));\n    });\n\n    return array;\n};\n\nmodule.exports = SortByDigits;\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Removes a single item from an array and returns it without creating gc, like the native splice does.\r\n * Based on code by Mike Reinstein.\r\n *\r\n * @function Phaser.Utils.Array.SpliceOne\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to splice from.\r\n * @param {number} index - The index of the item which should be spliced.\r\n *\r\n * @return {*} The item which was spliced (removed).\r\n */\r\nvar SpliceOne = function (array, index)\r\n{\r\n    if (index >= array.length)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var len = array.length - 1;\r\n\r\n    var item = array[index];\r\n\r\n    for (var i = index; i < len; i++)\r\n    {\r\n        array[i] = array[i + 1];\r\n    }\r\n\r\n    array.length = len;\r\n\r\n    return item;\r\n};\r\n\r\nmodule.exports = SpliceOne;\r\n","/**\r\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n/**\r\n * Converts an ArrayBuffer into a base64 string.\r\n * \r\n * The resulting string can optionally be a data uri if the `mediaType` argument is provided.\r\n * \r\n * See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs for more details.\r\n *\r\n * @function Phaser.Utils.Base64.ArrayBufferToBase64\r\n * @since 3.18.0\r\n * \r\n * @param {ArrayBuffer} arrayBuffer - The Array Buffer to encode.\r\n * @param {string} [mediaType] - An optional media type, i.e. `audio/ogg` or `image/jpeg`. If included the resulting string will be a data URI.\r\n * \r\n * @return {string} The base64 encoded Array Buffer.\r\n */\r\nvar ArrayBufferToBase64 = function (arrayBuffer, mediaType)\r\n{\r\n    var bytes = new Uint8Array(arrayBuffer);\r\n    var len = bytes.length;\r\n\r\n    var base64 = (mediaType) ? 'data:' + mediaType + ';base64,' : '';\r\n\r\n    for (var i = 0; i < len; i += 3)\r\n    {\r\n        base64 += chars[bytes[i] >> 2];\r\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n        base64 += chars[bytes[i + 2] & 63];\r\n    }\r\n\r\n    if ((len % 3) === 2)\r\n    {\r\n        base64 = base64.substring(0, base64.length - 1) + '=';\r\n    }\r\n    else if (len % 3 === 1)\r\n    {\r\n        base64 = base64.substring(0, base64.length - 2) + '==';\r\n    }\r\n  \r\n    return base64;\r\n};\r\n\r\nmodule.exports = ArrayBufferToBase64;\r\n","/**\r\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n//  Use a lookup table to find the index.\r\nvar lookup = new Uint8Array(256);\r\n\r\nfor (var i = 0; i < chars.length; i++)\r\n{\r\n    lookup[chars.charCodeAt(i)] = i;\r\n}\r\n\r\n/**\r\n * Converts a base64 string, either with or without a data uri, into an Array Buffer.\r\n *\r\n * @function Phaser.Utils.Base64.Base64ToArrayBuffer\r\n * @since 3.18.0\r\n * \r\n * @param {string} base64 - The base64 string to be decoded. Can optionally contain a data URI header, which will be stripped out prior to decoding.\r\n * \r\n * @return {ArrayBuffer} An ArrayBuffer decoded from the base64 data.\r\n */\r\nvar Base64ToArrayBuffer = function (base64)\r\n{\r\n    //  Is it a data uri? if so, strip the header away\r\n    base64 = base64.substr(base64.indexOf(',') + 1);\r\n\r\n    var len = base64.length;\r\n    var bufferLength = len * 0.75;\r\n    var p = 0;\r\n    var encoded1;\r\n    var encoded2;\r\n    var encoded3;\r\n    var encoded4;\r\n\r\n    if (base64[len - 1] === '=')\r\n    {\r\n        bufferLength--;\r\n\r\n        if (base64[len - 2] === '=')\r\n        {\r\n            bufferLength--;\r\n        }\r\n    }\r\n\r\n    var arrayBuffer = new ArrayBuffer(bufferLength);\r\n    var bytes = new Uint8Array(arrayBuffer);\r\n\r\n    for (var i = 0; i < len; i += 4)\r\n    {\r\n        encoded1 = lookup[base64.charCodeAt(i)];\r\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\r\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\r\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\r\n\r\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n\r\n    return arrayBuffer;\r\n};\r\n\r\nmodule.exports = Base64ToArrayBuffer;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Utils.Base64\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    ArrayBufferToBase64: require('./ArrayBufferToBase64'),\r\n    Base64ToArrayBuffer: require('./Base64ToArrayBuffer')\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Utils\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    Array: require('./array/'),\r\n    Base64: require('./base64/'),\r\n    Objects: require('./object/'),\r\n    String: require('./string/'),\r\n    NOOP: require('./NOOP')\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Shallow Object Clone. Will not clone nested objects.\r\n *\r\n * @function Phaser.Utils.Objects.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {object} obj - The object to clone.\r\n *\r\n * @return {object} A new object with the same properties as the input object.\r\n */\r\nvar Clone = function (obj)\r\n{\r\n    var clone = {};\r\n\r\n    for (var key in obj)\r\n    {\r\n        if (Array.isArray(obj[key]))\r\n        {\r\n            clone[key] = obj[key].slice(0);\r\n        }\r\n        else\r\n        {\r\n            clone[key] = obj[key];\r\n        }\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nmodule.exports = Clone;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Deep Copy the given object or array.\r\n *\r\n * @function Phaser.Utils.Objects.DeepCopy\r\n * @since 3.50.0\r\n *\r\n * @param {object} obj - The object to deep copy.\r\n *\r\n * @return {object} A deep copy of the original object.\r\n */\r\nvar DeepCopy = function (inObject)\r\n{\r\n    var outObject;\r\n    var value;\r\n    var key;\r\n\r\n    if (typeof inObject !== 'object' || inObject === null)\r\n    {\r\n        //  inObject is not an object\r\n        return inObject;\r\n    }\r\n\r\n    //  Create an array or object to hold the values\r\n    outObject = Array.isArray(inObject) ? [] : {};\r\n\r\n    for (key in inObject)\r\n    {\r\n        value = inObject[key];\r\n\r\n        //  Recursively (deep) copy for nested objects, including arrays\r\n        outObject[key] = DeepCopy(value);\r\n    }\r\n\r\n    return outObject;\r\n};\r\n\r\nmodule.exports = DeepCopy;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MATH = require('../../math');\r\nvar GetValue = require('./GetValue');\r\n\r\n/**\r\n * Retrieves a value from an object. Allows for more advanced selection options, including:\r\n *\r\n * Allowed types:\r\n * \r\n * Implicit\r\n * {\r\n *     x: 4\r\n * }\r\n *\r\n * From function\r\n * {\r\n *     x: function ()\r\n * }\r\n *\r\n * Randomly pick one element from the array\r\n * {\r\n *     x: [a, b, c, d, e, f]\r\n * }\r\n *\r\n * Random integer between min and max:\r\n * {\r\n *     x: { randInt: [min, max] }\r\n * }\r\n *\r\n * Random float between min and max:\r\n * {\r\n *     x: { randFloat: [min, max] }\r\n * }\r\n * \r\n *\r\n * @function Phaser.Utils.Objects.GetAdvancedValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`) - `banner.hideBanner` would return the value of the `hideBanner` property from the object stored in the `banner` property of the `source` object.\r\n * @param {*} defaultValue - The value to return if the `key` isn't found in the `source` object.\r\n *\r\n * @return {*} The value of the requested key.\r\n */\r\nvar GetAdvancedValue = function (source, key, defaultValue)\r\n{\r\n    var value = GetValue(source, key, null);\r\n\r\n    if (value === null)\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (Array.isArray(value))\r\n    {\r\n        return MATH.RND.pick(value);\r\n    }\r\n    else if (typeof value === 'object')\r\n    {\r\n        if (value.hasOwnProperty('randInt'))\r\n        {\r\n            return MATH.RND.integerInRange(value.randInt[0], value.randInt[1]);\r\n        }\r\n        else if (value.hasOwnProperty('randFloat'))\r\n        {\r\n            return MATH.RND.realInRange(value.randFloat[0], value.randFloat[1]);\r\n        }\r\n    }\r\n    else if (typeof value === 'function')\r\n    {\r\n        return value(key);\r\n    }\r\n\r\n    return value;\r\n};\r\n\r\nmodule.exports = GetAdvancedValue;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Finds the key within the top level of the {@link source} object, or returns {@link defaultValue}\r\n *\r\n * @function Phaser.Utils.Objects.GetFastValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to search\r\n * @param {string} key - The key for the property on source. Must exist at the top level of the source object (no periods)\r\n * @param {*} [defaultValue] - The default value to use if the key does not exist.\r\n *\r\n * @return {*} The value if found; otherwise, defaultValue (null if none provided)\r\n */\r\nvar GetFastValue = function (source, key, defaultValue)\r\n{\r\n    var t = typeof(source);\r\n\r\n    if (!source || t === 'number' || t === 'string')\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (source.hasOwnProperty(key) && source[key] !== undefined)\r\n    {\r\n        return source[key];\r\n    }\r\n    else\r\n    {\r\n        return defaultValue;\r\n    }\r\n};\r\n\r\nmodule.exports = GetFastValue;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetValue = require('./GetValue');\r\nvar Clamp = require('../../math/Clamp');\r\n\r\n/**\r\n * Retrieves and clamps a numerical value from an object.\r\n *\r\n * @function Phaser.Utils.Objects.GetMinMaxValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`).\r\n * @param {number} min - The minimum value which can be returned.\r\n * @param {number} max - The maximum value which can be returned.\r\n * @param {number} defaultValue - The value to return if the property doesn't exist. It's also constrained to the given bounds.\r\n *\r\n * @return {number} The clamped value from the `source` object.\r\n */\r\nvar GetMinMaxValue = function (source, key, min, max, defaultValue)\r\n{\r\n    if (defaultValue === undefined) { defaultValue = min; }\r\n\r\n    var value = GetValue(source, key, defaultValue);\r\n\r\n    return Clamp(value, min, max);\r\n};\r\n\r\nmodule.exports = GetMinMaxValue;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Source object\r\n//  The key as a string, or an array of keys, i.e. 'banner', or 'banner.hideBanner'\r\n//  The default value to use if the key doesn't exist\r\n\r\n/**\r\n * Retrieves a value from an object.\r\n *\r\n * @function Phaser.Utils.Objects.GetValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`) - `banner.hideBanner` would return the value of the `hideBanner` property from the object stored in the `banner` property of the `source` object.\r\n * @param {*} defaultValue - The value to return if the `key` isn't found in the `source` object.\r\n *\r\n * @return {*} The value of the requested key.\r\n */\r\nvar GetValue = function (source, key, defaultValue)\r\n{\r\n    if (!source || typeof source === 'number')\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (source.hasOwnProperty(key))\r\n    {\r\n        return source[key];\r\n    }\r\n    else if (key.indexOf('.') !== -1)\r\n    {\r\n        var keys = key.split('.');\r\n        var parent = source;\r\n        var value = defaultValue;\r\n\r\n        //  Use for loop here so we can break early\r\n        for (var i = 0; i < keys.length; i++)\r\n        {\r\n            if (parent.hasOwnProperty(keys[i]))\r\n            {\r\n                //  Yes it has a key property, let's carry on down\r\n                value = parent[keys[i]];\r\n\r\n                parent = parent[keys[i]];\r\n            }\r\n            else\r\n            {\r\n                //  Can't go any further, so reset to default\r\n                value = defaultValue;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n    else\r\n    {\r\n        return defaultValue;\r\n    }\r\n};\r\n\r\nmodule.exports = GetValue;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Verifies that an object contains all requested keys\r\n *\r\n * @function Phaser.Utils.Objects.HasAll\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - an object on which to check for key existence\r\n * @param {string[]} keys - an array of keys to ensure the source object contains\r\n *\r\n * @return {boolean} true if the source object contains all keys, false otherwise.\r\n */\r\nvar HasAll = function (source, keys)\r\n{\r\n    for (var i = 0; i < keys.length; i++)\r\n    {\r\n        if (!source.hasOwnProperty(keys[i]))\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nmodule.exports = HasAll;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Verifies that an object contains at least one of the requested keys\r\n *\r\n * @function Phaser.Utils.Objects.HasAny\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - an object on which to check for key existence\r\n * @param {string[]} keys - an array of keys to search the object for\r\n *\r\n * @return {boolean} true if the source object contains at least one of the keys, false otherwise\r\n */\r\nvar HasAny = function (source, keys)\r\n{\r\n    for (var i = 0; i < keys.length; i++)\r\n    {\r\n        if (source.hasOwnProperty(keys[i]))\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nmodule.exports = HasAny;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Determine whether the source object has a property with the specified key.\r\n *\r\n * @function Phaser.Utils.Objects.HasValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The source object to be checked.\r\n * @param {string} key - The property to check for within the object\r\n *\r\n * @return {boolean} `true` if the provided `key` exists on the `source` object, otherwise `false`.\r\n */\r\nvar HasValue = function (source, key)\r\n{\r\n    return (source.hasOwnProperty(key));\r\n};\r\n\r\nmodule.exports = HasValue;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Clone = require('./Clone');\r\n\r\n/**\r\n * Creates a new Object using all values from obj1 and obj2.\r\n * If a value exists in both obj1 and obj2, the value in obj1 is used.\r\n * \r\n * This is only a shallow copy. Deeply nested objects are not cloned, so be sure to only use this\r\n * function on shallow objects.\r\n *\r\n * @function Phaser.Utils.Objects.Merge\r\n * @since 3.0.0\r\n *\r\n * @param {object} obj1 - The first object.\r\n * @param {object} obj2 - The second object.\r\n *\r\n * @return {object} A new object containing the union of obj1's and obj2's properties.\r\n */\r\nvar Merge = function (obj1, obj2)\r\n{\r\n    var clone = Clone(obj1);\r\n\r\n    for (var key in obj2)\r\n    {\r\n        if (!clone.hasOwnProperty(key))\r\n        {\r\n            clone[key] = obj2[key];\r\n        }\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nmodule.exports = Merge;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Clone = require('./Clone');\r\n\r\n/**\r\n * Creates a new Object using all values from obj1.\r\n * \r\n * Then scans obj2. If a property is found in obj2 that *also* exists in obj1, the value from obj2 is used, otherwise the property is skipped.\r\n *\r\n * @function Phaser.Utils.Objects.MergeRight\r\n * @since 3.0.0\r\n *\r\n * @param {object} obj1 - The first object to merge.\r\n * @param {object} obj2 - The second object to merge. Keys from this object which also exist in `obj1` will be copied to `obj1`.\r\n *\r\n * @return {object} The merged object. `obj1` and `obj2` are not modified.\r\n */\r\nvar MergeRight = function (obj1, obj2)\r\n{\r\n    var clone = Clone(obj1);\r\n\r\n    for (var key in obj2)\r\n    {\r\n        if (clone.hasOwnProperty(key))\r\n        {\r\n            clone[key] = obj2[key];\r\n        }\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nmodule.exports = MergeRight;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar HasValue = require('./HasValue');\r\n\r\n/**\r\n * Returns a new object that only contains the `keys` that were found on the object provided.\r\n * If no `keys` are found, an empty object is returned.\r\n *\r\n * @function Phaser.Utils.Objects.Pick\r\n * @since 3.18.0\r\n *\r\n * @param {object} object - The object to pick the provided keys from.\r\n * @param {array} keys - An array of properties to retrieve from the provided object.\r\n *\r\n * @return {object} A new object that only contains the `keys` that were found on the provided object. If no `keys` were found, an empty object will be returned.\r\n */\r\nvar Pick = function (object, keys)\r\n{\r\n    var obj = {};\r\n\r\n    for (var i = 0; i < keys.length; i++)\r\n    {\r\n        var key = keys[i];\r\n\r\n        if (HasValue(object, key))\r\n        {\r\n            obj[key] = object[key];\r\n        }\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nmodule.exports = Pick;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Sets a value in an object, allowing for dot notation to control the depth of the property.\r\n * \r\n * For example:\r\n * \r\n * ```javascript\r\n * var data = {\r\n *   world: {\r\n *     position: {\r\n *       x: 200,\r\n *       y: 100\r\n *     }\r\n *   }\r\n * };\r\n * \r\n * SetValue(data, 'world.position.y', 300);\r\n * \r\n * console.log(data.world.position.y); // 300\r\n * ```\r\n *\r\n * @function Phaser.Utils.Objects.SetValue\r\n * @since 3.17.0\r\n *\r\n * @param {object} source - The object to set the value in.\r\n * @param {string} key - The name of the property in the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`)\r\n * @param {any} value - The value to set into the property, if found in the source object.\r\n *\r\n * @return {boolean} `true` if the property key was valid and the value was set, otherwise `false`.\r\n */\r\nvar SetValue = function (source, key, value)\r\n{\r\n    if (!source || typeof source === 'number')\r\n    {\r\n        return false;\r\n    }\r\n    else if (source.hasOwnProperty(key))\r\n    {\r\n        source[key] = value;\r\n\r\n        return true;\r\n    }\r\n    else if (key.indexOf('.') !== -1)\r\n    {\r\n        var keys = key.split('.');\r\n        var parent = source;\r\n        var prev = source;\r\n\r\n        //  Use for loop here so we can break early\r\n        for (var i = 0; i < keys.length; i++)\r\n        {\r\n            if (parent.hasOwnProperty(keys[i]))\r\n            {\r\n                //  Yes it has a key property, let's carry on down\r\n                prev = parent;\r\n                parent = parent[keys[i]];\r\n            }\r\n            else\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        prev[keys[keys.length - 1]] = value;\r\n\r\n        return true;\r\n    }\r\n    \r\n    return false;\r\n};\r\n\r\nmodule.exports = SetValue;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Utils.Objects\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    Clone: require('./Clone'),\r\n    DeepCopy: require('./DeepCopy'),\r\n    Extend: require('./Extend'),\r\n    GetAdvancedValue: require('./GetAdvancedValue'),\r\n    GetFastValue: require('./GetFastValue'),\r\n    GetMinMaxValue: require('./GetMinMaxValue'),\r\n    GetValue: require('./GetValue'),\r\n    HasAll: require('./HasAll'),\r\n    HasAny: require('./HasAny'),\r\n    HasValue: require('./HasValue'),\r\n    IsPlainObject: require('./IsPlainObject'),\r\n    Merge: require('./Merge'),\r\n    MergeRight: require('./MergeRight'),\r\n    Pick: require('./Pick'),\r\n    SetValue: require('./SetValue')\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes a string and replaces instances of markers with values in the given array.\r\n * The markers take the form of `%1`, `%2`, etc. I.e.:\r\n *\r\n * `Format(\"The %1 is worth %2 gold\", [ 'Sword', 500 ])`\r\n *\r\n * @function Phaser.Utils.String.Format\r\n * @since 3.0.0\r\n *\r\n * @param {string} string - The string containing the replacement markers.\r\n * @param {array} values - An array containing values that will replace the markers. If no value exists an empty string is inserted instead.\r\n *\r\n * @return {string} The string containing replaced values.\r\n */\r\nvar Format = function (string, values)\r\n{\r\n    return string.replace(/%([0-9]+)/g, function (s, n)\r\n    {\r\n        return values[Number(n) - 1];\r\n    });\r\n};\r\n\r\nmodule.exports = Format;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes a string and removes the character at the given index.\r\n *\r\n * @function Phaser.Utils.String.RemoveAt\r\n * @since 3.50.0\r\n *\r\n * @param {string} string - The string to be worked on.\r\n * @param {number} index - The index of the character to be removed.\r\n *\r\n * @return {string} The modified string.\r\n */\r\nvar RemoveAt = function (string, index)\r\n{\r\n    if (index === 0)\r\n    {\r\n        return string.slice(1);\r\n    }\r\n    else\r\n    {\r\n        return string.slice(0, index - 1) + string.slice(index);\r\n    }\r\n};\r\n\r\nmodule.exports = RemoveAt;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes the given string and reverses it, returning the reversed string.\r\n * For example if given the string `Atari 520ST` it would return `TS025 iratA`.\r\n *\r\n * @function Phaser.Utils.String.Reverse\r\n * @since 3.0.0\r\n *\r\n * @param {string} string - The string to be reversed.\r\n *\r\n * @return {string} The reversed string.\r\n */\r\nvar Reverse = function (string)\r\n{\r\n    return string.split('').reverse().join('');\r\n};\r\n\r\nmodule.exports = Reverse;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Creates and returns an RFC4122 version 4 compliant UUID.\r\n * \r\n * The string is in the form: `xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx` where each `x` is replaced with a random\r\n * hexadecimal digit from 0 to f, and `y` is replaced with a random hexadecimal digit from 8 to b.\r\n *\r\n * @function Phaser.Utils.String.UUID\r\n * @since 3.12.0\r\n *\r\n * @return {string} The UUID string.\r\n */\r\nvar UUID = function ()\r\n{\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c)\r\n    {\r\n        var r = Math.random() * 16 | 0;\r\n        var v = (c === 'x') ? r : (r & 0x3 | 0x8);\r\n\r\n        return v.toString(16);\r\n    });\r\n};\r\n\r\nmodule.exports = UUID;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Capitalizes the first letter of a string if there is one.\r\n * @example\r\n * UppercaseFirst('abc');\r\n * // returns 'Abc'\r\n * @example\r\n * UppercaseFirst('the happy family');\r\n * // returns 'The happy family'\r\n * @example\r\n * UppercaseFirst('');\r\n * // returns ''\r\n *\r\n * @function Phaser.Utils.String.UppercaseFirst\r\n * @since 3.0.0\r\n *\r\n * @param {string} str - The string to capitalize.\r\n *\r\n * @return {string} A new string, same as the first, but with the first letter capitalized.\r\n */\r\nvar UppercaseFirst = function (str)\r\n{\r\n    return str && str[0].toUpperCase() + str.slice(1);\r\n};\r\n\r\nmodule.exports = UppercaseFirst;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Utils.String\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    Format: require('./Format'),\r\n    Pad: require('./Pad'),\r\n    RemoveAt: require('./RemoveAt'),\r\n    Reverse: require('./Reverse'),\r\n    UppercaseFirst: require('./UppercaseFirst'),\r\n    UUID: require('./UUID')\r\n\r\n};\r\n"],"names":["module","exports","point","x","y","angle","c","Math","cos","s","sin","tx","ty","Vector2","positionX","positionY","rotation","scaleX","scaleY","output","undefined","radianSin","radianCos","a","b","d","id","MathWrap","PI","Wrap","MATH_CONST","PI2","TAU","EPSILON","DEG_TO_RAD","RAD_TO_DEG","RND","MIN_SAFE_INTEGER","Number","MAX_SAFE_INTEGER","value","array","key","length","NaN","low","high","i","SpliceOne","item","callback","context","index","Array","isArray","indexOf","call","itemLength","removed","entry","push","total","element","shift","pop","unshift","j","floor","random","temp","re","sort","parseInt","replace","len","chars","arrayBuffer","mediaType","bytes","Uint8Array","base64","substring","lookup","charCodeAt","encoded1","encoded2","encoded3","encoded4","substr","bufferLength","p","ArrayBuffer","ArrayBufferToBase64","Base64ToArrayBuffer","Base64","Objects","String","NOOP","obj","clone","slice","DeepCopy","inObject","outObject","MATH","GetValue","source","defaultValue","pick","hasOwnProperty","integerInRange","randInt","realInRange","randFloat","t","Clamp","min","max","keys","split","parent","Clone","obj1","obj2","HasValue","object","prev","Extend","GetAdvancedValue","GetFastValue","GetMinMaxValue","HasAll","HasAny","IsPlainObject","Merge","MergeRight","Pick","SetValue","string","values","n","reverse","join","r","toString","str","toUpperCase","Format","Pad","RemoveAt","Reverse","UppercaseFirst","UUID"],"sourceRoot":""}